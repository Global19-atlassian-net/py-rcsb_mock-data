{
   "$id": "https://github.com/rcsb/py-rcsb.db/tree/master/rcsb.db/data/json-schema/",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "title": "Schema for content type pdbx_core collection pdbx_core_entry_v5_0_2",
   "type": "object",
   "properties": {
      "audit_author": {
         "type": "object",
         "properties": {
            "identifier_ORCID": {
               "type": "string",
               "examples": [
                  "0000-0002-6686-5475"
               ],
               "description": "The Open Researcher and Contributor ID (ORCID)."
            },
            "name": {
               "type": "string",
               "examples": [
                  "Bleary, Percival R.",
                  "O'Neil, F.K.",
                  "Van den Bossche, G.",
                  "Yang, D.-L.",
                  "Simonov, Yu.A"
               ],
               "description": "The name of an author of this data block. If there are multiple\n authors, _audit_author.name is looped with _audit_author.address.\n The family name(s), followed by a comma and including any\n dynastic components, precedes the first name(s) or initial(s)."
            },
            "pdbx_ordinal": {
               "type": "integer",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "This data item defines the order of the author's name in the\n list of audit authors."
            }
         },
         "required": [
            "name",
            "pdbx_ordinal"
         ]
      },
      "cell": {
         "type": "object",
         "properties": {
            "Z_PDB": {
               "type": "integer",
               "minimum": 1,
               "description": "The number of the polymeric chains in a unit cell. In the case\n of heteropolymers, Z is the number of occurrences of the most\n populous chain.\n\n This data item is provided for compatibility with the original\n Protein Data Bank format, and only for that purpose."
            },
            "angle_alpha": {
               "type": "number",
               "minimum": 0.0,
               "maximum": 180.0,
               "description": "Unit-cell angle alpha of the reported structure in degrees."
            },
            "angle_alpha_esd": {
               "type": "number",
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.angle_alpha."
            },
            "angle_beta": {
               "type": "number",
               "minimum": 0.0,
               "maximum": 180.0,
               "description": "Unit-cell angle beta of the reported structure in degrees."
            },
            "angle_beta_esd": {
               "type": "number",
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.angle_beta."
            },
            "angle_gamma": {
               "type": "number",
               "minimum": 0.0,
               "maximum": 180.0,
               "description": "Unit-cell angle gamma of the reported structure in degrees."
            },
            "angle_gamma_esd": {
               "type": "number",
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.angle_gamma."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "formula_units_Z": {
               "type": "integer",
               "minimum": 1,
               "description": "The number of the formula units in the unit cell as specified\n by _chemical_formula.structural, _chemical_formula.moiety or\n _chemical_formula.sum."
            },
            "length_a": {
               "type": "number",
               "minimum": 0.0,
               "description": "Unit-cell length a corresponding to the structure reported in\nangstroms."
            },
            "length_a_esd": {
               "type": "number",
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.length_a."
            },
            "length_b": {
               "type": "number",
               "minimum": 0.0,
               "description": "Unit-cell length b corresponding to the structure reported in\n angstroms."
            },
            "length_b_esd": {
               "type": "number",
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.length_b."
            },
            "length_c": {
               "type": "number",
               "minimum": 0.0,
               "description": "Unit-cell length c corresponding to the structure reported in\nangstroms."
            },
            "length_c_esd": {
               "type": "number",
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.length_c."
            },
            "pdbx_unique_axis": {
               "type": "string",
               "description": "To further identify unique axis if necessary.  E.g., P 21 with\n an unique C axis will have 'C' in this field."
            },
            "reciprocal_angle_alpha": {
               "type": "number",
               "minimum": 0.0,
               "maximum": 180.0,
               "description": "The angle (recip-alpha) defining the reciprocal cell in degrees.\n (recip-alpha), (recip-alpha) and (recip-alpha) related to the\n angles in the real cell by:\n\n cos(recip-alpha)\n     = [cos(beta)*cos(gamma) - cos(alpha)]/[sin(beta)*sin(gamma)]\n\n cos(recip-beta)\n     = [cos(gamma)*cos(alpha) - cos(beta)]/[sin(gamma)*sin(alpha)]\n\n cos(recip-gamma)\n     = [cos(alpha)*cos(beta) - cos(gamma)]/[sin(alpha)*sin(beta)]\n\n Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.\n         New York: John Wiley & Sons Inc."
            },
            "reciprocal_angle_beta": {
               "type": "number",
               "minimum": 0.0,
               "maximum": 180.0,
               "description": "The angle (recip-beta) defining the reciprocal cell in degrees.\n (recip-alpha), (recip-alpha) and (recip-alpha) related to the\n angles in the real cell by:\n\n cos(recip-alpha)\n     = [cos(beta)*cos(gamma) - cos(alpha)]/[sin(beta)*sin(gamma)]\n\n cos(recip-beta)\n     = [cos(gamma)*cos(alpha) - cos(beta)]/[sin(gamma)*sin(alpha)]\n\n cos(recip-gamma)\n     = [cos(alpha)*cos(beta) - cos(gamma)]/[sin(alpha)*sin(beta)]\n\n Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.\n         New York: John Wiley & Sons Inc."
            },
            "reciprocal_angle_gamma": {
               "type": "number",
               "minimum": 0.0,
               "maximum": 180.0,
               "description": "The angle (recip-gamma) defining the reciprocal cell in degrees.\n (recip-alpha), (recip-alpha) and (recip-alpha) related to the\n angles in the real cell by:\n\n cos(recip-alpha)\n     = [cos(beta)*cos(gamma) - cos(alpha)]/[sin(beta)*sin(gamma)]\n\n cos(recip-beta)\n     = [cos(gamma)*cos(alpha) - cos(beta)]/[sin(gamma)*sin(alpha)]\n\n cos(recip-gamma)\n     = [cos(alpha)*cos(beta) - cos(gamma)]/[sin(alpha)*sin(beta)]\n\n Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.\n         New York: John Wiley & Sons Inc."
            },
            "volume": {
               "type": "number",
               "minimum": 0.0,
               "description": "Cell volume V in angstroms cubed.\n\n V = a b c (1 - cos^2^~alpha~ - cos^2^~beta~ - cos^2^~gamma~\n            + 2 cos~alpha~ cos~beta~ cos~gamma~)^1/2^\n\n a     = _cell.length_a\n b     = _cell.length_b\n c     = _cell.length_c\n alpha = _cell.angle_alpha\n beta  = _cell.angle_beta\n gamma = _cell.angle_gamma"
            }
         },
         "required": [
            "entry_id"
         ]
      },
      "citation": {
         "type": "object",
         "properties": {
            "book_id_ISBN": {
               "type": "string",
               "description": "The International Standard Book Number (ISBN) code assigned to\n the book cited; relevant for books or book chapters."
            },
            "book_publisher": {
               "type": "string",
               "examples": [
                  "John Wiley and Sons"
               ],
               "description": "The name of the publisher of the citation; relevant\n for books or book chapters."
            },
            "book_publisher_city": {
               "type": "string",
               "examples": [
                  "London"
               ],
               "description": "The location of the publisher of the citation; relevant\n for books or book chapters."
            },
            "book_title": {
               "type": "string",
               "description": "The title of the book in which the citation appeared; relevant\n for books or book chapters."
            },
            "coordinate_linkage": {
               "type": "string",
               "enum": [
                  "n",
                  "y",
                  "no",
                  "yes"
               ],
               "description": "_citation.coordinate_linkage states whether this citation\n is concerned with precisely the set of coordinates given in the\n data block. If, for instance, the publication described the same\n structure, but the coordinates had undergone further refinement\n prior to the creation of the data block, the value of this data\n item would be 'no'."
            },
            "country": {
               "type": "string",
               "description": "The country of publication; relevant for books\n and book chapters."
            },
            "id": {
               "type": "string",
               "examples": [
                  "primary",
                  "1",
                  "2"
               ],
               "description": "The value of _citation.id must uniquely identify a record in the\n CITATION list.\n\n The _citation.id 'primary' should be used to indicate the\n citation that the author(s) consider to be the most pertinent to\n the contents of the data block.\n\n Note that this item need not be a number; it can be any unique\n identifier."
            },
            "journal_abbrev": {
               "type": "string",
               "examples": [
                  "J. Mol. Biol."
               ],
               "description": "Abbreviated name of the cited journal as given in the\n Chemical Abstracts Service Source Index."
            },
            "journal_id_ASTM": {
               "type": "string",
               "description": "The American Society for Testing and Materials (ASTM) code\n assigned to the journal cited (also referred to as the CODEN\n designator of the Chemical Abstracts Service); relevant for\n journal articles."
            },
            "journal_id_CSD": {
               "type": "string",
               "examples": [
                  "0070"
               ],
               "description": "The Cambridge Structural Database (CSD) code assigned to the\n journal cited; relevant for journal articles. This is also the\n system used at the Protein Data Bank (PDB)."
            },
            "journal_id_ISSN": {
               "type": "string",
               "description": "The International Standard Serial Number (ISSN) code assigned to\n the journal cited; relevant for journal articles."
            },
            "journal_issue": {
               "type": "string",
               "examples": [
                  "2"
               ],
               "description": "Issue number of the journal cited; relevant for journal\n articles."
            },
            "journal_volume": {
               "type": "string",
               "examples": [
                  "174"
               ],
               "description": "Volume number of the journal cited; relevant for journal\n articles."
            },
            "language": {
               "type": "string",
               "examples": [
                  "German"
               ],
               "description": "Language in which the cited article is written."
            },
            "page_first": {
               "type": "string",
               "description": "The first page of the citation; relevant for journal\n articles, books and book chapters."
            },
            "page_last": {
               "type": "string",
               "description": "The last page of the citation; relevant for journal\n articles, books and book chapters."
            },
            "pdbx_database_id_DOI": {
               "type": "string",
               "examples": [
                  "10.2345/S1384107697000225"
               ],
               "description": "Document Object Identifier used by doi.org to uniquely\n specify bibliographic entry."
            },
            "pdbx_database_id_PubMed": {
               "type": "integer",
               "minimum": -1,
               "examples": [
                  "12627512"
               ],
               "description": "Ascession number used by PubMed to categorize a specific\n bibliographic entry."
            },
            "title": {
               "type": "string",
               "examples": [
                  "Structure of diferric duck ovotransferrin\n                                  at 2.35 Angstroms resolution."
               ],
               "description": "The title of the citation; relevant for journal articles, books\n and book chapters."
            },
            "unpublished_flag": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "description": "Flag to indicate that this citation will not be published."
            },
            "year": {
               "type": "integer",
               "examples": [
                  "1984"
               ],
               "description": "The year of the citation; relevant for journal articles, books\n and book chapters."
            }
         },
         "required": [
            "id"
         ]
      },
      "citation_author": {
         "type": "object",
         "properties": {
            "citation_id": {
               "type": "string",
               "description": "This data item is a pointer to _citation.id in the CITATION\n category."
            },
            "name": {
               "type": "string",
               "examples": [
                  "Bleary, Percival R.",
                  "O'Neil, F.K.",
                  "Van den Bossche, G.",
                  "Yang, D.-L.",
                  "Simonov, Yu.A"
               ],
               "description": "Name of an author of the citation; relevant for journal\n articles, books and book chapters.\n\n The family name(s), followed by a comma and including any\n dynastic components, precedes the first name(s) or initial(s)."
            },
            "ordinal": {
               "type": "integer",
               "description": "This data item defines the order of the author's name in the\n list of authors of a citation."
            }
         },
         "required": [
            "citation_id",
            "name",
            "ordinal"
         ]
      },
      "diffrn": {
         "type": "object",
         "properties": {
            "ambient_pressure": {
               "type": "number",
               "minimum": 0.0,
               "description": "The mean hydrostatic pressure in kilopascals at which the\n intensities were measured."
            },
            "ambient_temp": {
               "type": "number",
               "minimum": 80,
               "maximum": 300,
               "description": "The mean temperature in kelvins at which the intensities were\n measured."
            },
            "ambient_temp_details": {
               "type": "string",
               "description": "A description of special aspects of temperature control during\n data collection."
            },
            "crystal_id": {
               "type": "string",
               "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category."
            },
            "crystal_support": {
               "type": "string",
               "examples": [
                  "glass capillary",
                  "quartz capillary",
                  "fiber",
                  "metal loop"
               ],
               "description": "The physical device used to support the crystal during data\n collection."
            },
            "details": {
               "type": "string",
               "description": "Special details of the diffraction measurement process. Should\n include information about source instability, crystal motion,\n degradation and so on."
            },
            "id": {
               "type": "string",
               "description": "This data item uniquely identifies a set of diffraction\n data."
            }
         },
         "required": [
            "crystal_id",
            "id"
         ]
      },
      "diffrn_detector": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "description": "A description of special aspects of the radiation detector."
            },
            "detector": {
               "type": "string",
               "examples": [
                  "photographic film",
                  "scintillation counter",
                  "CCD plate",
                  "BF~3~ counter"
               ],
               "description": "The general class of the radiation detector."
            },
            "diffrn_id": {
               "type": "string",
               "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category."
            },
            "pdbx_collection_date": {
               "type": "string",
               "examples": [
                  "1996-12-25"
               ],
               "description": "The date of data collection."
            },
            "type": {
               "type": "string",
               "description": "The make, model or name of the detector device used."
            }
         },
         "required": [
            "diffrn_id"
         ]
      },
      "diffrn_radiation": {
         "type": "object",
         "properties": {
            "collimation": {
               "type": "string",
               "examples": [
                  "0.3 mm double-pinhole",
                  "0.5 mm",
                  "focusing mirrors"
               ],
               "description": "The collimation or focusing applied to the radiation."
            },
            "diffrn_id": {
               "type": "string",
               "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category."
            },
            "monochromator": {
               "type": "string",
               "examples": [
                  "Zr filter",
                  "Ge 220",
                  "none",
                  "equatorial mounted graphite"
               ],
               "description": "The method used to obtain monochromatic radiation. If a mono-\n chromator crystal is used, the material and the indices of the\n Bragg reflection are specified."
            },
            "pdbx_diffrn_protocol": {
               "type": "string",
               "examples": [
                  "SINGLE WAVELENGTH",
                  "MONOCHROMATIC",
                  "LAUE",
                  "MAD",
                  "OTHER"
               ],
               "description": "SINGLE WAVELENGTH, LAUE, or MAD."
            },
            "pdbx_monochromatic_or_laue_m_l": {
               "type": "string",
               "enum": [
                  "L",
                  "M"
               ],
               "examples": [
                  "M",
                  "L"
               ],
               "description": "Monochromatic or Laue."
            },
            "pdbx_scattering_type": {
               "type": "string",
               "enum": [
                  "x-ray",
                  "neutron",
                  "electron"
               ],
               "description": "The radiation scattering type for this diffraction data set."
            },
            "pdbx_wavelength": {
               "type": "string",
               "description": "Wavelength of radiation."
            },
            "pdbx_wavelength_list": {
               "type": "string",
               "description": "Comma separated list of wavelengths or wavelength range."
            },
            "type": {
               "type": "string",
               "examples": [
                  "CuK\\a",
                  "Cu K\\a~1~",
                  "Cu K-L~2,3~",
                  "white-beam"
               ],
               "description": "The nature of the radiation. This is typically a description\n of the X-ray wavelength in Siegbahn notation."
            },
            "wavelength_id": {
               "type": "string",
               "description": "This data item is a pointer to _diffrn_radiation_wavelength.id\n in the DIFFRN_RADIATION_WAVELENGTH category."
            }
         },
         "required": [
            "diffrn_id"
         ]
      },
      "diffrn_source": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "description": "A description of special aspects of the radiation source used."
            },
            "diffrn_id": {
               "type": "string",
               "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category."
            },
            "pdbx_synchrotron_beamline": {
               "type": "string",
               "description": "Synchrotron beamline."
            },
            "pdbx_synchrotron_site": {
               "type": "string",
               "description": "Synchrotron site."
            },
            "pdbx_wavelength": {
               "type": "string",
               "description": "Wavelength of radiation."
            },
            "pdbx_wavelength_list": {
               "type": "string",
               "description": "Comma separated list of wavelengths or wavelength range."
            },
            "source": {
               "type": "string",
               "examples": [
                  "sealed X-ray tube",
                  "nuclear reactor",
                  "spallation source",
                  "electron microscope",
                  "rotating-anode X-ray tube",
                  "synchrotron"
               ],
               "description": "The general class of the radiation source."
            },
            "type": {
               "type": "string",
               "examples": [
                  "NSLS beamline X8C",
                  "Rigaku RU200"
               ],
               "description": "The make, model or name of the source of radiation."
            }
         },
         "required": [
            "diffrn_id"
         ]
      },
      "em_2d_crystal_entity": {
         "type": "object",
         "properties": {
            "angle_gamma": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "exclusiveMaximum": 180.0,
               "description": "Unit-cell angle gamma in degrees."
            },
            "c_sampling_length": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "description": "Length used to sample the reciprocal lattice lines in the c-direction."
            },
            "id": {
               "type": "string",
               "description": "Unique key for the 2d_crystal_entity category."
            },
            "image_processing_id": {
               "type": "string",
               "description": "pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category."
            },
            "length_a": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "description": "Unit-cell length a in Angstroms."
            },
            "length_b": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "description": "Unit-cell length b in Angstroms."
            },
            "length_c": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "description": "Thickness of 2D crystal"
            },
            "space_group_name_H_M": {
               "type": "string",
               "enum": [
                  "P 3",
                  "P 2 2 2",
                  "P 1 2",
                  "C 2 2 2",
                  "P 4 2 2",
                  "C 1 2",
                  "P 1",
                  "P 2 21 21",
                  "P 2 2 21",
                  "P 6",
                  "P 2",
                  "P 4 21 2",
                  "P 3 2 1",
                  "P 4",
                  "P 6 2 2",
                  "P 3 1 2",
                  "P 1 21"
               ],
               "description": "There are 17 plane groups classified as oblique, rectangular, square, and hexagonal.\n To describe the symmetry of 2D crystals of biological molecules,\n plane groups are expanded to equivalent noncentrosymmetric space groups.\n The 2D crystal plane corresponds to the 'ab' plane of the space group.\n\n Enumerated space group descriptions include the plane group number in parentheses,\n the H-M plane group symbol, and the plane group class."
            }
         },
         "required": [
            "angle_gamma",
            "id",
            "image_processing_id",
            "length_a",
            "length_b",
            "length_c",
            "space_group_name_H_M"
         ]
      },
      "em_3d_crystal_entity": {
         "type": "object",
         "properties": {
            "angle_alpha": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "exclusiveMaximum": 180.0,
               "description": "Unit-cell angle alpha in degrees."
            },
            "angle_beta": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "exclusiveMaximum": 180.0,
               "description": "Unit-cell angle beta in degrees."
            },
            "angle_gamma": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "exclusiveMaximum": 180.0,
               "description": "Unit-cell angle gamma in degrees."
            },
            "id": {
               "type": "string",
               "description": "Unique key for the em_3d_crystal_entity category."
            },
            "image_processing_id": {
               "type": "string",
               "description": "pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category."
            },
            "length_a": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "description": "Unit-cell length a in Angstroms."
            },
            "length_b": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "description": "Unit-cell length b in Angstroms."
            },
            "length_c": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "description": "Unit-cell length c in Angstroms."
            },
            "space_group_name": {
               "type": "string",
               "examples": [
                  "P 1",
                  "P 21 21 2",
                  "I 4",
                  "H 3"
               ],
               "description": "Space group name."
            },
            "space_group_num": {
               "type": "integer",
               "minimum": 1,
               "maximum": 230,
               "description": "Space group number."
            }
         },
         "required": [
            "angle_alpha",
            "angle_beta",
            "angle_gamma",
            "id",
            "image_processing_id",
            "length_a",
            "length_b",
            "length_c",
            "space_group_name",
            "space_group_num"
         ]
      },
      "em_3d_fitting": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "examples": [
                  "Initial local fitting was done using Chimera and then NMFF was used for flexible fitting."
               ],
               "description": "Any additional details regarding fitting of atomic coordinates into\n the 3DEM volume, including data and considerations from other\n methods used in computation of the model.\n"
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry_id in\n the ENTRY category."
            },
            "id": {
               "type": "string",
               "description": "The value of _em_3d_fitting.id must uniquely identify\n a fitting procedure of atomic coordinates\n into 3dem reconstructed map volume."
            },
            "method": {
               "type": "string",
               "description": "The method used to fit atomic coordinates\n into the 3dem reconstructed map."
            },
            "overall_b_value": {
               "type": "number",
               "examples": [
                  "200"
               ],
               "description": "The overall B (temperature factor) value for the 3d-em volume."
            },
            "ref_protocol": {
               "type": "string",
               "enum": [
                  "AB INITIO MODEL",
                  "BACKBONE TRACE",
                  "RIGID BODY FIT",
                  "FLEXIBLE FIT",
                  "OTHER"
               ],
               "examples": [
                  "Local refinement, Flexible fitting"
               ],
               "description": "The refinement protocol used."
            },
            "ref_space": {
               "type": "string",
               "enum": [
                  "RECIPROCAL",
                  "REAL"
               ],
               "description": "A flag to indicate whether fitting was carried out in real\n or reciprocal refinement space."
            },
            "target_criteria": {
               "type": "string",
               "examples": [
                  "Cross-correlation coefficient"
               ],
               "description": "The measure used to assess quality of fit of the atomic coordinates in the\n 3DEM map volume."
            }
         },
         "required": [
            "entry_id",
            "id"
         ]
      },
      "em_3d_reconstruction": {
         "type": "object",
         "properties": {
            "actual_pixel_size": {
               "type": "number",
               "examples": [
                  "2.8",
                  "5.76"
               ],
               "description": "The actual pixel size of projection set of images."
            },
            "algorithm": {
               "type": "string",
               "description": "The algorithm used project from 2D orientations to 3D map."
            },
            "details": {
               "type": "string",
               "examples": [
                  "a modified version of SPIDER program was used for the reconstruction"
               ],
               "description": "Any additional details used in the 3d reconstruction."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "id": {
               "type": "string",
               "description": "The value of _em_3d_reconstruction.id must\n uniquely identify the 3d reconstruction."
            },
            "image_processing_id": {
               "type": "string",
               "description": "Foreign key to the EM_IMAGE_PROCESSING category"
            },
            "magnification_calibration": {
               "type": "string",
               "examples": [
                  "TMV images"
               ],
               "description": "The magnification calibration method for the 3d reconstruction."
            },
            "method": {
               "type": "string",
               "examples": [
                  "cross-common lines",
                  "polar Fourier transform (PFT)"
               ],
               "description": "The algorithm method used for the 3d-reconstruction."
            },
            "nominal_pixel_size": {
               "type": "number",
               "examples": [
                  "3.11",
                  "6.78"
               ],
               "description": "The nominal pixel size of the projection set of images."
            },
            "num_class_averages": {
               "type": "integer",
               "exclusiveMinimum": 0,
               "description": "This item was correspondence to two type of em dataset\n processing_emDataSet_singleParticle.numClassAverages\n processing_emDataSet_icosahedral.numClassAverages"
            },
            "num_particles": {
               "type": "integer",
               "exclusiveMinimum": 0,
               "description": "The number of 2D projections or 3D subtomograms used in the 3d reconstruction"
            },
            "refinement_type": {
               "type": "string",
               "enum": [
                  "HALF-MAPS REFINED INDEPENDENTLY",
                  "HALF-MAPS REFINED AGAINST SAME DATA",
                  "HALF-MAPS REFINED INDEPENDENTLY WITH FREQUENCY RANGE OMITTED",
                  "HALF-MAPS REFINED WITH FREQUENCY RANGE OMITTED",
                  "OTHER"
               ],
               "examples": [
                  "HALF-MAPS REFINED INDEPENDENTLY"
               ],
               "description": "type of refinement performed in order to determine map resolution"
            },
            "resolution": {
               "type": "number",
               "examples": [
                  "8.9",
                  "10.0"
               ],
               "description": "The final resolution (in Angstroms)of the 3D reconstruction."
            },
            "resolution_method": {
               "type": "string",
               "examples": [
                  "FSC at 0.5 cut-off"
               ],
               "description": "The  method used to determine the final resolution\n of the 3d reconstruction.\n The Fourier Shell Correlation criterion as a measure of\n resolution is based on the concept of splitting the (2D)\n data set into two halves; averaging each and comparing them\n using the Fourier Ring Correlation (FRC) technique."
            },
            "symmetry_type": {
               "type": "string",
               "enum": [
                  "3D CRYSTAL",
                  "HELICAL",
                  "POINT",
                  "2D CRYSTAL"
               ],
               "description": "The type of symmetry applied to the reconstruction"
            }
         },
         "required": [
            "entry_id",
            "id",
            "image_processing_id"
         ]
      },
      "em_embedding": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "examples": [
                  "The crystal suspension was injected into the lens of a drop of buffer containing\n  1 % tannin sitting on a carbon film supported by a molybdenum grid.  An equal volume\n  of 1% glucose was then added and the solution thoroughly but gently mixed.  The grid\n  was then blotted, air dried, and frozen in LN2."
               ],
               "description": "Staining procedure used in the specimen preparation."
            },
            "id": {
               "type": "string",
               "description": "This data item is the primary key of the category."
            },
            "material": {
               "type": "string",
               "examples": [
                  "tannin and glucose"
               ],
               "description": "The embedding  material."
            },
            "specimen_id": {
               "type": "string",
               "description": "Foreign key relationship to the EMD SPECIMEN category"
            }
         },
         "required": [
            "id",
            "material",
            "specimen_id"
         ]
      },
      "em_entity_assembly": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "examples": [
                  "Fab fragment generated by proteolytic cleavage of LA2 IgG antibody."
               ],
               "description": "Additional details about the component."
            },
            "entity_id_list": {
               "type": "array",
               "items": {
                  "type": "string",
                  "description": "macromolecules associated with this component, if defined\n as comma separated list of entity ids (integers)."
               },
               "uniqueItems": true
            },
            "id": {
               "type": "string",
               "description": "The value of _em_entity_assembly.id identifies\n one component of the complex."
            },
            "name": {
               "type": "string",
               "examples": [
                  "Ternary complex of alpha-tubulin with tubulin folding cofactors TBCE and TBCB",
                  "80S Ribosome bound to emetine",
                  "messenger RNA",
                  "initiation factor 2",
                  "GroEL",
                  "antibody Fab fragment"
               ],
               "description": "Name of this component in the observed assembly."
            },
            "oligomeric_details": {
               "type": "string",
               "description": "oligomeric details"
            },
            "parent_id": {
               "type": "integer",
               "description": "The parent of this assembly.\n This data item is an internal category pointer to _em_entity_assembly.id.\n By convention, the full assembly (top of hierarchy) is assigned parent id 0 (zero)."
            },
            "source": {
               "type": "string",
               "enum": [
                  "NATURAL",
                  "RECOMBINANT",
                  "MULTIPLE SOURCES"
               ],
               "description": "The assembly type."
            },
            "synonym": {
               "type": "string",
               "examples": [
                  "FADV-1"
               ],
               "description": "Alternative name of the component."
            },
            "type": {
               "type": "string",
               "description": "A description of types of components of the\n assembly of the biological structure."
            }
         },
         "required": [
            "id",
            "name",
            "parent_id"
         ]
      },
      "em_experiment": {
         "type": "object",
         "properties": {
            "aggregation_state": {
               "type": "string",
               "enum": [
                  "TISSUE",
                  "CELL",
                  "3D ARRAY",
                  "HELICAL ARRAY",
                  "2D ARRAY",
                  "FILAMENT",
                  "PARTICLE"
               ],
               "description": "The aggregation/assembly state of the imaged specimen."
            },
            "entity_assembly_id": {
               "type": "string",
               "description": "Foreign key to the EM_ENTITY_ASSEMBLY category"
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "id": {
               "type": "string",
               "description": "Placeholder ID."
            },
            "reconstruction_method": {
               "type": "string",
               "enum": [
                  "SINGLE PARTICLE",
                  "HELICAL",
                  "SUBTOMOGRAM AVERAGING",
                  "CRYSTALLOGRAPHY",
                  "TOMOGRAPHY"
               ],
               "description": "The reconstruction method used in the EM experiment."
            }
         },
         "required": [
            "aggregation_state",
            "entity_assembly_id",
            "entry_id",
            "id",
            "reconstruction_method"
         ]
      },
      "em_helical_entity": {
         "type": "object",
         "properties": {
            "angular_rotation_per_subunit": {
               "type": "number",
               "exclusiveMinimum": -180.0,
               "maximum": 180.0,
               "examples": [
                  "-34.616000"
               ],
               "description": "The angular rotation per helical subunit in degrees."
            },
            "axial_rise_per_subunit": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "examples": [
                  "17.400000"
               ],
               "description": "The axial rise per subunit in the helical assembly."
            },
            "axial_symmetry": {
               "type": "string",
               "examples": [
                  "C1",
                  "D2",
                  "C7"
               ],
               "description": "Symmetry of the helical axis, either cyclic (Cn) or dihedral (Dn), where n>=1."
            },
            "details": {
               "type": "string",
               "examples": [
                  "Dihedral symmetry"
               ],
               "description": "Any other details regarding the helical assembly"
            },
            "id": {
               "type": "string",
               "description": "The value of _em_helical_entity.id must uniquely identify\n a set of the filament parameters for this assembly component."
            },
            "image_processing_id": {
               "type": "string",
               "description": "The value of _em_helical_entity.reconstruction_id identifies a particular reconstruction.\n\n This data item is a pointer to _em_image_processing.id."
            }
         },
         "required": [
            "axial_symmetry",
            "id",
            "image_processing_id"
         ]
      },
      "em_image_recording": {
         "type": "object",
         "properties": {
            "average_exposure_time": {
               "type": "number",
               "exclusiveMinimum": 0,
               "exclusiveMaximum": 180,
               "examples": [
                  "2.0"
               ],
               "description": "The average exposure time for each image."
            },
            "avg_electron_dose_per_image": {
               "type": "number",
               "exclusiveMinimum": 1,
               "exclusiveMaximum": 50,
               "examples": [
                  "0.9"
               ],
               "description": "The electron dose received by the specimen per image (electrons per square angstrom)."
            },
            "details": {
               "type": "string",
               "examples": [
                  "Images were collected in movie-mode at 17 frames per second"
               ],
               "description": "Any additional details about image recording."
            },
            "detector_mode": {
               "type": "string",
               "enum": [
                  "COUNTING",
                  "OTHER",
                  "INTEGRATING",
                  "SUPER-RESOLUTION"
               ],
               "description": "The detector mode used during image recording."
            },
            "film_or_detector_model": {
               "type": "string",
               "description": "The detector type used for recording images.\n Usually film or CCD camera."
            },
            "id": {
               "type": "string",
               "description": "The item _em_image_recording.id uniquely identifies\n a set of recorded images."
            },
            "imaging_id": {
               "type": "string",
               "description": "This data item the id of the microscopy settings used in the imaging."
            },
            "num_diffraction_images": {
               "type": "integer",
               "description": "The number of diffraction images collected."
            },
            "num_grids_imaged": {
               "type": "integer",
               "description": "Number of grids in the microscopy session"
            },
            "num_real_images": {
               "type": "integer",
               "description": "The number of micrograph images collected."
            }
         },
         "required": [
            "id",
            "imaging_id"
         ]
      },
      "em_imaging": {
         "type": "object",
         "properties": {
            "accelerating_voltage": {
               "type": "integer",
               "exclusiveMinimum": 0,
               "examples": [
                  "300"
               ],
               "description": "A value of accelerating voltage (in kV) used for imaging."
            },
            "alignment_procedure": {
               "type": "string",
               "enum": [
                  "COMA FREE",
                  "ZEMLIN TABLEAU",
                  "NONE",
                  "OTHER",
                  "BASIC"
               ],
               "description": "microscope alignment procedure"
            },
            "astigmatism": {
               "type": "string",
               "description": "astigmatism"
            },
            "c2_aperture_diameter": {
               "type": "number",
               "minimum": 10,
               "maximum": 150,
               "description": "C2 lens aperture diameter, in mm"
            },
            "calibrated_defocus_max": {
               "type": "number",
               "minimum": -30000,
               "maximum": 30000,
               "examples": [
                  "5000"
               ],
               "description": "The maximum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images."
            },
            "calibrated_defocus_min": {
               "type": "number",
               "examples": [
                  "1200"
               ],
               "description": "The minimum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images."
            },
            "calibrated_magnification": {
               "type": "integer",
               "exclusiveMinimum": 1,
               "examples": [
                  "61200"
               ],
               "description": "The magnification value obtained for a known standard just\n prior to, during or just after the imaging experiment."
            },
            "cryogen": {
               "type": "string",
               "enum": [
                  "NITROGEN",
                  "HELIUM"
               ],
               "description": "Cryogen type used to maintain the specimen stage temperature during imaging\n in the microscope."
            },
            "date": {
               "type": "string",
               "examples": [
                  "2001-05-08"
               ],
               "description": "Date (YYYY-MM-DD) of imaging experiment or the date at which\n a series of experiments began."
            },
            "details": {
               "type": "string",
               "examples": [
                  "Preliminary grid screening was performed manually."
               ],
               "description": "Any additional imaging details."
            },
            "detector_distance": {
               "type": "number",
               "description": "The camera length (in millimeters). The camera length is the\n product of the objective focal length and the combined magnification\n of the intermediate and projector lenses when the microscope is\n operated in the diffraction mode."
            },
            "electron_beam_tilt_params": {
               "type": "string",
               "description": "electron beam tilt params"
            },
            "electron_source": {
               "type": "string",
               "description": "The source of electrons. The electron gun."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "id": {
               "type": "string",
               "description": "The value of _em_imaging.id must uniquely identify\n each imaging experiment."
            },
            "illumination_mode": {
               "type": "string",
               "enum": [
                  "OTHER",
                  "SPOT SCAN",
                  "FLOOD BEAM"
               ],
               "description": "The mode of illumination."
            },
            "microscope_model": {
               "type": "string",
               "enum": [
                  "FEI TALOS ARCTICA",
                  "FEI/PHILIPS CM300FEG/T",
                  "JEOL CRYO ARM 200",
                  "FEI/PHILIPS CM300FEG/HE",
                  "HITACHI EF2000",
                  "FEI TITAN",
                  "FEI/PHILIPS CM10",
                  "FEI TECNAI 10",
                  "JEOL 3000SFF",
                  "JEOL 4000",
                  "FEI TITAN KRIOS",
                  "FEI TECNAI SPHERA",
                  "JEOL 2000EXII",
                  "FEI/PHILIPS CM200FEG/UT",
                  "FEI POLARA 300",
                  "FEI TECNAI 20",
                  "FEI/PHILIPS EM420",
                  "HITACHI H7600",
                  "FEI TECNAI 12",
                  "FEI TECNAI F20",
                  "FEI/PHILIPS CM12",
                  "HITACHI EF3000",
                  "JEOL 1200",
                  "JEOL 1200EX",
                  "JEOL 2100",
                  "JEOL 2200FSC",
                  "JEOL 3100FFC",
                  "ZEISS LEO912",
                  "JEOL 2010UHR",
                  "HITACHI HF2000",
                  "JEOL 2200FS",
                  "JEOL 100B",
                  "JEOL 100CX",
                  "JEOL 2010HC",
                  "JEOL KYOTO-3000SFF",
                  "ZEISS LIBRA120PLUS",
                  "JEOL 1200EXII",
                  "JEOL 2010F",
                  "JEOL 3200FS",
                  "FEI/PHILIPS CM200FEG/SOPHIE",
                  "HITACHI H-9500SD",
                  "FEI MORGAGNI",
                  "FEI/PHILIPS CM200T",
                  "JEOL 2011",
                  "JEOL 3100FEF",
                  "JEOL 1230",
                  "FEI/PHILIPS CM200FEG/ST",
                  "JEOL 2010",
                  "JEOL 2100F",
                  "JEOL 3200FSC",
                  "SIEMENS SULEIKA",
                  "FEI TECNAI ARCTICA",
                  "JEOL 1400",
                  "HITACHI HF3000",
                  "FEI/PHILIPS CM120T",
                  "FEI/PHILIPS CM200FEG",
                  "FEI TECNAI F30",
                  "FEI/PHILIPS CM300FEG/ST",
                  "FEI/PHILIPS EM400",
                  "JEOL 2000EX",
                  "JEOL CRYO ARM 300",
                  "JEOL 2010HT",
                  "FEI TECNAI SPIRIT",
                  "JEOL 4000EX",
                  "JEOL 1010"
               ],
               "description": "The name of the model of microscope."
            },
            "mode": {
               "type": "string",
               "enum": [
                  "DARK FIELD",
                  "DIFFRACTION",
                  "OTHER",
                  "BRIGHT FIELD"
               ],
               "description": "The mode of imaging."
            },
            "nominal_cs": {
               "type": "number",
               "minimum": 0,
               "maximum": 20,
               "examples": [
                  "2.0"
               ],
               "description": "The spherical aberration coefficient (Cs) in millimeters,\n of the objective lens."
            },
            "nominal_defocus_max": {
               "type": "number",
               "exclusiveMinimum": -20000,
               "exclusiveMaximum": 20000,
               "examples": [
                  "5000"
               ],
               "description": "The maximum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images."
            },
            "nominal_defocus_min": {
               "type": "number",
               "exclusiveMinimum": -20000,
               "exclusiveMaximum": 20000,
               "examples": [
                  "1200"
               ],
               "description": "The minimum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images."
            },
            "nominal_magnification": {
               "type": "integer",
               "exclusiveMinimum": 1000,
               "exclusiveMaximum": 500000,
               "examples": [
                  "60000"
               ],
               "description": "The magnification indicated by the microscope readout."
            },
            "recording_temperature_maximum": {
               "type": "number",
               "description": "The specimen temperature maximum (degrees Kelvin) for the duration\n of imaging."
            },
            "recording_temperature_minimum": {
               "type": "number",
               "description": "The specimen temperature minimum (degrees Kelvin) for the duration\n of imaging."
            },
            "residual_tilt": {
               "type": "number",
               "description": "residual tilt of the electron beam"
            },
            "specimen_holder_model": {
               "type": "string",
               "enum": [
                  "JEOL 3200FSC CRYOHOLDER",
                  "GATAN HCHDT 3010 DOUBLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER",
                  "JEOL CRYOSPECPORTER",
                  "HOME BUILD",
                  "GATAN HCHST 3008 SINGLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER",
                  "GATAN HELIUM",
                  "GATAN ULTDT ULTRA LOW TEMPERATURE DOUBLE TILT HELIUM COOLING HOLDER",
                  "GATAN HC 3500 SINGLE TILT HEATING/NITROGEN COOLING HOLDER",
                  "GATAN ULTST ULTRA LOW TEMPERATURE SINGLE TILT HELIUM COOLING HOLDER",
                  "PHILIPS ROTATION HOLDER",
                  "GATAN CT3500TR SINGLE TILT ROTATION LIQUID NITROGEN CRYO TRANSFER HOLDER",
                  "GATAN 910 MULTI-SPECIMEN SINGLE TILT CRYO TRANSFER HOLDER",
                  "FISCHIONE INSTRUMENTS DUAL AXIS TOMOGRAPHY HOLDER",
                  "FEI TITAN KRIOS AUTOGRID HOLDER",
                  "GATAN 626 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER",
                  "GATAN LIQUID NITROGEN",
                  "GATAN CT3500 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER",
                  "GATAN UHRST 3500 SINGLE TILT ULTRA HIGH RESOLUTION NITROGEN COOLING HOLDER",
                  "JEOL",
                  "OTHER",
                  "SIDE ENTRY, EUCENTRIC",
                  "GATAN CHDT 3504 DOUBLE TILT HIGH RESOLUTION NITROGEN COOLING HOLDER",
                  "GATAN 915 DOUBLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER",
                  "GATAN 914 HIGH TILT LIQUID NITROGEN CRYO TRANSFER TOMOGRAPHY HOLDER"
               ],
               "description": "The name of the model of specimen holder used during imaging."
            },
            "specimen_holder_type": {
               "type": "string",
               "examples": [
                  "cryo"
               ],
               "description": "The type of specimen holder used during imaging."
            },
            "specimen_id": {
               "type": "string",
               "description": "Foreign key to the EM_SPECIMEN category"
            },
            "temperature": {
               "type": "number",
               "examples": [
                  "70"
               ],
               "description": "The mean specimen stage temperature (degrees Kelvin) during imaging\n in the microscope."
            },
            "tilt_angle_max": {
               "type": "number",
               "examples": [
                  "70"
               ],
               "description": "The maximum angle at which the specimen was tilted to obtain\n recorded images."
            },
            "tilt_angle_min": {
               "type": "number",
               "examples": [
                  "-70"
               ],
               "description": "The minimum angle at which the specimen was tilted to obtain\n recorded images."
            }
         },
         "required": [
            "entry_id",
            "id",
            "illumination_mode",
            "microscope_model",
            "mode",
            "specimen_id"
         ]
      },
      "em_single_particle_entity": {
         "type": "object",
         "properties": {
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "id": {
               "type": "string",
               "description": "Unique category label."
            },
            "image_processing_id": {
               "type": "string",
               "description": "pointer to _em_image_processing.id."
            },
            "point_symmetry": {
               "type": "string",
               "description": "Point symmetry symbol, either Cn, Dn, T, O, or I"
            }
         },
         "required": [
            "entry_id",
            "id",
            "image_processing_id"
         ]
      },
      "em_software": {
         "type": "object",
         "properties": {
            "category": {
               "type": "string",
               "enum": [
                  "CLASSIFICATION",
                  "FINAL EULER ASSIGNMENT",
                  "SYMMETRY DETERMINATION",
                  "MASKING",
                  "LAYERLINE INDEXING",
                  "PARTICLE SELECTION",
                  "LATTICE DISTORTION CORRECTION",
                  "CRYSTALLOGRAPHY MERGING",
                  "OTHER",
                  "IMAGE ACQUISITION",
                  "MODEL REFINEMENT",
                  "CTF CORRECTION",
                  "VOLUME SELECTION",
                  "RECONSTRUCTION",
                  "SERIES ALIGNMENT",
                  "MODEL FITTING",
                  "MOLECULAR REPLACEMENT",
                  "DIFFRACTION INDEXING",
                  "INITIAL EULER ASSIGNMENT"
               ],
               "description": "The purpose of the software."
            },
            "details": {
               "type": "string",
               "examples": [
                  "EMAN2 e2boxer.py was used to automatically select particle images."
               ],
               "description": "Details about the software used."
            },
            "fitting_id": {
               "type": "string",
               "description": "pointer to _em_3d_fitting.id in the EM_3D_FITTING category."
            },
            "id": {
               "type": "string",
               "description": "Unique identifier for each software description."
            },
            "image_processing_id": {
               "type": "string",
               "description": "pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category."
            },
            "imaging_id": {
               "type": "string",
               "description": "pointer to _em_imaging.id in the EM_IMAGING category."
            },
            "name": {
               "type": "string",
               "examples": [
                  "EMAN",
                  "Imagic",
                  "Spider",
                  "Bsoft",
                  "UCSF-Chimera"
               ],
               "description": "The name of the software package used, e.g., RELION.  Depositors are strongly\n  encouraged to provide a value in this field."
            },
            "version": {
               "type": "string",
               "examples": [
                  "9.03",
                  "2.1"
               ],
               "description": "The version of the software."
            }
         },
         "required": [
            "id"
         ]
      },
      "em_specimen": {
         "type": "object",
         "properties": {
            "concentration": {
               "type": "number",
               "exclusiveMinimum": 0.0,
               "examples": [
                  "1.35"
               ],
               "description": "The concentration (in milligrams per milliliter, mg/ml)\n of the complex in the sample."
            },
            "details": {
               "type": "string",
               "examples": [
                  "This sample was monodisperse.",
                  "Au was deposited at a 30 degree angle to 15 nm thickness.",
                  "Colloidal gold particles were deposited by dipping into dilute solution.",
                  "The specimen was frozen at high pressure using the bal-tec hpm 010 instrument.",
                  "The embedded sample was sectioned at 100 K to 50 nm final thickness."
               ],
               "description": "A description of any additional details of the specimen preparation."
            },
            "embedding_applied": {
               "type": "string",
               "enum": [
                  "YES",
                  "NO"
               ],
               "description": "'YES' indicates that the specimen has been embedded."
            },
            "experiment_id": {
               "type": "string",
               "description": "Pointer to _em_experiment.id."
            },
            "id": {
               "type": "string",
               "description": "The item  _em_specimen.id uniquely identifies a specimen along with\n its preparation methods."
            },
            "shadowing_applied": {
               "type": "string",
               "enum": [
                  "YES",
                  "NO"
               ],
               "description": "'YES' indicates that the specimen has been shadowed."
            },
            "staining_applied": {
               "type": "string",
               "enum": [
                  "YES",
                  "NO"
               ],
               "description": "'YES' indicates that the specimen has been stained."
            },
            "vitrification_applied": {
               "type": "string",
               "enum": [
                  "YES",
                  "NO"
               ],
               "description": "'YES' indicates that the specimen was vitrified by cryopreservation."
            }
         },
         "required": [
            "embedding_applied",
            "experiment_id",
            "id",
            "shadowing_applied",
            "staining_applied",
            "vitrification_applied"
         ]
      },
      "em_staining": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "examples": [
                  "Negatively stained EM specimens were prepared using a carbon-sandwich technique\n  and uranyl-formate stain."
               ],
               "description": "Staining procedure used in the specimen preparation."
            },
            "id": {
               "type": "string",
               "description": "This data item is the primary key of the category."
            },
            "material": {
               "type": "string",
               "examples": [
                  "Uranyl Acetate"
               ],
               "description": "The staining  material."
            },
            "specimen_id": {
               "type": "string",
               "description": "Foreign key relationship to the EMD SPECIMEN category"
            },
            "type": {
               "type": "string",
               "enum": [
                  "NONE",
                  "NEGATIVE",
                  "POSITIVE"
               ],
               "description": "type of staining"
            }
         },
         "required": [
            "id",
            "material",
            "specimen_id",
            "type"
         ]
      },
      "em_vitrification": {
         "type": "object",
         "properties": {
            "chamber_temperature": {
               "type": "number",
               "examples": [
                  "298"
               ],
               "description": "The temperature (in degrees Kelvin) of the sample just prior to vitrification."
            },
            "cryogen_name": {
               "type": "string",
               "enum": [
                  "NITROGEN",
                  "PROPANE",
                  "METHANE",
                  "FREON 12",
                  "ETHANE",
                  "HELIUM",
                  "OTHER",
                  "ETHANE-PROPANE",
                  "FREON 22"
               ],
               "description": "This is the name of the cryogen."
            },
            "details": {
               "type": "string",
               "examples": [
                  "Vitrification carried out in argon atmosphere."
               ],
               "description": "Any additional details relating to vitrification."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "humidity": {
               "type": "number",
               "minimum": 0.0,
               "maximum": 100.0,
               "examples": [
                  "90"
               ],
               "description": "The humidity (%) in the vicinity of the vitrification process."
            },
            "id": {
               "type": "string",
               "description": "The value of _em_vitrification.id must uniquely identify\n the vitrification procedure."
            },
            "instrument": {
               "type": "string",
               "enum": [
                  "LEICA EM GP",
                  "FEI VITROBOT MARK I",
                  "FEI VITROBOT MARK IV",
                  "HOMEMADE PLUNGER",
                  "LEICA KF80",
                  "FEI VITROBOT MARK II",
                  "LEICA PLUNGER",
                  "SPOTITON",
                  "ZEISS PLUNGE FREEZER CRYOBOX",
                  "LEICA EM CPC",
                  "EMS-002 RAPID IMMERSION FREEZER",
                  "GATAN CRYOPLUNGE 3",
                  "FEI VITROBOT MARK III",
                  "REICHERT-JUNG PLUNGER"
               ],
               "description": "The type of instrument used in the vitrification process."
            },
            "method": {
               "type": "string",
               "examples": [
                  "plunge freezing"
               ],
               "description": "The procedure for vitrification."
            },
            "specimen_id": {
               "type": "string",
               "description": "This data item is a pointer to _em_specimen.id"
            },
            "temp": {
               "type": "number",
               "examples": [
                  "90"
               ],
               "description": "The vitrification temperature (in degrees Kelvin), e.g.,\n  temperature of the plunge instrument cryogen bath."
            },
            "time_resolved_state": {
               "type": "string",
               "examples": [
                  "plunge 30 msec after spraying with effector"
               ],
               "description": "The length of time after an event effecting the sample that\n vitrification was induced and a description of the event."
            }
         },
         "required": [
            "entry_id",
            "id",
            "specimen_id"
         ]
      },
      "entity": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "description": "A description of special aspects of the entity."
            },
            "formula_weight": {
               "type": "number",
               "minimum": 1.0,
               "description": "Formula mass in daltons of the entity."
            },
            "id": {
               "type": "string",
               "description": "The value of _entity.id must uniquely identify a record in the\n ENTITY list.\n\n Note that this item need not be a number; it can be any unique\n identifier."
            },
            "pdbx_description": {
               "type": "string",
               "examples": [
                  "DNA (5'-D(*GP*(CH3)CP*GP*(CH3)CP*GP*C)-3')",
                  "PROFLAVINE",
                  "PROTEIN (DEOXYRIBONUCLEASE I (E.C.3.1.21.1))"
               ],
               "description": "A description of the entity.\n\n Corresponds to the compound name in the PDB format."
            },
            "pdbx_ec": {
               "type": "string",
               "examples": [
                  "2.7.7.7"
               ],
               "description": "Enzyme Commission (EC) number(s)"
            },
            "pdbx_fragment": {
               "type": "string",
               "examples": [
                  "KLENOW FRAGMENT",
                  "REPLICASE OPERATOR HAIRPIN",
                  "C-TERMINAL DOMAIN"
               ],
               "description": "Entity fragment description(s)."
            },
            "pdbx_mutation": {
               "type": "string",
               "examples": [
                  "Y31H",
                  "DEL(298-323)"
               ],
               "description": "Details about any entity mutation(s)."
            },
            "pdbx_number_of_molecules": {
               "type": "number",
               "examples": [
                  "1.0",
                  "2.0",
                  "3.0"
               ],
               "description": "A place holder for the number of molecules of the entity in\n the entry."
            },
            "src_method": {
               "type": "string",
               "enum": [
                  "nat",
                  "syn",
                  "man"
               ],
               "description": "The method by which the sample for the entity was produced.\n Entities isolated directly from natural sources (tissues, soil\n samples etc.) are expected to have further information in the\n ENTITY_SRC_NAT category. Entities isolated from genetically\n manipulated sources are expected to have further information in\n the ENTITY_SRC_GEN category."
            },
            "type": {
               "type": "string",
               "enum": [
                  "branched",
                  "water",
                  "macrolide",
                  "non-polymer",
                  "polymer"
               ],
               "description": "Defines the type of the entity.\n\n Polymer entities are expected to have corresponding\n ENTITY_POLY and associated entries.\n\n Non-polymer entities are expected to have corresponding\n CHEM_COMP and associated entries.\n\n Water entities are not expected to have corresponding\n entries in the ENTITY category."
            }
         },
         "required": [
            "id"
         ]
      },
      "entry": {
         "type": "object",
         "properties": {
            "id": {
               "type": "string",
               "description": "The value of _entry.id identifies the data block.\n\n Note that this item need not be a number; it can be any unique\n identifier."
            }
         },
         "required": [
            "id"
         ]
      },
      "exptl": {
         "type": "object",
         "properties": {
            "crystals_number": {
               "type": "integer",
               "minimum": 1,
               "description": "The total number of crystals used in the  measurement of\n intensities."
            },
            "details": {
               "type": "string",
               "description": "Any special information about the experimental work prior to the\n intensity measurement. See also _exptl_crystal.preparation."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "method": {
               "type": "string",
               "enum": [
                  "NEUTRON DIFFRACTION",
                  "INFRARED SPECTROSCOPY",
                  "FLUORESCENCE TRANSFER",
                  "ELECTRON CRYSTALLOGRAPHY",
                  "THEORETICAL MODEL",
                  "ELECTRON MICROSCOPY",
                  "SOLID-STATE NMR",
                  "POWDER DIFFRACTION",
                  "X-RAY DIFFRACTION",
                  "SOLUTION SCATTERING",
                  "SOLUTION NMR",
                  "EPR",
                  "FIBER DIFFRACTION"
               ],
               "examples": [
                  "X-RAY DIFFRACTION",
                  "NEUTRON DIFFRACTION",
                  "FIBER DIFFRACTION",
                  "ELECTRON CRYSTALLOGRAPHY",
                  "ELECTRON MICROSCOPY",
                  "SOLUTION NMR",
                  "SOLID-STATE NMR",
                  "SOLUTION SCATTERING",
                  "POWDER DIFFRACTION"
               ],
               "description": "The method used in the experiment."
            },
            "method_details": {
               "type": "string",
               "examples": [
                  "29 structures",
                  "minimized average structure"
               ],
               "description": "A description of special aspects of the experimental method."
            }
         },
         "required": [
            "entry_id",
            "method"
         ]
      },
      "exptl_crystal_grow": {
         "type": "object",
         "properties": {
            "crystal_id": {
               "type": "string",
               "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category."
            },
            "details": {
               "type": "string",
               "examples": [
                  "Solution 2 was prepared as a well solution and\n                                  mixed. A droplet containing 2 \\ml of solution\n                                  1 was delivered onto a cover slip; 2 \\ml of\n                                  solution 2 was added to the droplet without\n                                  mixing.",
                  "Crystal plates were originally stored at room\n                                  temperature for 1 week but no nucleation\n                                  occurred. They were then transferred to 4\n                                  degrees C, at which temperature well formed\n                                  single crystals grew in 2 days.",
                  "The dependence on pH for successful crystal\n                                  growth is very sharp. At pH 7.4 only showers\n                                  of tiny crystals grew, at pH 7.5 well formed\n                                  single crystals grew, at pH 7.6 no\n                                  crystallization occurred at all."
               ],
               "description": "A description of special aspects of the crystal growth."
            },
            "method": {
               "type": "string",
               "examples": [
                  "batch precipitation",
                  "batch dialysis",
                  "hanging drop vapor diffusion",
                  "sitting drop vapor diffusion"
               ],
               "description": "The method used to grow the crystals."
            },
            "pH": {
               "type": "number",
               "minimum": 0,
               "maximum": 14,
               "examples": [
                  "7.4",
                  "7.6",
                  "4.3"
               ],
               "description": "The pH at which the crystal was grown. If more than one pH was\n employed during the crystallization process, the final pH should\n be noted here and the protocol involving multiple pH values\n should be described in _exptl_crystal_grow.details."
            },
            "pdbx_details": {
               "type": "string",
               "examples": [
                  "PEG 4000, potassium phosphate, magnesium chloride, cacodylate"
               ],
               "description": "Text description of crystal growth procedure."
            },
            "pdbx_pH_range": {
               "type": "string",
               "examples": [
                  "5.6 - 6.4"
               ],
               "description": "The range of pH values at which the crystal was grown.   Used when\n a point estimate of pH is not appropriate."
            },
            "temp": {
               "type": "number",
               "minimum": 277,
               "maximum": 316,
               "description": "The temperature in kelvins at which the crystal was grown.\n If more than one temperature was employed during the\n crystallization process, the final temperature should be noted\n here and the protocol  involving multiple temperatures should be\n described in _exptl_crystal_grow.details."
            },
            "temp_details": {
               "type": "string",
               "description": "A description of special aspects of temperature control during\n crystal growth."
            }
         },
         "required": [
            "crystal_id"
         ]
      },
      "pdbx_SG_project": {
         "type": "object",
         "properties": {
            "full_name_of_center": {
               "type": "string",
               "enum": [
                  "Structural Proteomics in Europe",
                  "Bacterial targets at IGS-CNRS, France",
                  "Structural Genomics of Pathogenic Protozoa Consortium",
                  "Seattle Structural Genomics Center for Infectious Disease",
                  "Transmembrane Protein Center",
                  "TB Structural Genomics Consortium",
                  "Atoms-to-Animals: The Immune Function Network",
                  "Structures of Mtb Proteins Conferring Susceptibility to Known Mtb Inhibitors",
                  "Northeast Structural Genomics Consortium",
                  "GPCR Network",
                  "Ontario Centre for Structural Proteomics",
                  "Structural Genomics Consortium",
                  "Accelerated Technologies Center for Gene to 3D Structure",
                  "Berkeley Structural Genomics Center",
                  "Structural Proteomics in Europe 2",
                  "Marseilles Structural Genomics Program @ AFMB",
                  "New York SGX Research Center for Structural Genomics",
                  "Mycobacterium Tuberculosis Structural Proteomics Project",
                  "Montreal-Kingston Bacterial Structural Genomics Initiative",
                  "Paris-Sud Yeast Structural Genomics",
                  "Center for Eukaryotic Structural Genomics",
                  "Mitochondrial Protein Partnership",
                  "Chaperone-Enabled Studies of Epigenetic Regulation Enzymes",
                  "Medical Structural Genomics of Pathogenic Protozoa",
                  "New York Structural Genomics Research Consortium",
                  "Assembly, Dynamics and Evolution of Cell-Cell and Cell-Matrix Adhesions",
                  "Program for the Characterization of Secreted Effector Proteins",
                  "Oxford Protein Production Facility",
                  "Center for Membrane Proteins of Infectious Diseases",
                  "Integrated Center for Structure and Function Innovation",
                  "Membrane Protein Structural Biology Consortium",
                  "Partnership for T-Cell Biology",
                  "Partnership for Stem Cell Biology",
                  "Center for the X-ray Structure Determination of Human Transporters",
                  "Structure, Dynamics and Activation Mechanisms of Chemokine Receptors",
                  "New York Structural GenomiX Research Consortium",
                  "Center for High-Throughput Structural Biology",
                  "Midwest Center for Macromolecular Research",
                  "Structure 2 Function Project",
                  "Transcontinental EM Initiative for Membrane Protein Structure",
                  "RIKEN Structural Genomics/Proteomics Initiative",
                  "Midwest Center for Structural Genomics",
                  "Structure-Function Analysis of Polymorphic CDI Toxin-Immunity Protein Complexes",
                  "Membrane Protein Structures by Solution NMR",
                  "Nucleocytoplasmic Transport: a Target for Cellular Control",
                  "Southeast Collaboratory for Structural Genomics",
                  "Scottish Structural Proteomics Facility",
                  "Structure-Function Studies of Tight Junction Membrane Proteins",
                  "New York Consortium on Membrane Protein Structure",
                  "Enzyme Discovery for Natural Product Biosynthesis",
                  "Center for Structures of Membrane Proteins",
                  "Center for Structural Genomics of Infectious Diseases",
                  "South Africa Structural Targets Annotation Database",
                  "Partnership for Nuclear Receptor Signaling Code Biology",
                  "Structural Genomics Consortium for Research on Gene Expression",
                  "Joint Center for Structural Genomics",
                  "Protein Structure Factory",
                  "Israel Structural Proteomics Center"
               ],
               "examples": [
                  "Midwest Center for Structural Genomics"
               ],
               "description": "The value identifies the full name of center."
            },
            "id": {
               "type": "integer",
               "enum": [
                  "2",
                  "1",
                  "7",
                  "9",
                  "6",
                  "5",
                  "10",
                  "4",
                  "3",
                  "8"
               ],
               "examples": [
                  "1 2 3"
               ],
               "description": "A unique integer identifier for this center"
            },
            "initial_of_center": {
               "type": "string",
               "enum": [
                  "PSF",
                  "NYCOMPS",
                  "TMPC",
                  "S2F",
                  "MTBI",
                  "BSGC",
                  "TEMIMPS",
                  "SSPF",
                  "SPINE-2",
                  "CSMP",
                  "BIGS",
                  "OCSP",
                  "MSGP",
                  "SSGCID",
                  "UC4CDI",
                  "MPSbyNMR",
                  "OPPF",
                  "NHRs",
                  "BSGI",
                  "MPSBC",
                  "SPINE",
                  "MSGPP",
                  "TransportPDB",
                  "JCSG",
                  "CSGID",
                  "CESG",
                  "TBSGC",
                  "TCELL",
                  "YSG",
                  "NPCXstals",
                  "PCSEP",
                  "CHTSB",
                  "CEBS",
                  "TJMP",
                  "ISPC",
                  "MPID",
                  "MCMR",
                  "SGC",
                  "RSGI",
                  "NatPro",
                  "ISFI",
                  "NYSGXRC",
                  "SECSG",
                  "STEMCELL",
                  "NYSGRC",
                  "ATCG3D",
                  "CELLMAT",
                  "SGCGES",
                  "SGPP",
                  "MCSG",
                  "NESG",
                  "SASTAD",
                  "MPP",
                  "XMTB",
                  "CHSAM",
                  "IFN",
                  "GPCR"
               ],
               "examples": [
                  "JCSG"
               ],
               "description": "The value identifies the full name of center."
            },
            "project_name": {
               "type": "string",
               "enum": [
                  "PSI, Protein Structure Initiative",
                  "NPPSFA, National Project on Protein Structural and Functional Analyses",
                  "PSI:Biology",
                  "NIAID, National Institute of Allergy and Infectious Diseases",
                  "Enzyme Function Initiative"
               ],
               "examples": [
                  "PSI, Protein Structure Initiative"
               ],
               "description": "The value identifies the Structural Genomics project."
            }
         },
         "required": [
            "id"
         ]
      },
      "pdbx_audit_revision_details": {
         "type": "object",
         "properties": {
            "data_content_type": {
               "type": "string",
               "enum": [
                  "NMR restraints",
                  "NMR shifts",
                  "Structure factors",
                  "Structure model"
               ],
               "examples": [
                  "Structure model"
               ],
               "description": "The type of file that the pdbx_audit_revision_history record refers to."
            },
            "ordinal": {
               "type": "integer",
               "examples": [
                  "1"
               ],
               "description": "A unique identifier for the pdbx_audit_revision_details record."
            },
            "provider": {
               "type": "string",
               "enum": [
                  "repository",
                  "author"
               ],
               "examples": [
                  "repository"
               ],
               "description": "The provider of the revision."
            },
            "revision_ordinal": {
               "type": "integer",
               "examples": [
                  "1"
               ],
               "description": "A pointer to  _pdbx_audit_revision_history.ordinal"
            },
            "type": {
               "type": "string",
               "enum": [
                  "Coordinate replacement",
                  "Obsolete",
                  "Initial release"
               ],
               "examples": [
                  "Initial release"
               ],
               "description": "A type classification of the revision"
            }
         },
         "required": [
            "data_content_type",
            "ordinal",
            "revision_ordinal"
         ]
      },
      "pdbx_audit_revision_history": {
         "type": "object",
         "properties": {
            "data_content_type": {
               "type": "string",
               "enum": [
                  "NMR restraints",
                  "NMR shifts",
                  "Structure factors",
                  "Structure model"
               ],
               "examples": [
                  "Structure model"
               ],
               "description": "The type of file that the pdbx_audit_revision_history record refers to."
            },
            "major_revision": {
               "type": "integer",
               "examples": [
                  "1"
               ],
               "description": "The major version number of deposition release."
            },
            "minor_revision": {
               "type": "integer",
               "examples": [
                  "1"
               ],
               "description": "The minor version number of deposition release."
            },
            "ordinal": {
               "type": "integer",
               "examples": [
                  "1"
               ],
               "description": "A unique identifier for the pdbx_audit_revision_history record."
            },
            "revision_date": {
               "type": "string",
               "examples": [
                  "2017-03-08"
               ],
               "description": "The release date of the revision"
            }
         },
         "required": [
            "data_content_type",
            "major_revision",
            "minor_revision",
            "ordinal",
            "revision_date"
         ]
      },
      "pdbx_audit_support": {
         "type": "object",
         "properties": {
            "country": {
               "type": "string",
               "description": "The country providing the funding support for the entry."
            },
            "funding_organization": {
               "type": "string",
               "examples": [
                  "National Institutes of Health",
                  "Welcome Trust",
                  "National Institutes of Health/National Institute of General Medical Sciences"
               ],
               "description": "The name of the organization providing funding support for the \n entry."
            },
            "grant_number": {
               "type": "string",
               "description": "The grant number associated with this source of support."
            },
            "ordinal": {
               "type": "integer",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "A unique sequential integer identifier for each source of support for this entry."
            }
         },
         "required": [
            "ordinal"
         ]
      },
      "pdbx_database_PDB_obs_spr": {
         "type": "object",
         "properties": {
            "date": {
               "type": "string",
               "examples": [
                  "1997-03-30"
               ],
               "description": "The date of replacement.\n"
            },
            "details": {
               "type": "string",
               "description": "Details related to the replaced or replacing entry.\n"
            },
            "id": {
               "type": "string",
               "enum": [
                  "SPRSDE",
                  "OBSLTE"
               ],
               "examples": [
                  "OBSLTE"
               ],
               "description": "Identifier for the type of obsolete entry to be added to this entry."
            },
            "pdb_id": {
               "type": "string",
               "examples": [
                  "2ABC"
               ],
               "description": "The new PDB identifier for the replaced entry.\n"
            },
            "replace_pdb_id": {
               "type": "string",
               "examples": [
                  "3ABC"
               ],
               "description": "The PDB identifier for the replaced (OLD) entry/entries.\n"
            }
         },
         "required": [
            "date",
            "id",
            "pdb_id",
            "replace_pdb_id"
         ]
      },
      "pdbx_database_status": {
         "type": "object",
         "properties": {
            "SG_entry": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "examples": [
                  "Y"
               ],
               "description": "This code indicates whether the entry belongs to\n Structural Genomics Project."
            },
            "deposit_site": {
               "type": "string",
               "enum": [
                  "BMRB",
                  "PDBJ",
                  "BNL",
                  "NDB",
                  "PDBE",
                  "RCSB"
               ],
               "examples": [
                  "NDB",
                  "RCSB",
                  "PDBE",
                  "PDBJ",
                  "BMRB",
                  "BNL"
               ],
               "description": "The site where the file was deposited.\n"
            },
            "entry_id": {
               "type": "string",
               "examples": [
                  "BDL001"
               ],
               "description": "The value of _pdbx_database_status.entry_id identifies the data block.\n"
            },
            "methods_development_category": {
               "type": "string",
               "enum": [
                  "RNA-Puzzles",
                  "CAPRI",
                  "D3R",
                  "GPCR Dock",
                  "FoldIt",
                  "CASP",
                  "CASD-NMR"
               ],
               "examples": [
                  "CASP",
                  "CASD-NMR"
               ],
               "description": "The methods development category in which this\n entry has been placed."
            },
            "pdb_format_compatible": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "examples": [
                  "Y"
               ],
               "description": "A flag indicating that the entry is compatible with the PDB format.\n\n A value of 'N' indicates that the no PDB format data file is\n corresponding to this entry is available in the PDB archive.\n"
            },
            "process_site": {
               "type": "string",
               "enum": [
                  "PDBJ",
                  "BNL",
                  "NDB",
                  "PDBE",
                  "RCSB"
               ],
               "examples": [
                  "NDB",
                  "RCSB",
                  "PDBE",
                  "PDBJ",
                  "BNL"
               ],
               "description": "The site where the file was deposited.\n"
            },
            "recvd_initial_deposition_date": {
               "type": "string",
               "examples": [
                  "1983-02-21"
               ],
               "description": "The date of initial deposition.  (The first message for\n deposition has been received.)"
            },
            "status_code": {
               "type": "string",
               "enum": [
                  "UPD",
                  "REFI",
                  "HOLD",
                  "REL",
                  "TRSF",
                  "POLC",
                  "REV",
                  "PROC",
                  "OBS",
                  "BIB",
                  "WDRN",
                  "REPL",
                  "DEL",
                  "WAIT",
                  "RMVD",
                  "HPUB",
                  "AUTH",
                  "AUCO"
               ],
               "examples": [
                  "REL",
                  "HPUB"
               ],
               "description": "Code for status of file."
            },
            "status_code_cs": {
               "type": "string",
               "enum": [
                  "HOLD",
                  "REL",
                  "POLC",
                  "PROC",
                  "OBS",
                  "WDRN",
                  "REPL",
                  "WAIT",
                  "RMVD",
                  "HPUB",
                  "AUTH"
               ],
               "examples": [
                  "PROC  = Processing in progress\n     WAIT  = Awaiting author approval\n     REL   = Release\n     HOLD  = On hold until yyyy-mm-dd\n     HPUB  = On hold until publication\n     OBS   = Entry has been obsoleted and replaced by another entry\n     WDRN  = Entry has been withdrawn by depositor"
               ],
               "description": "Code for status of chemical shift data file."
            },
            "status_code_mr": {
               "type": "string",
               "enum": [
                  "HOLD",
                  "REL",
                  "POLC",
                  "PROC",
                  "OBS",
                  "WDRN",
                  "REPL",
                  "WAIT",
                  "RMVD",
                  "HPUB",
                  "AUTH"
               ],
               "examples": [
                  "PROC  = To be processed\n     REL   = Release\n     HOLD  = On hold until yyyy-mm-dd\n     HPUB  = On hold until publication\n     OBS   = Entry has been obsoleted and replaced by another entry\n     WDRN  = Entry has been withdrawn by depositor\n     WAIT  = Awaiting author approval"
               ],
               "description": "Code for status of NMR constraints file."
            },
            "status_code_sf": {
               "type": "string",
               "enum": [
                  "HOLD",
                  "REL",
                  "POLC",
                  "PROC",
                  "OBS",
                  "WDRN",
                  "REPL",
                  "WAIT",
                  "RMVD",
                  "HPUB",
                  "AUTH"
               ],
               "examples": [
                  "PROC  = To be processed\n     REL   = Released\n     HOLD  = On hold until yyyy-mm-dd\n     HPUB  = On hold until publication\n     OBS   = Entry has been obsoleted and replaced by another entry\n     WDRN  = Entry has been withdrawn by depositor\n     WAIT  = Awaiting author approval"
               ],
               "description": "Code for status of structure factor file."
            }
         },
         "required": [
            "entry_id",
            "status_code"
         ]
      },
      "pdbx_deposit_group": {
         "type": "object",
         "properties": {
            "group_description": {
               "type": "string",
               "description": "A description of the contents of entries in the collection."
            },
            "group_id": {
               "type": "string",
               "description": "A unique identifier for a group of entries deposited as a collection."
            },
            "group_title": {
               "type": "string",
               "description": "A title to describe the group of entries deposited in the collection."
            },
            "group_type": {
               "type": "string",
               "enum": [
                  "changed state",
                  "ground state",
                  "undefined"
               ],
               "description": "Text to describe a grouping of entries in multiple collections"
            }
         },
         "required": [
            "group_id"
         ]
      },
      "pdbx_molecule": {
         "type": "object",
         "properties": {
            "asym_id": {
               "type": "string",
               "examples": [
                  "A",
                  "B"
               ],
               "description": "A reference to _struct_asym.id in the STRUCT_ASYM category."
            },
            "instance_id": {
               "type": "integer",
               "description": "              The value of _pdbx_molecule.instance_id is identifies a particular molecule\n\t       in the molecule list."
            },
            "prd_id": {
               "type": "string",
               "description": "The value of _pdbx_molecule.prd_id is the PDB accession code for this \n reference molecule."
            }
         },
         "required": [
            "asym_id",
            "instance_id",
            "prd_id"
         ]
      },
      "pdbx_molecule_features": {
         "type": "object",
         "properties": {
            "class": {
               "type": "string",
               "enum": [
                  "Anticoagulant, Antithrombotic",
                  "Antibiotic",
                  "Thrombin inhibitor, Trypsin inhibitor",
                  "Lantibiotic",
                  "Antiparasitic",
                  "Antithrombotic",
                  "Antibiotic, Antimicrobial",
                  "Transport activator",
                  "Antibiotic, Antineoplastic",
                  "Thrombin inhibitor",
                  "Antineoplastic",
                  "Trypsin inhibitor",
                  "Anticancer",
                  "Antiretroviral",
                  "Immunosuppressant",
                  "Metal transport",
                  "Anticoagulant",
                  "Inhibitor",
                  "Antibiotic, Anthelmintic",
                  "Antiinflammatory",
                  "Antimicrobial",
                  "Antiviral",
                  "Unknown",
                  "Antimicrobial, Antiretroviral",
                  "Antimicrobial, Antiparasitic, Antibiotic",
                  "CASPASE inhibitor",
                  "Antagonist",
                  "Antitumor",
                  "Oxidation-reduction",
                  "Enzyme inhibitor",
                  "Antifungal",
                  "Chaperone binding",
                  "Receptor",
                  "Metabolism",
                  "Toxin",
                  "Anthelmintic",
                  "Antimicrobial, Antitumor",
                  "Growth factor"
               ],
               "description": "Broadly defines the function of the molecule."
            },
            "details": {
               "type": "string",
               "description": "Additional details describing the molecule."
            },
            "name": {
               "type": "string",
               "examples": [
                  "thiostrepton"
               ],
               "description": "A name of the molecule."
            },
            "prd_id": {
               "type": "string",
               "description": "The value of _pdbx_molecule_features.prd_id is the PDB accession code for this \n reference molecule."
            },
            "type": {
               "type": "string",
               "enum": [
                  "Cyclic peptide",
                  "Quinolone",
                  "Amino acid",
                  "Lipoglycopeptide",
                  "Macrolide",
                  "Chalkophore, Polypeptide",
                  "Chalkophore",
                  "Oligopeptide",
                  "Anthraquinone",
                  "Imino sugar",
                  "Ansamycin",
                  "Lipopeptide",
                  "Thiopeptide",
                  "Heterocyclic",
                  "Polypeptide",
                  "Cyclic lipopeptide",
                  "Cyclic depsipeptide",
                  "Nucleoside",
                  "Peptide-like",
                  "Chromophore",
                  "Unknown",
                  "Anthracycline",
                  "Oligosaccharide",
                  "Keto acid",
                  "Glycopeptide",
                  "Polysaccharide",
                  "Siderophore",
                  "Thiolactone",
                  "Aminoglycoside",
                  "Peptaibol",
                  "Polycyclic",
                  "Non-polymer"
               ],
               "examples": [
                  "Peptide-like",
                  "Macrolide"
               ],
               "description": "Defines the structural classification of the molecule."
            }
         },
         "required": [
            "prd_id"
         ]
      },
      "pdbx_nmr_details": {
         "type": "object",
         "properties": {
            "entry_id": {
               "type": "string",
               "description": "The entry ID for the structure determination."
            },
            "text": {
               "type": "string",
               "examples": [
                  "This structure was determined using standard 2D homonuclear techniques.",
                  "The structure was determined using triple-resonance NMR spectroscopy."
               ],
               "description": "Additional details describing the NMR experiment."
            }
         },
         "required": [
            "entry_id"
         ]
      },
      "pdbx_nmr_ensemble": {
         "type": "object",
         "properties": {
            "average_constraint_violations_per_residue": {
               "type": "integer",
               "examples": [
                  "0.25"
               ],
               "description": "The average number of constraint violations on a per residue basis for\n the ensemble."
            },
            "average_constraints_per_residue": {
               "type": "integer",
               "examples": [
                  "30.2"
               ],
               "description": "The average number of constraints per residue for the ensemble"
            },
            "average_distance_constraint_violation": {
               "type": "number",
               "examples": [
                  "0.11"
               ],
               "description": "The average distance restraint violation for the ensemble."
            },
            "average_torsion_angle_constraint_violation": {
               "type": "number",
               "examples": [
                  "2.4"
               ],
               "description": "The average torsion angle constraint violation for the ensemble."
            },
            "conformer_selection_criteria": {
               "type": "string",
               "examples": [
                  "structures with the lowest energy",
                  "structures with the least restraint violations",
                  "structures with acceptable covalent geometry",
                  "structures with favorable non-bond energy",
                  "target function",
                  "back calculated data agree with experimental NOESY spectrum",
                  "all calculated structures submitted",
                  "The submitted conformer models are the 25 structures with the lowest \n    energy.",
                  "The submitted conformer models are those with the fewest number of \n    constraint violations."
               ],
               "description": "\nBy highlighting the appropriate choice(s), describe how the submitted \nconformer (models) were selected."
            },
            "conformers_calculated_total_number": {
               "type": "integer",
               "exclusiveMinimum": 0,
               "examples": [
                  "40"
               ],
               "description": "The total number of conformer (models) that were calculated in the final round."
            },
            "conformers_submitted_total_number": {
               "type": "integer",
               "exclusiveMinimum": 0,
               "examples": [
                  "20"
               ],
               "description": "The number of conformer (models) that are submitted for the ensemble."
            },
            "distance_constraint_violation_method": {
               "type": "string",
               "examples": [
                  "Statistics were calculated over all of the distance constraints.",
                  "Statistics were calculated for violations only"
               ],
               "description": "Describe the method used to calculate the distance constraint violation statistics,\n i.e. are they calculated over all the distance constraints or calculated for\n violations only?"
            },
            "entry_id": {
               "type": "string",
               "description": "Leave this blank as the ID is provided by the MSD"
            },
            "maximum_distance_constraint_violation": {
               "type": "number",
               "examples": [
                  "0.4"
               ],
               "description": "The maximum distance constraint violation for the ensemble."
            },
            "maximum_lower_distance_constraint_violation": {
               "type": "number",
               "examples": [
                  "0.3"
               ],
               "description": "The maximum lower distance constraint violation for the ensemble."
            },
            "maximum_torsion_angle_constraint_violation": {
               "type": "number",
               "examples": [
                  "4"
               ],
               "description": "The maximum torsion angle constraint violation for the ensemble."
            },
            "maximum_upper_distance_constraint_violation": {
               "type": "number",
               "examples": [
                  "0.4"
               ],
               "description": "The maximum upper distance constraint violation for the ensemble."
            },
            "representative_conformer": {
               "type": "integer",
               "exclusiveMinimum": 0,
               "examples": [
                  "20"
               ],
               "description": "The number of the conformer identified as most representative."
            },
            "torsion_angle_constraint_violation_method": {
               "type": "string",
               "examples": [
                  "Statistics were calculated over all the torsion angle constraints.",
                  "Statistics were calculated for torsion angle constraints violations only."
               ],
               "description": " This item describes the method used to calculate the torsion angle constraint violation statistics.\ni.e. are the entered values based on all torsion angle or calculated for violations only?"
            }
         },
         "required": [
            "entry_id"
         ]
      },
      "pdbx_nmr_exptl": {
         "type": "object",
         "properties": {
            "conditions_id": {
               "type": "string",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "The number to identify the set of sample conditions."
            },
            "experiment_id": {
               "type": "string",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "A numerical ID for each experiment."
            },
            "sample_state": {
               "type": "string",
               "enum": [
                  "anisotropic",
                  "isotropic"
               ],
               "examples": [
                  "isotropic"
               ],
               "description": "\nPhysical state of the sample either anisotropic or isotropic."
            },
            "solution_id": {
               "type": "string",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "The solution_id from the Experimental Sample to identify the sample\n that these conditions refer to. \n\n [Remember to save the entries here before returning to the \n  Experimental Sample form]"
            },
            "spectrometer_id": {
               "type": "integer",
               "description": "\nPointer to '_pdbx_nmr_spectrometer.spectrometer_id'"
            },
            "type": {
               "type": "string",
               "examples": [
                  "2D NOESY",
                  "3D_15N-separated_NOESY",
                  "3D_13C-separated_NOESY",
                  "4D_13C-separated_NOESY",
                  "4D_13C/15N-separated_NOESY",
                  "3D_15N-separated_ROESY",
                  "3D_13C-separated_ROESY",
                  "HNCA-J",
                  "HNHA",
                  "DQF-COSY",
                  "P-COSY",
                  "PE-COSY",
                  "E-COSY"
               ],
               "description": "The type of NMR experiment."
            }
         },
         "required": [
            "conditions_id",
            "experiment_id",
            "solution_id"
         ]
      },
      "pdbx_nmr_exptl_sample_conditions": {
         "type": "object",
         "properties": {
            "conditions_id": {
               "type": "string",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "The condition number as defined above."
            },
            "details": {
               "type": "string",
               "examples": [
                  "The high salinity of the sample may have contributed to overheating of the sample during experiments with long saturation periods like the TOCSY experiments."
               ],
               "description": "\nGeneral details describing conditions of both the sample and the environment \nduring measurements."
            },
            "ionic_strength": {
               "type": "string",
               "description": "The ionic strength at which the NMR data were collected -in lieu of\n this enter the concentration and identity of the salt in the sample."
            },
            "ionic_strength_err": {
               "type": "number",
               "examples": [
                  "0.2"
               ],
               "description": "\nEstimate of the standard error for the value for the sample ionic strength."
            },
            "ionic_strength_units": {
               "type": "string",
               "enum": [
                  "Not defined",
                  "M",
                  "mM"
               ],
               "examples": [
                  "M"
               ],
               "description": "\nUnits for the value of the sample condition ionic strength.."
            },
            "label": {
               "type": "string",
               "examples": [
                  "conditions_1"
               ],
               "description": "\nA descriptive label that uniquely identifies this set of sample conditions."
            },
            "pH": {
               "type": "string",
               "examples": [
                  "3.1",
                  "7.0"
               ],
               "description": "The pH at which the NMR data were collected."
            },
            "pH_err": {
               "type": "number",
               "examples": [
                  "0.05"
               ],
               "description": "\nEstimate of the standard error for the value for the sample pH."
            },
            "pH_units": {
               "type": "string",
               "enum": [
                  "pH",
                  "pD",
                  "Not defined",
                  "pH*"
               ],
               "examples": [
                  "pH"
               ],
               "description": "\nUnits for the value of the sample condition pH."
            },
            "pressure": {
               "type": "string",
               "examples": [
                  "ambient",
                  "1atm"
               ],
               "description": "The pressure at which NMR data were collected."
            },
            "pressure_err": {
               "type": "number",
               "examples": [
                  "0.01"
               ],
               "description": "\nEstimate of the standard error for the value for the sample pressure."
            },
            "pressure_units": {
               "type": "string",
               "examples": [
                  "Pa",
                  "atm",
                  "Torr"
               ],
               "description": "The units of pressure at which NMR data were collected."
            },
            "temperature": {
               "type": "string",
               "examples": [
                  "298"
               ],
               "description": "The temperature (in Kelvin) at which NMR data were\n collected."
            },
            "temperature_err": {
               "type": "number",
               "examples": [
                  "0.2"
               ],
               "description": "\nEstimate of the standard error for the value for the sample temperature."
            },
            "temperature_units": {
               "type": "string",
               "enum": [
                  "C",
                  "Not defined",
                  "K"
               ],
               "examples": [
                  "K"
               ],
               "description": "\nUnits for the value of the sample condition temperature."
            }
         },
         "required": [
            "conditions_id"
         ]
      },
      "pdbx_nmr_refine": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "examples": [
                  "Additional comments about the NMR refinement can be placed here, e.g.\nthe structures are based on a total of 3344 restraints, 3167 are NOE-derived\ndistance constraints, 68 dihedral angle restraints,109 distance restraints \nfrom hydrogen bonds."
               ],
               "description": "Additional details about the NMR refinement."
            },
            "entry_id": {
               "type": "string",
               "description": "You can leave this blank as an ID will be assigned by the RCSB\n to the constraint file."
            },
            "method": {
               "type": "string",
               "examples": [
                  "distance geometry\n  simulated annealing\n  molecular dynamics\n  matrix relaxation\n  torsion angle dynamics"
               ],
               "description": "The method used to determine the structure."
            },
            "software_ordinal": {
               "type": "integer",
               "description": "Pointer to _software.ordinal"
            }
         },
         "required": [
            "entry_id",
            "software_ordinal"
         ]
      },
      "pdbx_nmr_sample_details": {
         "type": "object",
         "properties": {
            "contents": {
               "type": "string",
               "examples": [
                  "2mM Ribonuclease  U-15N,13C; 50mM phosphate buffer NA; 90% H2O, 10% D2O"
               ],
               "description": "\nA complete description of each NMR sample. Include the concentration \nand concentration units for each component (include buffers, etc.). For each\ncomponent describe the isotopic composition, including the % labeling level,\nif known. \n\nFor example:\n1. Uniform (random) labeling with 15N: U-15N\n2. Uniform (random) labeling with 13C, 15N at known labeling\n   levels: U-95% 13C;U-98% 15N\n3. Residue selective labeling: U-95% 15N-Thymine\n4. Site specific labeling: 95% 13C-Ala18,\n5. Natural abundance labeling in an otherwise uniformly labeled\n   biomolecule is designated by NA: U-13C; NA-K,H\n"
            },
            "details": {
               "type": "string",
               "examples": [
                  "The added glycerol was used to raise the viscosity of the solution to 1.05 poisson."
               ],
               "description": "\nBrief description of the sample providing additional information not captured by other items in the category."
            },
            "label": {
               "type": "string",
               "examples": [
                  "15N_sample"
               ],
               "description": "\nA value that uniquely identifies this sample from the other samples listed \nin the entry."
            },
            "solution_id": {
               "type": "string",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "\nThe name (number) of the sample."
            },
            "solvent_system": {
               "type": "string",
               "examples": [
                  "90% H2O, 10% D2O"
               ],
               "description": "\nThe solvent system used for this sample."
            },
            "type": {
               "type": "string",
               "enum": [
                  "reverse micelle",
                  "lyophilized powder",
                  "gel solution",
                  "solution",
                  "single crystal",
                  "fiber",
                  "bicelle",
                  "emulsion",
                  "filamentous virus",
                  "gel solid",
                  "liposome",
                  "membrane",
                  "oriented membrane film",
                  "polycrystalline powder",
                  "fibrous protein",
                  "micelle",
                  "solid"
               ],
               "examples": [
                  "bicelle"
               ],
               "description": "\nA descriptive term for the sample that defines the general physical properties \nof the sample."
            }
         },
         "required": [
            "solution_id"
         ]
      },
      "pdbx_nmr_software": {
         "type": "object",
         "properties": {
            "authors": {
               "type": "string",
               "examples": [
                  "Brunger",
                  "Guentert"
               ],
               "description": "The name of the authors of the software used in this\n procedure."
            },
            "classification": {
               "type": "string",
               "examples": [
                  "collection",
                  "processing",
                  "data analysis",
                  "structure solution",
                  "refinement",
                  "iterative matrix relaxation"
               ],
               "description": "The purpose of the software."
            },
            "name": {
               "type": "string",
               "examples": [
                  "ANSIG",
                  "AURELIA",
                  "AZARA",
                  "CHARMM",
                  "CORMA",
                  "DIANA",
                  "DYANA",
                  "DSPACE",
                  "DISGEO",
                  "DGII",
                  "DISMAN",
                  "DINOSAUR",
                  "DISCOVER",
                  "FELIX",
                  "FT_NMR",
                  "GROMOS",
                  "IRMA",
                  "MARDIGRAS",
                  "NMRPipe",
                  "SA",
                  "UXNMR",
                  "VNMR",
                  "X-PLOR",
                  "XWINNMR"
               ],
               "description": "The name of the software used for the task."
            },
            "ordinal": {
               "type": "integer",
               "examples": [
                  "1",
                  "2"
               ],
               "description": "\nAn ordinal index for this category"
            },
            "version": {
               "type": "string",
               "examples": [
                  "940501.3",
                  "2.1"
               ],
               "description": "The version of the software."
            }
         },
         "required": [
            "classification",
            "name",
            "ordinal"
         ]
      },
      "pdbx_nmr_spectrometer": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "description": "\nA text description of the NMR spectrometer."
            },
            "field_strength": {
               "type": "number",
               "examples": [
                  "360",
                  "400",
                  "500",
                  "600",
                  "750",
                  "800",
                  "850",
                  "900",
                  "950",
                  "1000"
               ],
               "description": "\nSelect the field strength for protons in MHz."
            },
            "manufacturer": {
               "type": "string",
               "examples": [
                  "Varian",
                  "Bruker",
                  "JEOL",
                  "GE"
               ],
               "description": "\nThe name of the manufacturer of the spectrometer."
            },
            "model": {
               "type": "string",
               "examples": [
                  "AVANCE",
                  "WH",
                  "WM",
                  "AM",
                  "AMX",
                  "DMX",
                  "DRX",
                  "MSL",
                  "OMEGA",
                  "OMEGA PSG",
                  "GX",
                  "GSX",
                  "A",
                  "AL",
                  "EC",
                  "EX",
                  "LA",
                  "ECP",
                  "VXRS",
                  "UNITY",
                  "UNITYPLUS",
                  "INOVA"
               ],
               "description": "\nThe model of the NMR spectrometer."
            },
            "spectrometer_id": {
               "type": "string",
               "examples": [
                  "1",
                  "2",
                  "3"
               ],
               "description": "\nAssign a numerical ID to each instrument."
            },
            "type": {
               "type": "string",
               "examples": [
                  "Bruker WH",
                  "Bruker WM",
                  "Bruker AM",
                  "Bruker AMX",
                  "Bruker DMX",
                  "Bruker DRX",
                  "Bruker MSL",
                  "Bruker AVANCE",
                  "GE Omega",
                  "GE Omega PSG",
                  "JEOL GX",
                  "JEOL GSX",
                  "JEOL A",
                  "JEOL AL",
                  "JEOL EC",
                  "JEOL EX",
                  "JEOL LA",
                  "JEOL ECP",
                  "Varian VXRS",
                  "Varian UNITY",
                  "Varian UNITYplus",
                  "Varian INOVA",
                  "other"
               ],
               "description": "\nSelect the instrument manufacturer(s) and the model(s) of the NMR(s)\nused for this work."
            }
         },
         "required": [
            "spectrometer_id"
         ]
      },
      "rcsb_load_status": {
         "type": "object",
         "properties": {
            "datablock_name": {
               "type": "string",
               "description": "Source data block containing the loaded data set"
            },
            "load_date": {
               "type": "string",
               "description": "Time stamp of data load"
            },
            "locator": {
               "type": "string",
               "description": "Locator of file containing loaded data"
            }
         },
         "required": [
            "datablock_name",
            "load_date",
            "locator"
         ]
      },
      "refine": {
         "type": "object",
         "properties": {
            "B_iso_max": {
               "type": "number",
               "description": "The maximum isotropic displacement parameter (B value)\n found in the coordinate set."
            },
            "B_iso_mean": {
               "type": "number",
               "minimum": 5,
               "maximum": 70,
               "description": "The mean isotropic displacement parameter (B value)\n for the coordinate set."
            },
            "B_iso_min": {
               "type": "number",
               "description": "The minimum isotropic displacement parameter (B value)\n found in the coordinate set."
            },
            "aniso_B_1_1": {
               "type": "number",
               "description": "The [1][1] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure."
            },
            "aniso_B_1_2": {
               "type": "number",
               "description": "The [1][2] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure."
            },
            "aniso_B_1_3": {
               "type": "number",
               "description": "The [1][3] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure."
            },
            "aniso_B_2_2": {
               "type": "number",
               "description": "The [2][2] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure."
            },
            "aniso_B_2_3": {
               "type": "number",
               "description": "The [2][3] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure."
            },
            "aniso_B_3_3": {
               "type": "number",
               "description": "The [3][3] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure."
            },
            "correlation_coeff_Fo_to_Fc": {
               "type": "number",
               "minimum": 0,
               "maximum": 1,
               "description": "            The correlation coefficient between the observed and\n             calculated structure factors for reflections included in\n             the refinement.\n\n             The correlation coefficient is scale-independent and gives\n             an idea of the quality of the refined model.\n\n                          sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)\nR~corr~ = ------------------------------------------------------------\n          SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}\n\n             Fo = observed structure factors\n             Fc = calculated structure factors\n             <>   denotes average value\n\n             summation is over reflections included in the refinement"
            },
            "correlation_coeff_Fo_to_Fc_free": {
               "type": "number",
               "minimum": 0,
               "maximum": 1,
               "description": "            The correlation coefficient between the observed and\n             calculated structure factors for reflections not included\n             in the refinement (free reflections).\n\n              The correlation coefficient is scale-independent and gives\n              an idea of the quality of the refined model.\n\n                          sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)\nR~corr~ = ------------------------------------------------------------\n          SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}\n\n              Fo  = observed structure factors\n              Fc  = calculated structure factors\n              <>    denotes average value\n\n              summation is over reflections not included\n              in the refinement (free reflections)"
            },
            "details": {
               "type": "string",
               "description": "Description of special aspects of the refinement process."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "ls_R_factor_R_free": {
               "type": "number",
               "minimum": 0,
               "maximum": 1,
               "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections"
            },
            "ls_R_factor_R_free_error": {
               "type": "number",
               "minimum": 0.01,
               "maximum": 0.03,
               "description": "The estimated error in _refine.ls_R_factor_R_free.\n The method used to estimate the error is described in the\n item _refine.ls_R_factor_R_free_error_details."
            },
            "ls_R_factor_R_free_error_details": {
               "type": "string",
               "description": "Special aspects of the method used to estimated the error in\n _refine.ls_R_factor_R_free."
            },
            "ls_R_factor_R_work": {
               "type": "number",
               "minimum": 0.1,
               "maximum": 0.3,
               "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the working\n reflections (i.e. were included in the refinement)  when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n _refine.ls_R_factor_obs should not be confused with\n _refine.ls_R_factor_R_work; the former reports the results of a\n refinement in which all observed reflections were used, the\n latter a refinement in which a subset of the observed\n reflections were excluded from refinement for the calculation\n of a 'free' R factor. However, it would be meaningful to quote\n both values if a 'free' R factor were calculated for most of\n the refinement, but all of the observed reflections were used\n in the final rounds of refinement; such a protocol should be\n explained in _refine.details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections"
            },
            "ls_R_factor_all": {
               "type": "number",
               "minimum": 0,
               "maximum": 1,
               "description": "Residual factor R for all reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections"
            },
            "ls_R_factor_obs": {
               "type": "number",
               "minimum": 0,
               "maximum": 1,
               "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion.\n\n _refine.ls_R_factor_obs should not be confused with\n _refine.ls_R_factor_R_work; the former reports the results of a\n refinement in which all observed reflections were used, the\n latter a refinement in which a subset of the observed\n reflections were excluded from refinement for the calculation\n of a 'free' R factor. However, it would be meaningful to quote\n both values if a 'free' R factor were calculated for most of\n the refinement, but all of the observed reflections were used\n in the final rounds of refinement; such a protocol should be\n explained in _refine.details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections"
            },
            "ls_d_res_high": {
               "type": "number",
               "minimum": 0.5,
               "maximum": 8,
               "description": "The smallest value for the interplanar spacings for the\n reflection data used in the refinement in angstroms. This is\n called the highest resolution."
            },
            "ls_d_res_low": {
               "type": "number",
               "minimum": 5,
               "maximum": 200,
               "description": "The largest value for the interplanar spacings for\n the reflection data used in the refinement in angstroms.\n This is called the lowest resolution."
            },
            "ls_matrix_type": {
               "type": "string",
               "enum": [
                  "userblock",
                  "sparse",
                  "fullcycle",
                  "atomblock",
                  "diagonal",
                  "full"
               ],
               "description": "Type of matrix used to accumulate the least-squares derivatives."
            },
            "ls_number_parameters": {
               "type": "integer",
               "minimum": 0,
               "description": "The number of parameters refined in the least-squares process.\n If possible, this number should include some contribution from\n the restrained parameters. The restrained parameters are\n distinct from the constrained parameters (where one or more\n parameters are linearly dependent on the refined value of\n another). Least-squares restraints often depend on geometry or\n energy considerations and this makes their direct contribution\n to this number, and to the goodness-of-fit calculation,\n difficult to assess."
            },
            "ls_number_reflns_R_free": {
               "type": "integer",
               "minimum": 40,
               "maximum": 16000,
               "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details."
            },
            "ls_number_reflns_R_work": {
               "type": "integer",
               "minimum": 0,
               "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, and that were used as the working\n reflections (i.e. were included in the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details."
            },
            "ls_number_reflns_all": {
               "type": "integer",
               "minimum": 1000,
               "maximum": 300000,
               "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low."
            },
            "ls_number_reflns_obs": {
               "type": "integer",
               "minimum": 1000,
               "maximum": 300000,
               "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion."
            },
            "ls_number_restraints": {
               "type": "integer",
               "minimum": 0,
               "description": "The number of restrained parameters. These are parameters which\n are not directly dependent on another refined parameter.\n Restrained parameters often involve geometry or energy\n dependencies.\n See also _atom_site.constraints and _atom_site.refinement_flags.\n A general description of refinement constraints may appear in\n _refine.details."
            },
            "ls_percent_reflns_R_free": {
               "type": "number",
               "minimum": 1,
               "maximum": 12,
               "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor,\n expressed as a percentage of the number of geometrically\n observable reflections that satisfy the resolution limits."
            },
            "ls_percent_reflns_obs": {
               "type": "number",
               "minimum": 50,
               "maximum": 100,
               "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, expressed as a percentage of the\n number of geometrically observable reflections that satisfy\n the resolution limits."
            },
            "ls_redundancy_reflns_all": {
               "type": "number",
               "description": "The ratio of the total number of observations of the\n reflections that satisfy the resolution limits established by\n _refine.ls_d_res_high and _refine.ls_d_res_low to the number\n of crystallographically unique reflections that satisfy the\n same limits."
            },
            "ls_redundancy_reflns_obs": {
               "type": "number",
               "description": "The ratio of the total number of observations of the\n reflections that satisfy the resolution limits established by\n _refine.ls_d_res_high and _refine.ls_d_res_low and the\n observation limit established by _reflns.observed_criterion to\n the number of crystallographically unique reflections that\n satisfy the same limits."
            },
            "ls_wR_factor_R_free": {
               "type": "number",
               "minimum": 0.0,
               "description": "Weighted residual factor wR for reflections that satisfy the\n resolution limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n      ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^\n wR = ( ---------------------------- )\n      (        sum|w Y~obs~^2^|      )\n\n Y~obs~  = the observed amplitude specified by\n           _refine.ls_structure_factor_coef\n Y~calc~ = the calculated amplitude specified by\n           _refine.ls_structure_factor_coef\n w       = the least-squares weight\n\n sum is taken over the specified reflections"
            },
            "ls_wR_factor_R_work": {
               "type": "number",
               "minimum": 0.0,
               "description": "Weighted residual factor wR for reflections that satisfy the\n resolution limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the working\n reflections (i.e. were included in the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n      ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^\n wR = ( ---------------------------- )\n      (        sum|w Y~obs~^2^|      )\n\n Y~obs~  = the observed amplitude specified by\n           _refine.ls_structure_factor_coef\n Y~calc~ = the calculated amplitude specified by\n           _refine.ls_structure_factor_coef\n w       = the least-squares weight\n\n sum is taken over the specified reflections"
            },
            "occupancy_max": {
               "type": "number",
               "minimum": 0.0,
               "description": "The maximum value for occupancy found in the coordinate set."
            },
            "occupancy_min": {
               "type": "number",
               "minimum": 0.0,
               "description": "The minimum value for occupancy found in the coordinate set."
            },
            "overall_FOM_free_R_set": {
               "type": "number",
               "description": "Average figure of merit of phases of reflections not included\n in the refinement.\n\n This value is derived from the likelihood function.\n\n FOM           = I~1~(X)/I~0~(X)\n\n I~0~, I~1~     = zero- and first-order modified Bessel functions\n                 of the first kind\n X              = sigma~A~ |E~o~| |E~c~|/SIGMA\n E~o~, E~c~     = normalized observed and calculated structure\n                 factors\n sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                 estimated using maximum likelihood\n Sigma~P~       = sum~{atoms in model}~ f^2^\n Sigma~N~       = sum~{atoms in crystal}~ f^2^\n f              = form factor of atoms\n delta~x~       = expected error\n SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n sigma~{E;exp}~ = uncertainties of normalized observed\n                 structure factors\n epsilon       = multiplicity of the diffracting plane\n\n Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n      Acta Cryst. D53, 240-255."
            },
            "overall_FOM_work_R_set": {
               "type": "number",
               "description": "Average figure of merit of phases of reflections included in\n the refinement.\n\n This value is derived from the likelihood function.\n\n FOM           = I~1~(X)/I~0~(X)\n\n I~0~, I~1~     = zero- and first-order modified Bessel functions\n                 of the first kind\n X              = sigma~A~ |E~o~| |E~c~|/SIGMA\n E~o~, E~c~     = normalized observed and calculated structure\n                 factors\n sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                 estimated using maximum likelihood\n Sigma~P~       = sum~{atoms in model}~ f^2^\n Sigma~N~       = sum~{atoms in crystal}~ f^2^\n f              = form factor of atoms\n delta~x~       = expected error\n SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n sigma~{E;exp}~ = uncertainties of normalized observed\n                 structure factors\n epsilon       = multiplicity of the diffracting plane\n\n Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n      Acta Cryst. D53, 240-255."
            },
            "overall_SU_B": {
               "type": "number",
               "minimum": 0.1,
               "maximum": 42,
               "description": "          The overall standard uncertainty (estimated standard deviation)\n           of the displacement parameters based on a maximum-likelihood\n           residual.\n\n           The overall standard uncertainty (sigma~B~)^2^ gives an idea\n           of the uncertainty in the B values of averagely defined\n           atoms (atoms with B values equal to the average B value).\n\n                                         N~a~\n(sigma~B~)^2^ = 8 ----------------------------------------------\n                  sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^4^}\n\n           N~a~           = number of atoms\n           E~o~           = normalized structure factors\n           m              = figure of merit of phases of reflections\n                            included in the summation\n           s              = reciprocal-space vector\n\n           SUM_AS         = (sigma~A~)^2^/Sigma^2^\n           Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n           sigma~{E;exp}~  = experimental uncertainties of normalized\n                            structure factors\n           sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                            estimated using maximum likelihood\n           Sigma~P~        = sum~{atoms in model}~ f^2^\n           Sigma~N~        = sum~{atoms in crystal}~ f^2^\n           f               = atom form factor \n           delta~x~        = expected error\n           epsilon         = multiplicity of diffracting plane\n\n           summation is over all reflections included in refinement\n\n           Ref: (sigma~A~ estimation) \"Refinement of macromolecular\n                structures by the maximum-likelihood method\",\n                Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n                Acta Cryst. D53, 240-255.\n\n                (SU B estimation) Murshudov, G. N. & Dodson,\n                E. J. (1997). Simplified error estimation a la\n                Cruickshank in macromolecular crystallography.\n                CCP4 Newsletter on Protein Crystallography, No. 33,\n                January 1997, pp. 31-39.\n\n               http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html"
            },
            "overall_SU_ML": {
               "type": "number",
               "minimum": 0,
               "maximum": 0.6,
               "description": "          The overall standard uncertainty (estimated standard deviation)\n           of the positional parameters based on a maximum likelihood\n           residual.\n\n           The overall standard uncertainty (sigma~X~)^2^ gives an\n           idea of the uncertainty in the position of averagely\n           defined atoms (atoms with B values equal to average B value)\n\n                 3                         N~a~\n(sigma~X~)^2^  = ---------------------------------------------------------\n                 8 pi^2^ sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^2^}\n\n           N~a~           = number of atoms\n           E~o~           = normalized structure factors\n           m              = figure of merit of phases of reflections\n                            included in the summation\n           s              = reciprocal-space vector\n\n           SUM_AS         = (sigma~A~)^2^/Sigma^2^\n           Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n           sigma~{E;exp}~  = experimental uncertainties of normalized\n                            structure factors\n           sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                            estimated using maximum likelihood\n           Sigma~P~        = sum~{atoms in model}~ f^2^\n           Sigma~N~        = sum~{atoms in crystal}~ f^2^\n           f               = atom form factor\n           delta~x~        = expected error\n           epsilon         = multiplicity of diffracting plane\n\n           summation is over all reflections included in refinement\n\n           Ref: (sigma_A estimation) \"Refinement of macromolecular\n                structures by the maximum-likelihood method\",\n                Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n                Acta Cryst. D53, 240-255.\n\n                (SU ML estimation) Murshudov, G. N. & Dodson,\n                E. J. (1997). Simplified error estimation a la\n                Cruickshank in macromolecular crystallography.\n                CCP4 Newsletter on Protein Crystallography, No. 33,\n                January 1997, pp. 31-39.\n\n               http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html"
            },
            "overall_SU_R_Cruickshank_DPI": {
               "type": "number",
               "minimum": 0,
               "maximum": 0.7,
               "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n The overall standard uncertainty (sigma~B~) gives an idea\n of the uncertainty in the B values of averagely defined\n atoms (atoms with B values equal to the average B value).\n\n                        N~a~\n (sigma~B~)^2^ = 0.65 ---------- (R~value~)^2^ (D~min~)^2^ C^-2/3^\n                      (N~o~-N~p~)\n\n\n N~a~     = number of atoms included in refinement\n N~o~     = number of observations\n N~p~     = number of parameters refined\n R~value~ = conventional crystallographic R value\n D~min~   = maximum resolution\n C        = completeness of data\n\n Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.\n\n      Murshudov, G. N. & Dodson,\n      E. J. (1997). Simplified error estimation a la\n      Cruickshank in macromolecular crystallography.\n      CCP4 Newsletter on Protein Crystallography, No. 33,\n      January 1997, pp. 31-39.\n\n     http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html\n"
            },
            "overall_SU_R_free": {
               "type": "number",
               "minimum": 0,
               "maximum": 0.45,
               "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the free R value.\n\n The overall standard uncertainty (sigma~B~) gives an idea\n of the uncertainty in the B values of averagely defined\n atoms (atoms with B values equal to the average B value).\n\n                        N~a~\n (sigma~B~)^2^ = 0.65 ---------- (R~free~)^2^ (D~min~)^2^ C^-2/3^\n                      (N~o~-N~p~)\n\n\n N~a~     = number of atoms included in refinement\n N~o~     = number of observations\n N~p~     = number of parameters refined\n R~free~  = conventional free crystallographic R value calculated\n          using reflections not included in refinement\n D~min~   = maximum resolution\n C        = completeness of data\n\n Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.\n\n      Murshudov, G. N. & Dodson,\n      E. J. (1997). Simplified error estimation a la\n      Cruickshank in macromolecular crystallography.\n      CCP4 Newsletter on Protein Crystallography, No. 33,\n      January 1997, pp. 31-39.\n\n     http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html"
            },
            "pdbx_R_Free_selection_details": {
               "type": "string",
               "examples": [
                  "Random selection"
               ],
               "description": "Details of the manner in which the cross validation\n reflections were selected."
            },
            "pdbx_TLS_residual_ADP_flag": {
               "type": "string",
               "enum": [
                  "UNVERIFIED",
                  "LIKELY RESIDUAL"
               ],
               "description": "A flag for TLS refinements identifying the type of atomic displacement parameters stored\n in _atom_site.B_iso_or_equiv."
            },
            "pdbx_average_fsc_free": {
               "type": "number",
               "description": "Average Fourier Shell Correlation (avgFSC) between model and\n observed structure factors for reflections not included in refinement.\n\n The average FSC is a measure of the agreement between observed\n and calculated structure factors.\n\n                  sum(N~i~ FSC~free-i~)\n avgFSC~free~   = ---------------------\n                  sum(N~i~)\n\n\n N~i~          = the number of free reflections in the resolution shell i\n FSC~free-i~   = FSC for free reflections in the i-th resolution shell calculated as:\n\n                (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~free-i~  = -------------------------------------------\n                (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation of FSC~free-i~ is carried over all free reflections in the resolution shell.\n\n Summation of avgFSC~free~ is carried over all resolution shells.\n\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n"
            },
            "pdbx_average_fsc_overall": {
               "type": "number",
               "description": "Overall average Fourier Shell Correlation (avgFSC) between model and\n observed structure factors for all reflections.\n\n The average FSC is a measure of the agreement between observed\n and calculated structure factors.\n\n            sum(N~i~ FSC~i~)\n avgFSC   = ----------------\n            sum(N~i~)\n\n\n N~i~     = the number of all reflections in the resolution shell i\n FSC~i~   = FSC for all reflections in the i-th resolution shell calculated as:\n\n           (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~i~  = -------------------------------------------\n           (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation of FSC~i~ is carried over all reflections in the resolution shell.\n\n Summation of avgFSC is carried over all resolution shells.\n\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n"
            },
            "pdbx_average_fsc_work": {
               "type": "number",
               "description": "Average Fourier Shell Correlation (avgFSC) between model and \n observed structure factors for reflections included in refinement.\n\n The average FSC is a measure of the agreement between observed \n and calculated structure factors.\n\n                  sum(N~i~ FSC~work-i~) \n avgFSC~work~   = ---------------------\n                  sum(N~i~)\n\n\n N~i~          = the number of working reflections in the resolution shell i\n FSC~work-i~   = FSC for working reflections in the i-th resolution shell calculated as:\n\n                (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~work-i~  = -------------------------------------------\n                (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation of FSC~work-i~ is carried over all working reflections in the resolution shell.\n\n Summation of avgFSC~work~ is carried over all resolution shells.\n\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n"
            },
            "pdbx_data_cutoff_high_absF": {
               "type": "number",
               "examples": [
                  "17600"
               ],
               "description": "Value of F at \"high end\" of data cutoff."
            },
            "pdbx_data_cutoff_high_rms_absF": {
               "type": "number",
               "examples": [
                  "205.1"
               ],
               "description": "Value of RMS |F| used as high data cutoff."
            },
            "pdbx_data_cutoff_low_absF": {
               "type": "number",
               "examples": [
                  "0.30"
               ],
               "description": "Value of F at \"low end\" of data cutoff."
            },
            "pdbx_diffrn_id": {
               "type": "array",
               "items": {
                  "type": "string",
                  "description": "An identifier for the diffraction data set used in this refinement.\n\n Multiple diffraction data sets specified as a comma separated list."
               },
               "uniqueItems": true
            },
            "pdbx_isotropic_thermal_model": {
               "type": "string",
               "examples": [
                  "Isotropic",
                  "Overall"
               ],
               "description": "\nWhether the structure was refined with indvidual\nisotropic, anisotropic or overall temperature factor."
            },
            "pdbx_ls_cross_valid_method": {
               "type": "string",
               "examples": [
                  "FREE R-VALUE"
               ],
               "description": "\nWhether the cross validataion method was used through\nout or only at the end."
            },
            "pdbx_ls_sigma_F": {
               "type": "number",
               "description": "Data cutoff (SIGMA(F))"
            },
            "pdbx_ls_sigma_Fsqd": {
               "type": "number",
               "description": "Data cutoff (SIGMA(F^2))"
            },
            "pdbx_ls_sigma_I": {
               "type": "number",
               "description": "Data cutoff (SIGMA(I))"
            },
            "pdbx_method_to_determine_struct": {
               "type": "string",
               "examples": [
                  "AB INITIO PHASING",
                  "DM",
                  "ISAS",
                  "ISIR",
                  "ISIRAS",
                  "MAD",
                  "MIR",
                  "MIRAS",
                  "MR",
                  "SIR",
                  "SIRAS"
               ],
               "description": "Method(s) used to determine the structure."
            },
            "pdbx_overall_ESU_R": {
               "type": "number",
               "minimum": 0,
               "maximum": 1.2,
               "description": "Overall estimated standard uncertainties of positional\n parameters based on R value."
            },
            "pdbx_overall_ESU_R_Free": {
               "type": "number",
               "minimum": 0,
               "maximum": 0.7,
               "description": "Overall estimated standard uncertainties of positional parameters based on R free value."
            },
            "pdbx_overall_SU_R_Blow_DPI": {
               "type": "number",
               "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n Ref: Blow, D (2002) Acta Cryst. D58, 792-797\n"
            },
            "pdbx_overall_SU_R_free_Blow_DPI": {
               "type": "number",
               "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R-free value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n Ref: Blow, D (2002) Acta Cryst. D58, 792-797\n"
            },
            "pdbx_overall_SU_R_free_Cruickshank_DPI": {
               "type": "number",
               "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R-free value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.\n"
            },
            "pdbx_overall_phase_error": {
               "type": "number",
               "examples": [
                  "0.30"
               ],
               "description": "The overall phase error for all reflections after refinement using\n the current refinement target."
            },
            "pdbx_refine_id": {
               "type": "string",
               "description": "This data item uniquely identifies a refinement within an entry.\n _refine.pdbx_refine_id can be used to distinguish the results of \n joint refinements."
            },
            "pdbx_solvent_ion_probe_radii": {
               "type": "number",
               "description": "For bulk solvent mask calculation, the amount that the ionic radii of atoms, which can be ions, are increased used."
            },
            "pdbx_solvent_shrinkage_radii": {
               "type": "number",
               "description": "For bulk solvent mask calculation, amount mask is shrunk after taking away atoms with new radii and a constant value assigned to this new region."
            },
            "pdbx_solvent_vdw_probe_radii": {
               "type": "number",
               "description": "For bulk solvent mask calculation, the value by which the vdw radii of non-ion atoms (like carbon) are increased and used."
            },
            "pdbx_starting_model": {
               "type": "string",
               "examples": [
                  "BDL001"
               ],
               "description": "Starting model for refinement.  Starting model for\n molecular replacement should refer to a previous\n structure or experiment."
            },
            "pdbx_stereochem_target_val_spec_case": {
               "type": "string",
               "description": "\nSpecial case of stereochemistry target values used\nin SHELXL refinement.\n"
            },
            "pdbx_stereochemistry_target_values": {
               "type": "string",
               "description": "Stereochemistry target values used in refinement."
            },
            "solvent_model_details": {
               "type": "string",
               "description": "Special aspects of the solvent model used during refinement."
            },
            "solvent_model_param_bsol": {
               "type": "number",
               "minimum": 5,
               "maximum": 300,
               "description": "The value of the BSOL solvent-model parameter describing\n the average isotropic displacement parameter of disordered\n solvent atoms.\n\n This is one of the two parameters (the other is\n _refine.solvent_model_param_ksol) in Tronrud's method of\n modelling the contribution of bulk solvent to the\n scattering. The standard scale factor is modified according\n to the expression\n\n     k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]\n\n where k0 and B0 are the scale factors for the protein.\n\n Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268."
            },
            "solvent_model_param_ksol": {
               "type": "number",
               "minimum": 0.1,
               "maximum": 1,
               "description": "The value of the KSOL solvent-model parameter describing\n the ratio of the electron density in the bulk solvent to the\n electron density in the molecular solute.\n\n This is one of the two parameters (the other is\n _refine.solvent_model_param_bsol) in Tronrud's method of\n modelling the contribution of bulk solvent to the\n scattering. The standard scale factor is modified according\n to the expression\n\n     k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]\n\n where k0 and B0 are the scale factors for the protein.\n\n Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268."
            }
         },
         "required": [
            "entry_id",
            "ls_d_res_high",
            "pdbx_refine_id"
         ]
      },
      "refine_analyze": {
         "type": "object",
         "properties": {
            "Luzzati_coordinate_error_free": {
               "type": "number",
               "description": "The estimated coordinate error obtained from the plot of\n the R value versus sin(theta)/lambda for the reflections\n treated as a test set during refinement.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810."
            },
            "Luzzati_coordinate_error_obs": {
               "type": "number",
               "description": "The estimated coordinate error obtained from the plot of\n the R value versus sin(theta)/lambda for reflections classified\n as observed.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810."
            },
            "Luzzati_d_res_low_free": {
               "type": "number",
               "description": "The value of the low-resolution cutoff used in constructing the\n Luzzati plot for reflections treated as a test set during\n refinement.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810."
            },
            "Luzzati_d_res_low_obs": {
               "type": "number",
               "description": "The value of the low-resolution cutoff used in\n constructing the Luzzati plot for reflections classified as\n observed.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810."
            },
            "Luzzati_sigma_a_free": {
               "type": "number",
               "description": "The value of sigma~a~ used in constructing the Luzzati plot for\n the reflections treated as a test set during refinement.\n Details of the estimation of sigma~a~ can be specified\n in _refine_analyze.Luzzati_sigma_a_free_details.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810."
            },
            "Luzzati_sigma_a_obs": {
               "type": "number",
               "description": "The value of sigma~a~ used in constructing the Luzzati plot for\n reflections classified as observed. Details of the\n estimation of sigma~a~ can be specified in\n _refine_analyze.Luzzati_sigma_a_obs_details.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "number_disordered_residues": {
               "type": "number",
               "description": "The number of discretely disordered residues in the refined\n model."
            },
            "occupancy_sum_hydrogen": {
               "type": "number",
               "description": "The sum of the occupancies of the hydrogen atoms in the refined\n model."
            },
            "occupancy_sum_non_hydrogen": {
               "type": "number",
               "description": "The sum of the occupancies of the non-hydrogen atoms in the\n  refined model."
            },
            "pdbx_Luzzati_d_res_high_obs": {
               "type": "number",
               "description": "record the high resolution for calculating Luzzati statistics."
            },
            "pdbx_refine_id": {
               "type": "string",
               "description": "This data item uniquely identifies a refinement within an entry.\n _refine_analyze.pdbx_refine_id can be used to distinguish the results \n of joint refinements."
            }
         },
         "required": [
            "entry_id",
            "pdbx_refine_id"
         ]
      },
      "refine_hist": {
         "type": "object",
         "properties": {
            "cycle_id": {
               "type": "string",
               "description": "The value of _refine_hist.cycle_id must uniquely identify a\n record in the REFINE_HIST list.\n\n Note that this item need not be a number; it can be any unique\n identifier."
            },
            "d_res_high": {
               "type": "number",
               "minimum": 0.0,
               "description": "The lowest value for the interplanar spacings for the\n reflection data for this cycle of refinement. This is called\n the highest resolution."
            },
            "d_res_low": {
               "type": "number",
               "minimum": 0.0,
               "description": "The highest value for the interplanar spacings for the\n reflection data for this cycle of refinement. This is\n called the lowest resolution."
            },
            "number_atoms_solvent": {
               "type": "integer",
               "minimum": 0,
               "description": "The number of solvent atoms that were included in the model at\n this cycle of the refinement."
            },
            "number_atoms_total": {
               "type": "integer",
               "minimum": 0,
               "description": "The total number of atoms that were included in the model at\n this cycle of the refinement."
            },
            "pdbx_B_iso_mean_ligand": {
               "type": "number",
               "description": "Mean isotropic B-value for ligand molecules included in refinement."
            },
            "pdbx_B_iso_mean_solvent": {
               "type": "number",
               "description": "Mean isotropic B-value for solvent molecules included in refinement."
            },
            "pdbx_number_atoms_ligand": {
               "type": "integer",
               "description": "Number of ligand atoms included in refinement"
            },
            "pdbx_number_atoms_nucleic_acid": {
               "type": "integer",
               "description": "Number of nucleic atoms included in refinement"
            },
            "pdbx_number_atoms_protein": {
               "type": "integer",
               "description": "Number of protein atoms included in refinement"
            },
            "pdbx_number_residues_total": {
               "type": "integer",
               "description": "Total number of polymer residues included in refinement."
            },
            "pdbx_refine_id": {
               "type": "string",
               "description": "This data item uniquely identifies a refinement within an entry.\n _refine_hist.pdbx_refine_id can be used to distinguish the results \n of joint refinements."
            }
         },
         "required": [
            "cycle_id",
            "d_res_high",
            "d_res_low",
            "pdbx_refine_id"
         ]
      },
      "refine_ls_restr": {
         "type": "object",
         "properties": {
            "dev_ideal": {
               "type": "number",
               "minimum": 0.0,
               "description": "For the given parameter type, the root-mean-square deviation\n between the ideal values used as restraints in the least-squares\n refinement and the values obtained by refinement. For instance,\n bond distances may deviate by 0.018 \\%A (r.m.s.) from ideal\n values in the current model."
            },
            "dev_ideal_target": {
               "type": "number",
               "minimum": 0.0,
               "description": "For the given parameter type, the target root-mean-square\n deviation between the ideal values used as restraints in the\n least-squares refinement and the values obtained by refinement."
            },
            "number": {
               "type": "integer",
               "minimum": 0,
               "description": "The number of parameters of this type subjected to restraint in\n least-squares refinement."
            },
            "pdbx_refine_id": {
               "type": "string",
               "description": "This data item uniquely identifies a refinement within an entry.\n _refine_ls_restr.pdbx_refine_id can be used to distinguish the results \n of joint refinements."
            },
            "pdbx_restraint_function": {
               "type": "string",
               "examples": [
                  "SINUSOIDAL",
                  "HARMONIC",
                  "SEMIHARMONIC"
               ],
               "description": "The functional form of the restraint function used in the least-squares\n refinement."
            },
            "type": {
               "type": "string",
               "examples": [
                  "p_bond_d",
                  "p_angle_d",
                  "p_planar_d",
                  "p_xhbond_d",
                  "p_xhangle_d",
                  "p_hydrog_d",
                  "p_special_d",
                  "p_planar",
                  "p_chiral",
                  "p_singtor_nbd",
                  "p_multtor_nbd",
                  "p_xyhbond_nbd",
                  "p_xhyhbond_nbd",
                  "p_special_tor",
                  "p_planar_tor",
                  "p_staggered_tor",
                  "p_orthonormal_tor",
                  "p_mcbond_it",
                  "p_mcangle_it",
                  "p_scbond_it",
                  "p_scangle_it",
                  "p_xhbond_it",
                  "p_xhangle_it",
                  "p_special_it",
                  "RESTRAIN_Distances < 2.12",
                  "RESTRAIN_Distances 2.12 < D < 2.625",
                  "RESTRAIN_Distances > 2.625",
                  "RESTRAIN_Peptide Planes",
                  "RESTRAIN_Ring and other planes",
                  "RESTRAIN_rms diffs for Uiso atoms at dist 1.2-1.4",
                  "RESTRAIN_rms diffs for Uiso atoms at dist 1.4-1.6",
                  "RESTRAIN_rms diffs for Uiso atoms at dist 1.8-2.0",
                  "RESTRAIN_rms diffs for Uiso atoms at dist 2.0-2.2",
                  "RESTRAIN_rms diffs for Uiso atoms at dist 2.2-2.4",
                  "RESTRAIN_rms diffs for Uiso atoms at dist >2.4"
               ],
               "description": "The type of the parameter being restrained.\n Explicit sets of data values are provided for the programs\n PROTIN/PROLSQ (beginning with p_) and RESTRAIN (beginning with\n RESTRAIN_). As computer programs change, these data values\n are given as examples, not as an enumeration list. Computer\n programs that convert a data block to a refinement table will\n expect the exact form of the data values given here to be used."
            },
            "weight": {
               "type": "number",
               "description": "The weighting value applied to this type of restraint in\n the least-squares refinement."
            }
         },
         "required": [
            "pdbx_refine_id",
            "type"
         ]
      },
      "reflns": {
         "type": "object",
         "properties": {
            "B_iso_Wilson_estimate": {
               "type": "number",
               "minimum": 5,
               "maximum": 80,
               "description": "The value of the overall isotropic displacement parameter\n estimated from the slope of the Wilson plot."
            },
            "R_free_details": {
               "type": "string",
               "examples": [
                  "The data set was sorted with l varying most\n                                  rapidly and h varying least rapidly. Every\n                                  10th reflection in this sorted list was\n                                  excluded from refinement and included in the\n                                  calculation of a 'free' R factor."
               ],
               "description": "A description of the method by which a subset of reflections was\n selected for exclusion from refinement so as to be used in the\n calculation of a 'free' R factor."
            },
            "Rmerge_F_all": {
               "type": "number",
               "minimum": 0.0,
               "description": "Residual factor Rmerge for all reflections that satisfy the\n resolution limits established by _reflns.d_resolution_high\n and _reflns.d_resolution_low.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection"
            },
            "Rmerge_F_obs": {
               "type": "number",
               "minimum": 0.0,
               "description": "Residual factor Rmerge for reflections that satisfy the\n resolution limits established by _reflns.d_resolution_high\n and _reflns.d_resolution_low and the observation limit\n established by _reflns.observed_criterion.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection"
            },
            "d_resolution_high": {
               "type": "number",
               "minimum": 0.5,
               "maximum": 8,
               "description": "The smallest value for the interplanar spacings for\n the reflection data. This is called the highest resolution."
            },
            "d_resolution_low": {
               "type": "number",
               "minimum": 5,
               "maximum": 200,
               "description": "The largest value for the interplanar spacings for the\n reflection data. This is called the lowest resolution."
            },
            "data_reduction_details": {
               "type": "string",
               "examples": [
                  "Merging and scaling based on only those\n                                  reflections with I > sig(I)."
               ],
               "description": "A description of special aspects of the data-reduction\n procedures."
            },
            "data_reduction_method": {
               "type": "string",
               "examples": [
                  "Profile fitting by method of Kabsch (1987).\n                                  Scaling used spherical harmonic coefficients."
               ],
               "description": "The method used for data reduction.\n\n Note that this is not the computer program used, which is\n described in the SOFTWARE category, but the method\n itself.\n\n This data item should be used to describe significant\n methodological options used within the data-reduction programs."
            },
            "details": {
               "type": "string",
               "description": "A description of reflection data not covered by other data\n names. This should include details of the Friedel pairs."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "limit_h_max": {
               "type": "integer",
               "description": "Maximum value of the Miller index h for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_h_max."
            },
            "limit_h_min": {
               "type": "integer",
               "description": "Minimum value of the Miller index h for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_h_min."
            },
            "limit_k_max": {
               "type": "integer",
               "description": "Maximum value of the Miller index k for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_k_max."
            },
            "limit_k_min": {
               "type": "integer",
               "description": "Minimum value of the Miller index k for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_k_min."
            },
            "limit_l_max": {
               "type": "integer",
               "description": "Maximum value of the Miller index l for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_l_max."
            },
            "limit_l_min": {
               "type": "integer",
               "description": "Minimum value of the Miller index l for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_l_min."
            },
            "number_all": {
               "type": "integer",
               "minimum": 0,
               "description": "The total number of reflections in the REFLN list (not the\n DIFFRN_REFLN list). This number may contain Friedel-equivalent\n reflections according to the nature of the structure and the\n procedures used. The item _reflns.details describes the\n reflection data."
            },
            "number_obs": {
               "type": "integer",
               "minimum": 0,
               "description": "The number of reflections in the REFLN list (not the DIFFRN_REFLN\n list) classified as observed (see _reflns.observed_criterion).\n This number may contain Friedel-equivalent reflections according\n to the nature of the structure and the procedures used."
            },
            "observed_criterion": {
               "type": "string",
               "examples": [
                  ">2sigma(I)"
               ],
               "description": "The criterion used to classify a reflection as 'observed'. This\n criterion is usually expressed in terms of a sigma(I) or\n sigma(F) threshold."
            },
            "observed_criterion_F_max": {
               "type": "number",
               "description": "The criterion used to classify a reflection as 'observed'\n expressed as an upper limit for the value of F."
            },
            "observed_criterion_F_min": {
               "type": "number",
               "description": "The criterion used to classify a reflection as 'observed'\n expressed as a lower limit for the value of F."
            },
            "observed_criterion_I_max": {
               "type": "number",
               "description": "The criterion used to classify a reflection as 'observed'\n expressed as an upper limit for the value of I."
            },
            "observed_criterion_I_min": {
               "type": "number",
               "description": "The criterion used to classify a reflection as 'observed'\n expressed as a lower limit for the value of I."
            },
            "observed_criterion_sigma_F": {
               "type": "number",
               "description": "The criterion used to classify a reflection as 'observed'\n expressed as a multiple of the value of sigma(F)."
            },
            "observed_criterion_sigma_I": {
               "type": "number",
               "minimum": -3,
               "maximum": 4,
               "description": "The criterion used to classify a reflection as 'observed'\n expressed as a multiple of the value of sigma(I)."
            },
            "pdbx_CC_half": {
               "type": "number",
               "minimum": -1,
               "maximum": 1,
               "description": "             The Pearson's correlation coefficient expressed as a decimal value\n              between the average intensities from randomly selected \n              half-datasets.\n\n\t      Ref: Karplus & Diederichs (2012), Science 336, 1030-33\n"
            },
            "pdbx_R_split": {
               "type": "number",
               "minimum": 0.0,
               "exclusiveMaximum": 0.3,
               "description": "             R split measures the agreement between the sets of intensities created by merging \n              odd- and even-numbered images  from the overall data.          \n\n\t      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass, A. Barty \n              and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341\n"
            },
            "pdbx_Rmerge_I_obs": {
               "type": "number",
               "minimum": 0.01,
               "maximum": 0.2,
               "description": "The R value for merging intensities satisfying the observed\n criteria in this data set."
            },
            "pdbx_Rpim_I_all": {
               "type": "number",
               "exclusiveMinimum": 0,
               "exclusiveMaximum": 0.173,
               "description": "The precision-indicating merging R factor value Rpim,\n for merging all intensities in this data set.\n\n        sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n Rpim = --------------------------------------------------\n                      sum~i~ ( sum~j~ I~j~ )\n\n I~j~   = the intensity of the jth observation of reflection i\n <I~i~> = the mean of the intensities of all observations\n          of reflection i\n N~i~   = the redundancy (the number of times reflection i\n          has been measured).\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection.\n\n Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n      Biol. 4, 269-275.\n      Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n      30, 203-205.\n      Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135."
            },
            "pdbx_Rrim_I_all": {
               "type": "number",
               "exclusiveMinimum": 0,
               "exclusiveMaximum": 0.435,
               "description": "             The redundancy-independent merging R factor value Rrim,\n              also denoted Rmeas, for merging all intensities in this\n              data set.\n\n                     sum~i~ [N~i~/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n              Rrim = ----------------------------------------------------\n                                  sum~i~ ( sum~j~ I~j~ )\n\n              I~j~   = the intensity of the jth observation of reflection i\n              <I~i~> = the mean of the intensities of all observations of\n                       reflection i\n\t       N~i~   = the redundancy (the number of times reflection i\n                       has been measured).\n\n              sum~i~ is taken over all reflections\n              sum~j~ is taken over all observations of each reflection.\n\n              Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n                   Biol. 4, 269-275.\n                   Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n                   30, 203-205.\n                   Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135."
            },
            "pdbx_Rsym_value": {
               "type": "number",
               "minimum": 0.01,
               "maximum": 0.2,
               "examples": [
                  "0.02"
               ],
               "description": "The R sym value as a decimal number."
            },
            "pdbx_chi_squared": {
               "type": "number",
               "description": "Overall  Chi-squared statistic."
            },
            "pdbx_diffrn_id": {
               "type": "array",
               "items": {
                  "type": "string",
                  "description": "An identifier for the diffraction data set for this set of summary statistics.\n\n Multiple diffraction data sets entered as a comma separated list."
               },
               "uniqueItems": true
            },
            "pdbx_netI_over_av_sigmaI": {
               "type": "number",
               "minimum": 0.05,
               "maximum": 50,
               "description": "The ratio of the average intensity to the average uncertainty,\n <I>/<sigma(I)>.\n"
            },
            "pdbx_netI_over_sigmaI": {
               "type": "number",
               "description": "The mean of the ratio of the intensities to their\n standard uncertainties, <I/sigma(I)>."
            },
            "pdbx_number_measured_all": {
               "type": "integer",
               "examples": [
                  "23000",
                  "140000"
               ],
               "description": "Total number of measured reflections.\n"
            },
            "pdbx_ordinal": {
               "type": "integer",
               "description": "An ordinal identifier for this set of reflection statistics."
            },
            "pdbx_redundancy": {
               "type": "number",
               "minimum": 1,
               "maximum": 20,
               "description": "Overall redundancy for this data set (%)."
            },
            "pdbx_scaling_rejects": {
               "type": "integer",
               "description": "Number of reflections rejected in scaling operations."
            },
            "percent_possible_obs": {
               "type": "number",
               "minimum": 0,
               "maximum": 100,
               "description": "The percentage of geometrically possible reflections represented\n by reflections that satisfy the resolution limits established\n by _reflns.d_resolution_high and _reflns.d_resolution_low and\n the observation limit established by\n _reflns.observed_criterion."
            },
            "phase_calculation_details": {
               "type": "string",
               "examples": [
                  "From model",
                  "NCS averaging",
                  "Solvent flipping",
                  "Solvent flattening",
                  "Multiple crystal averaging",
                  "Multiple phase modification",
                  "Other phase modification"
               ],
               "description": "The value of _reflns.phase_calculation_details describes a\n special details about calculation of phases in _refln.phase_calc."
            }
         },
         "required": [
            "entry_id",
            "pdbx_diffrn_id",
            "pdbx_ordinal"
         ]
      },
      "reflns_shell": {
         "type": "object",
         "properties": {
            "Rmerge_F_all": {
               "type": "number",
               "minimum": 0.0,
               "description": "Residual factor Rmerge for all reflections that satisfy the\n resolution limits established by _reflns_shell.d_res_high and\n _reflns_shell.d_res_low.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection"
            },
            "Rmerge_F_obs": {
               "type": "number",
               "minimum": 0.0,
               "description": "Residual factor Rmerge for reflections that satisfy the\n resolution limits established by _reflns_shell.d_res_high and\n _reflns_shell.d_res_low and the observation criterion\n established by _reflns.observed_criterion.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection"
            },
            "Rmerge_I_all": {
               "type": "number",
               "minimum": 0.0,
               "description": "The value of Rmerge(I) for all reflections in a given shell.\n\n             sum~i~(sum~j~|I~j~ - <I>|)\n Rmerge(I) = --------------------------\n                 sum~i~(sum~j~<I>)\n\n I~j~ = the intensity of the jth observation of reflection i\n <I>  = the mean of the intensities of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection\n"
            },
            "Rmerge_I_obs": {
               "type": "number",
               "minimum": 0.01,
               "maximum": 0.8,
               "description": "The value of Rmerge(I) for reflections classified as 'observed'\n (see _reflns.observed_criterion) in a given shell.\n\n             sum~i~(sum~j~|I~j~ - <I>|)\n Rmerge(I) = --------------------------\n                 sum~i~(sum~j~<I>)\n\n I~j~ = the intensity of the jth observation of reflection i\n <I>  = the mean of the intensities of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection"
            },
            "d_res_high": {
               "type": "number",
               "minimum": 0.5,
               "maximum": 8,
               "description": "The smallest value in angstroms for the interplanar spacings\n for the reflections in this shell. This is called the highest\n resolution."
            },
            "d_res_low": {
               "type": "number",
               "minimum": 0.5,
               "maximum": 10,
               "description": "The highest value in angstroms for the interplanar spacings\n for the reflections in this shell. This is called the lowest\n resolution."
            },
            "meanI_over_sigI_all": {
               "type": "number",
               "description": "The ratio of the mean of the intensities of all reflections\n in this shell to the mean of the standard uncertainties of the\n intensities of all reflections in this shell."
            },
            "meanI_over_sigI_obs": {
               "type": "number",
               "minimum": 0.05,
               "maximum": 20,
               "description": "The ratio of the mean of the intensities of the reflections\n classified as 'observed' (see _reflns.observed_criterion) in\n this shell to the mean of the standard uncertainties of the\n intensities of the 'observed' reflections in this\n shell."
            },
            "meanI_over_uI_all": {
               "type": "number",
               "description": "The ratio of the mean of the intensities of all reflections\n in this shell to the mean of the standard uncertainties of the\n intensities of all reflections in this shell."
            },
            "number_measured_all": {
               "type": "integer",
               "description": "The total number of reflections measured for this\n shell."
            },
            "number_measured_obs": {
               "type": "integer",
               "description": "The number of reflections classified as 'observed'\n (see _reflns.observed_criterion) for this\n shell."
            },
            "number_possible": {
               "type": "integer",
               "minimum": 0,
               "description": "The number of unique reflections it is possible to measure in\n this shell."
            },
            "number_unique_all": {
               "type": "integer",
               "minimum": 5,
               "maximum": 30000,
               "description": "The total number of measured reflections which are symmetry-\n unique after merging for this shell."
            },
            "number_unique_obs": {
               "type": "integer",
               "description": "The total number of measured reflections classified as 'observed'\n (see _reflns.observed_criterion) which are symmetry-unique\n after merging for this shell."
            },
            "pdbx_CC_half": {
               "type": "number",
               "minimum": -1,
               "maximum": 1,
               "description": "             The Pearson's correlation coefficient expressed as a decimal value\n              between the average intensities from randomly selected\n              half-datasets within the resolution shell.\n\n\t      Ref: Karplus & Diederichs (2012), Science 336, 1030-33\n"
            },
            "pdbx_R_split": {
               "type": "number",
               "minimum": 0.0,
               "exclusiveMaximum": 3.2,
               "description": "\n              R split measures the agreement between the sets of intensities created by merging \n              odd- and even-numbered images from the data within the resolution shell.\n\n\t      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass, \n\t      A. Barty and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341\n"
            },
            "pdbx_Rpim_I_all": {
               "type": "number",
               "exclusiveMinimum": 0,
               "exclusiveMaximum": 1.0,
               "description": "The precision-indicating merging R factor value Rpim,\n for merging all intensities in a given shell.\n\n        sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n Rpim = --------------------------------------------------\n                      sum~i~ ( sum~j~ I~j~ )\n\n I~j~   = the intensity of the jth observation of reflection i\n <I~i~> = the mean of the intensities of all observations of\n          reflection i\n N~i~   = the redundancy (the number of times reflection i\n          has been measured).\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection.\n\n Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n      Biol. 4, 269-275.\n      Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n      30, 203-205.\n      Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.\n"
            },
            "pdbx_Rrim_I_all": {
               "type": "number",
               "exclusiveMinimum": 0,
               "exclusiveMaximum": 1.0,
               "description": "             The redundancy-independent merging R factor value Rrim,\n              also denoted Rmeas, for merging all intensities in a\n              given shell.\n\n                     sum~i~ [N~i~ /( N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n              Rrim = --------------------------------------------------------\n                                   sum~i~ ( sum~j~ I~j~ )\n\n              I~j~   = the intensity of the jth observation of reflection i\n              <I~i~> = the mean of the intensities of all observations of\n                       reflection i\n\t      N~i~   = the redundancy (the number of times reflection i\n                       has been measured).\n\n              sum~i~ is taken over all reflections\n              sum~j~ is taken over all observations of each reflection.\n\n              Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n                   Biol. 4, 269-275.\n                   Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n                   30, 203-205.\n                   Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135."
            },
            "pdbx_Rsym_value": {
               "type": "number",
               "minimum": 0.01,
               "maximum": 0.8,
               "description": "R sym value in percent."
            },
            "pdbx_chi_squared": {
               "type": "number",
               "description": "Chi-squared statistic for this resolution shell."
            },
            "pdbx_diffrn_id": {
               "type": "array",
               "items": {
                  "type": "string",
                  "description": "An identifier for the diffraction data set corresponding to this resolution shell.\n\n Multiple diffraction data sets specified as a comma separated list."
               },
               "uniqueItems": true
            },
            "pdbx_netI_over_sigmaI_all": {
               "type": "number",
               "description": "The mean of the ratio of the intensities to their\n standard uncertainties of all reflections in the\n resolution shell.\n\n _reflns_shell.pdbx_netI_over_sigmaI_all =  <I/sigma(I)>"
            },
            "pdbx_netI_over_sigmaI_obs": {
               "type": "number",
               "description": "The mean of the ratio of the intensities to their\n standard uncertainties of observed reflections\n (see _reflns.observed_criterion) in the resolution shell.\n\n _reflns_shell.pdbx_netI_over_sigmaI_obs =  <I/sigma(I)>"
            },
            "pdbx_ordinal": {
               "type": "integer",
               "description": "An ordinal identifier for this resolution shell."
            },
            "pdbx_redundancy": {
               "type": "number",
               "minimum": 1,
               "maximum": 15,
               "description": "Redundancy for the current shell."
            },
            "pdbx_rejects": {
               "type": "integer",
               "description": "The number of rejected reflections in the resolution \n shell.  Reflections may be rejected from scaling\n by setting the observation criterion,\n _reflns.observed_criterion.\n"
            },
            "percent_possible_all": {
               "type": "number",
               "minimum": 20,
               "maximum": 100,
               "description": "The percentage of geometrically possible reflections represented\n by all reflections measured for this shell."
            },
            "percent_possible_obs": {
               "type": "number",
               "minimum": 20,
               "maximum": 100,
               "description": "The percentage of geometrically possible reflections represented\n by reflections classified as 'observed' (see\n _reflns.observed_criterion) for this shell."
            }
         },
         "required": [
            "d_res_high",
            "pdbx_ordinal"
         ]
      },
      "software": {
         "type": "object",
         "properties": {
            "classification": {
               "type": "string",
               "examples": [
                  "data collection",
                  "data reduction",
                  "phasing",
                  "model building",
                  "refinement",
                  "validation",
                  "other"
               ],
               "description": "The classification of the program according to its\n major function."
            },
            "contact_author": {
               "type": "string",
               "examples": [
                  "T. Alwyn Jones",
                  "Axel Brunger"
               ],
               "description": "The recognized contact author of the software. This could be\n the original author, someone who has modified the code or\n someone who maintains the code.  It should be the person\n most commonly associated with the code."
            },
            "contact_author_email": {
               "type": "string",
               "examples": [
                  "bourne@sdsc.edu"
               ],
               "description": "The e-mail address of the person specified in\n _software.contact_author."
            },
            "date": {
               "type": "string",
               "examples": [
                  "1991-10-01",
                  "1990-04-30"
               ],
               "description": "The date the software was released."
            },
            "description": {
               "type": "string",
               "examples": [
                  "Uses method of restrained least squares"
               ],
               "description": "Description of the software."
            },
            "language": {
               "type": "string",
               "enum": [
                  "Fortran 90",
                  "ksh",
                  "C",
                  "csh",
                  "Awk",
                  "C/C++",
                  "Pascal",
                  "sh",
                  "Java",
                  "Java & Fortran",
                  "Fortran",
                  "Python/C++",
                  "Ada",
                  "assembler",
                  "C++",
                  "Tcl",
                  "Python",
                  "Basic",
                  "Fortran 77",
                  "Fortran_77",
                  "Perl",
                  "Other"
               ],
               "description": "The major computing language in which the software is\n coded."
            },
            "location": {
               "type": "string",
               "examples": [
                  "http://rosebud.sdsc.edu/projects/pb/IUCr/software.html",
                  "ftp://ftp.sdsc.edu/pub/sdsc/biology/"
               ],
               "description": "The URL for an Internet address at which\n details of the software can be found."
            },
            "name": {
               "type": "string",
               "examples": [
                  "Merlot",
                  "O",
                  "Xengen",
                  "X-plor"
               ],
               "description": "The name of the software."
            },
            "os": {
               "type": "string",
               "examples": [
                  "Ultrix",
                  "OpenVMS",
                  "DOS",
                  "Windows 95",
                  "Windows NT",
                  "Irix",
                  "HPUX",
                  "DEC Unix"
               ],
               "description": "The name of the operating system under which the software\n runs."
            },
            "pdbx_ordinal": {
               "type": "integer",
               "examples": [
                  "1",
                  "2"
               ],
               "description": "\nAn ordinal index for this category"
            },
            "type": {
               "type": "string",
               "enum": [
                  "filter",
                  "program",
                  "library",
                  "jiffy",
                  "other",
                  "package"
               ],
               "description": "The classification of the software according to the most\n common types."
            },
            "version": {
               "type": "string",
               "examples": [
                  "v1.0",
                  "beta",
                  "3.1-2",
                  "unknown"
               ],
               "description": "The version of the software."
            }
         },
         "required": [
            "classification",
            "name",
            "pdbx_ordinal"
         ]
      },
      "struct": {
         "type": "object",
         "properties": {
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "pdbx_CASP_flag": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "examples": [
                  "Y"
               ],
               "description": "The item indicates whether the entry is a CASP target, a CASD-NMR target,\n or similar target participating in methods development experiments."
            },
            "pdbx_descriptor": {
               "type": "string",
               "examples": [
                  "5'-D(*CP*GP*CP*(HYD)AP*AP*AP*TP*TP*TP*GP*CP*G)-3'"
               ],
               "description": "An automatically generated descriptor for an NDB structure or\n the unstructured content of the PDB COMPND record."
            },
            "pdbx_model_details": {
               "type": "string",
               "examples": [
                  "This model was produced from a 10 nanosecond Amber/MD simulation\nstarting from PDB structure ID 1ABC."
               ],
               "description": "Text description of the methodology which produced this\n model structure."
            },
            "pdbx_model_type_details": {
               "type": "string",
               "examples": [
                  "MINIMIZED AVERAGE"
               ],
               "description": "A description of the type of structure model."
            },
            "title": {
               "type": "string",
               "examples": [
                  "5'-D(*(I)CP*CP*GP*G)-3",
                  "T4 lysozyme mutant - S32A",
                  "hen egg white lysozyme at -30 degrees C",
                  "quail egg white lysozyme at 2 atmospheres"
               ],
               "description": "A title for the data block. The author should attempt to convey\n the essence of the structure archived in the CIF in the title,\n and to distinguish this structural result from others."
            }
         },
         "required": [
            "entry_id"
         ]
      },
      "struct_keywords": {
         "type": "object",
         "properties": {
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "pdbx_keywords": {
               "type": "string",
               "examples": [
                  "DNA",
                  "RNA",
                  "T-RNA",
                  "DNA/RNA",
                  "RIBOZYME",
                  "PROTEIN/DNA",
                  "PROTEIN/RNA",
                  "PEPTIDE NUCLEIC ACID",
                  "PEPTIDE NUCLEIC ACID/DNA",
                  "DNA-BINDING PROTEIN",
                  "RNA-BINDING PROTEIN"
               ],
               "description": "Terms characterizing the macromolecular structure."
            },
            "text": {
               "type": "string",
               "examples": [
                  "serine protease",
                  "inhibited complex",
                  "high-resolution refinement"
               ],
               "description": "Keywords describing this structure."
            }
         },
         "required": [
            "entry_id"
         ]
      },
      "symmetry": {
         "type": "object",
         "properties": {
            "Int_Tables_number": {
               "type": "integer",
               "description": "Space-group number from International Tables for Crystallography\n Vol. A (2002)."
            },
            "cell_setting": {
               "type": "string",
               "enum": [
                  "rhombohedral",
                  "triclinic",
                  "hexagonal",
                  "cubic",
                  "tetragonal",
                  "trigonal",
                  "orthorhombic",
                  "monoclinic"
               ],
               "description": "The cell settings for this space-group symmetry."
            },
            "entry_id": {
               "type": "string",
               "description": "This data item is a pointer to _entry.id in the ENTRY category."
            },
            "pdbx_full_space_group_name_H_M": {
               "type": "string",
               "examples": [
                  "Example: 'C 1 2 1'  (instead of C 2)\n           'P 1 2 1'  (instead of P 2)\n           'P 1 21 1' (instead of P 21)\n           'P 1 1 21' (instead of P 21 -unique C axis)\n           'H 3'      (instead of R 3   -hexagonal)\n           'H 3 2'    (instead of R 3 2 -hexagonal)"
               ],
               "description": "Used for PDB space group:\n\n Example: 'C 1 2 1'  (instead of C 2)\n          'P 1 2 1'  (instead of P 2)\n          'P 1 21 1' (instead of P 21)\n          'P 1 1 21' (instead of P 21 -unique C axis)\n          'H 3'      (instead of R 3   -hexagonal)\n          'H 3 2'    (instead of R 3 2 -hexagonal)\n"
            },
            "space_group_name_H_M": {
               "type": "string",
               "examples": [
                  "A 1",
                  "A 1 2 1",
                  "A 2",
                  "B 1 1 2",
                  "B 2",
                  "B 2 21 2",
                  "C 2",
                  "C 1 2 1",
                  "C 21",
                  "C 1 21 1",
                  "C 2(A 112)",
                  "C 2 2 2",
                  "C 2 2 21",
                  "C 4 21 2",
                  "F 2 2 2",
                  "F 2 3",
                  "F 4 2 2",
                  "F 4 3 2",
                  "F 41 3 2",
                  "I 1 2 1",
                  "I 1 21 1",
                  "I 2",
                  "I 2 2 2",
                  "I 2 3",
                  "I 21",
                  "I 21 3",
                  "I 21 21 21",
                  "I 4",
                  "I 4 2 2",
                  "I 4 3 2",
                  "I 41",
                  "I 41/a",
                  "I 41 2 2",
                  "I 41 3 2",
                  "P 1",
                  "P 1-",
                  "P 2",
                  "P 1 2 1",
                  "P 1 1 2",
                  "P 2 2 2",
                  "P 2 3",
                  "P 2 2 21",
                  "P 2 21 21",
                  "P 21",
                  "P 1 21 1",
                  "P 1 21/c 1",
                  "P 1 1 21",
                  "P 21(C)",
                  "P 21 2 21",
                  "P 21 3",
                  "P 21 21 2",
                  "P 21 21 2 A",
                  "P 21 21 21",
                  "P 3",
                  "P 3 1 2",
                  "P 3 2 1",
                  "P 31",
                  "P 31 1 2",
                  "P 31 2 1",
                  "P 32",
                  "P 32 1 2",
                  "P 32 2 1",
                  "P 4",
                  "P 4 2 2",
                  "P 4 3 2",
                  "P 4 21 2",
                  "P 41",
                  "P 41 2 2",
                  "P 41 3 2",
                  "P 41 21 2",
                  "P 42",
                  "P 42 2 2",
                  "P 42 3 2",
                  "P 42 21 2",
                  "P 43",
                  "P 43 2 2",
                  "P 43 3 2",
                  "P 43 21 2",
                  "P 6",
                  "P 6 2 2",
                  "P 61",
                  "P 61 2 2",
                  "P 62",
                  "P 62 2 2",
                  "P 63",
                  "P 63 2 2",
                  "P 64",
                  "P 64 2 2",
                  "P 65",
                  "P 65 2 2",
                  "H 3",
                  "R 3",
                  "H 3 2",
                  "R 3 2"
               ],
               "description": "Hermann-Mauguin space-group symbol. Note that the\n Hermann-Mauguin symbol does not necessarily contain complete\n information about the symmetry and the space-group origin. If\n used, always supply the FULL symbol from International Tables\n for Crystallography Vol. A (2002) and indicate the origin and\n the setting if it is not implicit. If there is any doubt that\n the equivalent positions can be uniquely deduced from this\n symbol, specify the  _symmetry_equiv.pos_as_xyz or\n _symmetry.space_group_name_Hall  data items as well. Leave\n spaces between symbols referring to\n different axes."
            },
            "space_group_name_Hall": {
               "type": "string",
               "examples": [
                  "-P 2ac 2n",
                  "-R 3 2\"",
                  "P 61 2 2 (0 0 -1)"
               ],
               "description": "Space-group symbol as described by Hall (1981). This symbol\n gives the space-group setting explicitly. Leave spaces between\n the separate components of the symbol.\n\n Ref: Hall, S. R. (1981). Acta Cryst. A37, 517-525; erratum\n (1981) A37, 921."
            }
         },
         "required": [
            "entry_id"
         ]
      }
   },
   "required": []
}