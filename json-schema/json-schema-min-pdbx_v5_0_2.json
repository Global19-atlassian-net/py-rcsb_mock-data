{
   "$id": "https://github.com/rcsb/py-rcsb.db/tree/master/rcsb.db/data/json-schema/", 
   "properties": {
      "refln": {
         "minItems": 1, 
         "items": {
            "properties": {
               "F_meas_sigma_au": {
                  "description": "The standard uncertainty (estimated standard deviation) of\n _refln.F_meas_au in arbitrary units.", 
                  "type": "number"
               }, 
               "crystal_id": {
                  "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category.", 
                  "type": "string"
               }, 
               "scale_group_code": {
                  "description": "This data item is a pointer to _reflns_scale.group_code in the\n REFLNS_SCALE category.", 
                  "type": "string"
               }, 
               "index_h": {
                  "description": "Miller index h of the reflection. The values of the Miller\n indices in the REFLN category must correspond to the cell\n defined by cell lengths and cell angles in the CELL category.", 
                  "type": "integer"
               }, 
               "wavelength_id": {
                  "description": "This data item is a pointer to _diffrn_radiation.wavelength_id in\n the DIFFRN_RADIATION category.", 
                  "type": "string"
               }, 
               "index_k": {
                  "description": "Miller index k of the reflection. The values of the Miller\n indices in the REFLN category must correspond to the cell\n defined by cell lengths and cell angles in the CELL category.", 
                  "type": "integer"
               }, 
               "index_l": {
                  "description": "Miller index l of the reflection. The values of the Miller\n indices in the REFLN category must correspond to the cell\n defined by cell lengths and cell angles in the CELL category.", 
                  "type": "integer"
               }, 
               "pdbx_I_plus_sigma": {
                  "description": "The standard uncertainty (derived from measurement) of the\n intensity I(h,k,l) partner of the Friedel pair.", 
                  "type": "number"
               }, 
               "F_meas_au": {
                  "description": "The measured value of the structure factor in arbitrary units.", 
                  "type": "number"
               }, 
               "status": {
                  "enum": [
                     "<", 
                     "x", 
                     "o", 
                     "-", 
                     "l", 
                     "h", 
                     "f"
                  ], 
                  "description": "Classification of a reflection so as to indicate its status with\n respect to inclusion in the refinement and the calculation of\n R factors.", 
                  "type": "string"
               }, 
               "pdbx_I_plus": {
                  "description": "The intensity of the I(h,k,l) partner of\n the Friedel pair.", 
                  "type": "number"
               }, 
               "pdbx_I_minus": {
                  "description": "The intensity of the I(-h,-k,-l) partner\n of the Friedel pair.", 
                  "type": "number"
               }, 
               "pdbx_I_minus_sigma": {
                  "description": "The standard uncertainty (derived from measurement) of the\n intensity I(-h,-k,-l) partner of the Friedel pair.", 
                  "type": "number"
               }
            }, 
            "required": [
               "index_h", 
               "index_k", 
               "index_l"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_phasing_MAD_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "reflns": {
                  "description": "_pdbx_phasing_MAD_shell.reflns records the number of\n reflections used for MAD phasing.", 
                  "type": "integer"
               }, 
               "reflns_acentric": {
                  "description": "_pdbx_phasing_MAD_shell.reflns_acentric records the number of\n acentric reflections for MAD phasing.", 
                  "type": "number"
               }, 
               "fom_centric": {
                  "description": "_pdbx_phasing_MAD_shell.fom_centric  records the figure of merit\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "fom_acentric": {
                  "description": "_pdbx_phasing_MAD_shell.fom_acentric  records the figure of merit\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "d_res_low": {
                  "description": "_pdbx_phasing_MAD_shell.d_res_low records the lower resolution\n for the shell.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "_pdbx_phasing_MAD_shell.d_res_high records the higher resolution\n for the shell.", 
                  "type": "number"
               }, 
               "fom": {
                  "description": "_pdbx_phasing_MAD_shell.fom records the figure of merit\n for MAD phasing.", 
                  "type": "number"
               }, 
               "reflns_centric": {
                  "description": "_pdbx_phasing_MAD_shell.reflns_centric records the number of\n centric reflections for MAD phasing.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "d_res_high", 
               "d_res_low"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_special_symmetry": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _pdbx_struct_special_symmetry.id must uniquely identify\n each item in the PDBX_STRUCT_SPECIAL_SYMMETRY list.\n\n This is an integer serial number.", 
                  "type": "integer"
               }, 
               "label_asym_id": {
                  "description": "Part of the identifier for the molecular component.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_seq_id": {
                  "description": "Part of the identifier for the molecular component.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_comp_id": {
                  "description": "Part of the identifier for the molecular component.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "PDB_model_num": {
                  "description": " Part of the identifier for the molecular component.\n\nThis data item is a pointer to _atom_site.pdbx_PDB_model_num in the\nATOM_SITE category.", 
                  "type": "integer"
               }, 
               "PDB_ins_code": {
                  "description": "Part of the identifier for the molecular component.\n\n This data item is a pointer to _atom_site.pdbx_PDB_ins_code in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_asym_id": {
                  "description": "Part of the identifier for the molecular component.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "label_seq_id": {
                  "description": "Part of the identifier for the molecular component.\n\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "label_comp_id": {
                  "description": "Part of the identifier for the molecular component.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "entity_poly_seq": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "hetero": {
                  "enum": [
                     "yes", 
                     "n", 
                     "no", 
                     "y"
                  ], 
                  "description": "A flag to indicate whether this monomer in the polymer is\n heterogeneous in sequence.", 
                  "type": "string"
               }, 
               "mon_id": {
                  "description": "This data item is a pointer to _chem_comp.id in the CHEM_COMP\n category.", 
                  "type": "string"
               }, 
               "num": {
                  "description": "The value of _entity_poly_seq.num must uniquely and sequentially\n identify a record in the ENTITY_POLY_SEQ list.\n\n Note that this item must be a number and that the sequence\n numbers must progress in increasing numerical order.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "entity_id", 
               "mon_id", 
               "num"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_3d_fitting": {
         "minItems": 1, 
         "items": {
            "properties": {
               "target_criteria": {
                  "description": "The measure used to assess quality of fit of the atomic coordinates in the\n 3DEM map volume.", 
                  "examples": [
                     "Cross-correlation coefficient"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _em_3d_fitting.id must uniquely identify\n a fitting procedure of atomic coordinates\n into 3dem reconstructed map volume.", 
                  "type": "string"
               }, 
               "overall_b_value": {
                  "description": "The overall B (temperature factor) value for the 3d-em volume.", 
                  "examples": [
                     "200"
                  ], 
                  "type": "number"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry_id in\n the ENTRY category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details regarding fitting of atomic coordinates into\n the 3DEM volume, including data and considerations from other\n methods used in computation of the model.\n", 
                  "examples": [
                     "Initial local fitting was done using Chimera and then NMFF was used for flexible fitting."
                  ], 
                  "type": "string"
               }, 
               "ref_protocol": {
                  "enum": [
                     "OTHER", 
                     "RIGID BODY FIT", 
                     "AB INITIO MODEL", 
                     "BACKBONE TRACE", 
                     "FLEXIBLE FIT"
                  ], 
                  "description": "The refinement protocol used.", 
                  "examples": [
                     "Local refinement, Flexible fitting"
                  ], 
                  "type": "string"
               }, 
               "ref_space": {
                  "enum": [
                     "RECIPROCAL", 
                     "REAL"
                  ], 
                  "description": "A flag to indicate whether fitting was carried out in real\n or reciprocal refinement space.", 
                  "type": "string"
               }, 
               "method": {
                  "description": "The method used to fit atomic coordinates\n into the 3dem reconstructed map.", 
                  "type": "string"
               }
            }, 
            "required": [
               "entry_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_image_recording": {
         "minItems": 1, 
         "items": {
            "properties": {
               "num_grids_imaged": {
                  "description": "Number of grids in the microscopy session", 
                  "type": "integer"
               }, 
               "num_diffraction_images": {
                  "description": "The number of diffraction images collected.", 
                  "type": "integer"
               }, 
               "detector_mode": {
                  "enum": [
                     "COUNTING", 
                     "INTEGRATING", 
                     "SUPER-RESOLUTION", 
                     "OTHER"
                  ], 
                  "description": "The detector mode used during image recording.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details about image recording.", 
                  "examples": [
                     "Images were collected in movie-mode at 17 frames per second"
                  ], 
                  "type": "string"
               }, 
               "film_or_detector_model": {
                  "description": "The detector type used for recording images.\n Usually film or CCD camera.", 
                  "type": "string"
               }, 
               "average_exposure_time": {
                  "description": "The average exposure time for each image.", 
                  "examples": [
                     "2.0"
                  ], 
                  "type": "number"
               }, 
               "id": {
                  "description": "The item _em_image_recording.id uniquely identifies\n a set of recorded images.", 
                  "type": "string"
               }, 
               "imaging_id": {
                  "description": "This data item the id of the microscopy settings used in the imaging.", 
                  "type": "string"
               }, 
               "num_real_images": {
                  "description": "The number of micrograph images collected.", 
                  "type": "integer"
               }, 
               "avg_electron_dose_per_image": {
                  "description": "The electron dose received by the specimen per image (electrons per square angstrom).", 
                  "examples": [
                     "0.9"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "id", 
               "imaging_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_phasing_MAD_set_site": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "_pdbx_phasing_MAD_set_site.id records the number of site\n obtained from MAD phasing.", 
                  "type": "string"
               }, 
               "occupancy": {
                  "description": "_pdbx_phasing_MAD_set_site.occupancy  records the fraction\n of the atom type presented at this site.", 
                  "type": "number"
               }, 
               "b_iso": {
                  "description": "_pdbx_phasing_MAD_set_site.b_iso  records isotropic\n temperature factor parameterthe for the site\n obtained from MAD phasing.", 
                  "type": "number"
               }, 
               "occupancy_iso": {
                  "description": "The relative real isotropic occupancy of the atom type\n present at this heavy-atom site in a given atom site.", 
                  "type": "number"
               }, 
               "atom_type_symbol": {
                  "description": "_pdbx_phasing_MAD_set_site.atom_type_symbol records the name of site\n obtained from MAD phasing.", 
                  "type": "string"
               }, 
               "fract_x": {
                  "description": "_pdbx_phasing_MAD_set_site.fract_x  records the X  fractional\n  coordinate of site obtained from MAD phasing.", 
                  "type": "number"
               }, 
               "fract_y": {
                  "description": "_pdbx_phasing_MAD_set_site.fract_y  records the Y  fractional\n  coordinate of site obtained from MAD phasing.", 
                  "type": "number"
               }, 
               "fract_z": {
                  "description": "_pdbx_phasing_MAD_set_site.fract_z  records the Z  fractional\n  coordinate of site obtained from MAD phasing.", 
                  "type": "number"
               }, 
               "Cartn_x": {
                  "description": "_pdbx_phasing_MAD_set_site.Cartn_x  records the X  Cartesian\n  coordinate of site obtained from MAD phasing.", 
                  "type": "number"
               }, 
               "Cartn_y": {
                  "description": "_pdbx_phasing_MAD_set_site.Cartn_y  records the Y  Cartesian\n  coordinate of site obtained from MAD phasing.", 
                  "type": "number"
               }, 
               "Cartn_z": {
                  "description": "_pdbx_phasing_MAD_set_site.Cartn_z  records the Z  Cartesian\n  coordinate of site obtained from MAD phasing.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "database_PDB_tvect": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _database_PDB_tvect.id must uniquely identify a\n record in the DATABASE_PDB_TVECT list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "vector_2": {
                  "description": "The [2] element of the PDB TVECT vector.", 
                  "type": "number"
               }, 
               "vector_3": {
                  "description": "The [3] element of the PDB TVECT vector.", 
                  "type": "number"
               }, 
               "vector_1": {
                  "description": "The [1] element of the PDB TVECT vector.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "space_group_symop": {
         "minItems": 1, 
         "items": {
            "properties": {
               "operation_xyz": {
                  "description": "A parsable string giving one of the symmetry operations of the\n space group in algebraic form.  If W is a matrix representation\n of the rotational part of the symmetry operation defined by the\n positions and signs of x, y and z, and w is a column of\n translations defined by the fractions, an equivalent position\n X' is generated from a given position X by the equation\n\n           X' = WX + w\n\n (Note: X is used to represent bold_italics_x in International\n Tables for Crystallography Vol. A, Part 5)\n\n When a list of symmetry operations is given, it must contain\n a complete set of coordinate representatives which generates\n all the operations of the space group by the addition of\n all primitive translations of the space group. Such\n representatives are to be found as the coordinates of\n the general-equivalent position in International Tables for\n Crystallography Vol. A (2002), to which it is necessary to\n add any centring translations shown above the\n general-equivalent position.\n\n That is to say, it is necessary to list explicity all the\n symmetry operations required to generate all the atoms in\n the unit cell defined by the setting used.", 
                  "examples": [
                     "x,1/2-y,1/2+z"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "An arbitrary identifier that uniquely labels each symmetry\n operation in the list.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MIR_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "reflns": {
                  "description": "The number of reflections in this shell.", 
                  "type": "integer"
               }, 
               "reflns_acentric": {
                  "description": "The number of acentric reflections in this shell.", 
                  "type": "integer"
               }, 
               "FOM_centric": {
                  "description": "The mean value of the figure of merit m for centric reflections\n in this shell.\n\n     int P~alpha~ exp(i*alpha) dalpha\n m = --------------------------------\n           int P~alpha~ dalpha\n\n P~a~ = the probability that the phase angle a is correct\n\n the integral is taken over the range alpha = 0 to 2 pi.", 
                  "type": "number"
               }, 
               "FOM_acentric": {
                  "description": "The mean value of the figure of merit m for acentric reflections\n in this shell.\n\n     int P~alpha~ exp(i*alpha) dalpha\n m = --------------------------------\n           int P~alpha~ dalpha\n\n P~a~ = the probability that the phase angle a is correct\n\n the integral is taken over the range alpha = 0 to 2 pi.", 
                  "type": "number"
               }, 
               "d_res_low": {
                  "description": "The highest value for the interplanar spacings for the\n reflection data in this shell. This is called the lowest\n resolution. Note that the resolution limits of shells in the\n items _phasing_MIR_shell.d_res_high and\n _phasing_MIR_shell.d_res_low are independent of the resolution\n limits of shells in the items _reflns_shell.d_res_high and\n _reflns_shell.d_res_low.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "The lowest value for the interplanar spacings for the\n reflection data in this shell. This is called the highest\n resolution. Note that the resolution limits of shells in\n the items _phasing_MIR_shell.d_res_high and\n _phasing_MIR_shell.d_res_low are independent of the resolution\n limits of shells in the items _reflns_shell.d_res_high and\n _reflns_shell.d_res_low.", 
                  "type": "number"
               }, 
               "FOM": {
                  "description": "The mean value of the figure of merit m for reflections in this\n shell.\n\n     int P~alpha~ exp(i*alpha) dalpha\n m = --------------------------------\n           int P~alpha~ dalpha\n\n P~alpha~ = the probability that the phase angle alpha is correct\n\n the integral is taken over the range alpha = 0 to 2 pi.", 
                  "type": "number"
               }, 
               "reflns_centric": {
                  "description": "The number of centric reflections in this shell.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "d_res_high", 
               "d_res_low"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "software": {
         "minItems": 1, 
         "items": {
            "properties": {
               "date": {
                  "description": "The date the software was released.", 
                  "examples": [
                     "1991-10-01", 
                     "1990-04-30"
                  ], 
                  "type": "string"
               }, 
               "version": {
                  "description": "The version of the software.", 
                  "examples": [
                     "v1.0", 
                     "beta", 
                     "3.1-2", 
                     "unknown"
                  ], 
                  "type": "string"
               }, 
               "os": {
                  "description": "The name of the operating system under which the software\n runs.", 
                  "examples": [
                     "Ultrix", 
                     "OpenVMS", 
                     "DOS", 
                     "Windows 95", 
                     "Windows NT", 
                     "Irix", 
                     "HPUX", 
                     "DEC Unix"
                  ], 
                  "type": "string"
               }, 
               "classification": {
                  "description": "The classification of the program according to its\n major function.", 
                  "examples": [
                     "data collection", 
                     "data reduction", 
                     "phasing", 
                     "model building", 
                     "refinement", 
                     "validation", 
                     "other"
                  ], 
                  "type": "string"
               }, 
               "contact_author": {
                  "description": "The recognized contact author of the software. This could be\n the original author, someone who has modified the code or\n someone who maintains the code.  It should be the person\n most commonly associated with the code.", 
                  "examples": [
                     "T. Alwyn Jones", 
                     "Axel Brunger"
                  ], 
                  "type": "string"
               }, 
               "description": {
                  "description": "Description of the software.", 
                  "examples": [
                     "Uses method of restrained least squares"
                  ], 
                  "type": "string"
               }, 
               "pdbx_ordinal": {
                  "description": "\nAn ordinal index for this category", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "integer"
               }, 
               "type": {
                  "enum": [
                     "other", 
                     "program", 
                     "jiffy", 
                     "library", 
                     "package", 
                     "filter"
                  ], 
                  "description": "The classification of the software according to the most\n common types.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "The name of the software.", 
                  "examples": [
                     "Merlot", 
                     "O", 
                     "Xengen", 
                     "X-plor"
                  ], 
                  "type": "string"
               }, 
               "language": {
                  "enum": [
                     "Python", 
                     "Fortran 77", 
                     "C++", 
                     "Basic", 
                     "Java", 
                     "csh", 
                     "ksh", 
                     "Fortran 90", 
                     "Pascal", 
                     "Other", 
                     "sh", 
                     "C/C++", 
                     "Perl", 
                     "C", 
                     "assembler", 
                     "Java & Fortran", 
                     "Ada", 
                     "Python/C++", 
                     "Fortran_77", 
                     "Awk", 
                     "Tcl", 
                     "Fortran"
                  ], 
                  "description": "The major computing language in which the software is\n coded.", 
                  "type": "string"
               }, 
               "contact_author_email": {
                  "description": "The e-mail address of the person specified in\n _software.contact_author.", 
                  "examples": [
                     "bourne@sdsc.edu"
                  ], 
                  "type": "string"
               }, 
               "location": {
                  "description": "The URL for an Internet address at which\n details of the software can be found.", 
                  "examples": [
                     "http://rosebud.sdsc.edu/projects/pb/IUCr/software.html", 
                     "ftp://ftp.sdsc.edu/pub/sdsc/biology/"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "pdbx_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MIR": {
         "properties": {
            "reflns": {
               "description": "The total number of reflections phased in the native data set.", 
               "type": "integer"
            }, 
            "reflns_acentric": {
               "description": "The number of acentric reflections phased in the native data\n set.", 
               "type": "integer"
            }, 
            "FOM_centric": {
               "description": "The mean value of the figure of merit m for the centric\n reflections phased in the native data set.\n\n     int P~alpha~ exp(i*alpha) dalpha\n m = --------------------------------\n           int P~alpha~ dalpha\n\n P~a~ = the probability that the phase angle a is correct\n\n the integral is taken over the range alpha = 0 to 2 pi.", 
               "type": "number"
            }, 
            "FOM_acentric": {
               "description": "The mean value of the figure of merit m for the acentric\n reflections phased in the native data set.\n\n     int P~alpha~ exp(i*alpha) dalpha\n m = --------------------------------\n           int P~alpha~ dalpha\n\n P~a~ = the probability that the phase angle a is correct\n\n the integral is taken over the range alpha = 0 to 2 pi.", 
               "type": "number"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "d_res_low": {
               "description": "The highest value in angstroms for the interplanar spacings\n for the reflection data used for the native data set. This is\n called the lowest resolution.", 
               "type": "number"
            }, 
            "reflns_criterion": {
               "description": "Criterion used to limit the reflections used in the phasing\n calculations.", 
               "examples": [
                  "> 4 \\s(I)"
               ], 
               "type": "string"
            }, 
            "d_res_high": {
               "description": "The lowest value in angstroms for the interplanar spacings\n for the reflection data used for the native data set. This is\n called the highest resolution.", 
               "type": "number"
            }, 
            "FOM": {
               "description": "The mean value of the figure of merit m for all reflections\n phased in the native data set.\n\n     int P~alpha~ exp(i*alpha) dalpha\n m = --------------------------------\n           int P~alpha~ dalpha\n\n P~a~ = the probability that the phase angle a is correct\n\n the integral is taken over the range alpha = 0 to 2 pi.", 
               "type": "number"
            }, 
            "reflns_centric": {
               "description": "The number of centric reflections phased in the native data\n set.", 
               "type": "integer"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_entity_src_syn": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3", 
                     "4"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the source for the\n synthetic entity.", 
                  "examples": [
                     "This sequence occurs naturally in humans."
                  ], 
                  "type": "string"
               }, 
               "organism_scientific": {
                  "description": "The scientific name of the organism from which the sequence of\n the synthetic entity was derived.", 
                  "examples": [
                     "Mus musculus"
                  ], 
                  "type": "string"
               }, 
               "pdbx_beg_seq_num": {
                  "description": "The beginning polymer sequence position for the polymer section corresponding\n to this source.\n\n A reference to the sequence position in the entity_poly category.", 
                  "type": "integer"
               }, 
               "pdbx_end_seq_num": {
                  "description": "The ending polymer sequence position for the polymer section corresponding\n to this source.\n\n A reference to the sequence position in the entity_poly category.", 
                  "type": "integer"
               }, 
               "organism_common_name": {
                  "description": "The common name of the organism from which the sequence of\n the synthetic entity was derived.", 
                  "examples": [
                     "house mouse"
                  ], 
                  "type": "string"
               }, 
               "ncbi_taxonomy_id": {
                  "description": "NCBI Taxonomy identifier of the organism from which the sequence of\n the synthetic entity was derived.\n\n Reference:\n\n Wheeler DL, Chappey C, Lash AE, Leipe DD, Madden TL, Schuler GD,\n Tatusova TA, Rapp BA (2000). Database resources of the National\n Center for Biotechnology Information. Nucleic Acids Res 2000 Jan\n 1;28(1):10-4\n\n Benson DA, Karsch-Mizrachi I, Lipman DJ, Ostell J, Rapp BA,\n Wheeler DL (2000). GenBank. Nucleic Acids Res 2000 Jan 1;28(1):15-18.\n", 
                  "type": "string"
               }, 
               "pdbx_alt_source_flag": {
                  "enum": [
                     "sample", 
                     "model"
                  ], 
                  "description": "This data item identifies cases in which an alternative source\n modeled.", 
                  "type": "string"
               }, 
               "pdbx_src_id": {
                  "description": "This data item is an ordinal identifier for pdbx_entity_src_syn data records.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "entity_id", 
               "pdbx_src_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_software": {
         "minItems": 1, 
         "items": {
            "properties": {
               "classification": {
                  "description": "The purpose of the software.", 
                  "examples": [
                     "collection", 
                     "processing", 
                     "data analysis", 
                     "structure solution", 
                     "refinement", 
                     "iterative matrix relaxation"
                  ], 
                  "type": "string"
               }, 
               "version": {
                  "description": "The version of the software.", 
                  "examples": [
                     "940501.3", 
                     "2.1"
                  ], 
                  "type": "string"
               }, 
               "name": {
                  "description": "The name of the software used for the task.", 
                  "examples": [
                     "ANSIG", 
                     "AURELIA", 
                     "AZARA", 
                     "CHARMM", 
                     "CORMA", 
                     "DIANA", 
                     "DYANA", 
                     "DSPACE", 
                     "DISGEO", 
                     "DGII", 
                     "DISMAN", 
                     "DINOSAUR", 
                     "DISCOVER", 
                     "FELIX", 
                     "FT_NMR", 
                     "GROMOS", 
                     "IRMA", 
                     "MARDIGRAS", 
                     "NMRPipe", 
                     "SA", 
                     "UXNMR", 
                     "VNMR", 
                     "X-PLOR", 
                     "XWINNMR"
                  ], 
                  "type": "string"
               }, 
               "authors": {
                  "description": "The name of the authors of the software used in this\n procedure.", 
                  "examples": [
                     "Brunger", 
                     "Guentert"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "\nAn ordinal index for this category", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "integer"
               }
            }, 
            "required": [
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_audit_revision_group": {
         "minItems": 1, 
         "items": {
            "properties": {
               "data_content_type": {
                  "enum": [
                     "Structure model", 
                     "Structure factors", 
                     "NMR shifts", 
                     "NMR restraints"
                  ], 
                  "description": "The type of file that the pdbx_audit_revision_history record refers to.", 
                  "examples": [
                     "Structure model"
                  ], 
                  "type": "string"
               }, 
               "group": {
                  "enum": [
                     "Structure summary", 
                     "Other", 
                     "Atomic model", 
                     "Source and taxonomy", 
                     "Derived calculations", 
                     "Database references", 
                     "Non-polymer description", 
                     "Author supporting evidence", 
                     "Data collection", 
                     "Initial release", 
                     "Polymer sequence", 
                     "Data processing", 
                     "Refinement description", 
                     "Version format compliance", 
                     "Advisory", 
                     "Experimental data", 
                     "Experimental preparation"
                  ], 
                  "description": "The collection of categories updated with this revision.", 
                  "examples": [
                     "citation"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "A unique identifier for the pdbx_audit_revision_group record.", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }, 
               "revision_ordinal": {
                  "description": "A pointer to  _pdbx_audit_revision_history.ordinal", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }
            }, 
            "required": [
               "data_content_type", 
               "ordinal", 
               "revision_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "cell": {
         "properties": {
            "angle_alpha_esd": {
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.angle_alpha.", 
               "type": "number"
            }, 
            "length_c": {
               "description": "Unit-cell length c corresponding to the structure reported in\nangstroms.", 
               "type": "number"
            }, 
            "length_b": {
               "description": "Unit-cell length b corresponding to the structure reported in\n angstroms.", 
               "type": "number"
            }, 
            "length_a": {
               "description": "Unit-cell length a corresponding to the structure reported in\nangstroms.", 
               "type": "number"
            }, 
            "angle_gamma_esd": {
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.angle_gamma.", 
               "type": "number"
            }, 
            "angle_alpha": {
               "description": "Unit-cell angle alpha of the reported structure in degrees.", 
               "type": "number"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "angle_beta_esd": {
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.angle_beta.", 
               "type": "number"
            }, 
            "angle_gamma": {
               "description": "Unit-cell angle gamma of the reported structure in degrees.", 
               "type": "number"
            }, 
            "reciprocal_angle_gamma": {
               "description": "The angle (recip-gamma) defining the reciprocal cell in degrees.\n (recip-alpha), (recip-alpha) and (recip-alpha) related to the\n angles in the real cell by:\n\n cos(recip-alpha)\n     = [cos(beta)*cos(gamma) - cos(alpha)]/[sin(beta)*sin(gamma)]\n\n cos(recip-beta)\n     = [cos(gamma)*cos(alpha) - cos(beta)]/[sin(gamma)*sin(alpha)]\n\n cos(recip-gamma)\n     = [cos(alpha)*cos(beta) - cos(gamma)]/[sin(alpha)*sin(beta)]\n\n Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.\n         New York: John Wiley & Sons Inc.", 
               "type": "number"
            }, 
            "formula_units_Z": {
               "description": "The number of the formula units in the unit cell as specified\n by _chemical_formula.structural, _chemical_formula.moiety or\n _chemical_formula.sum.", 
               "type": "integer"
            }, 
            "angle_beta": {
               "description": "Unit-cell angle beta of the reported structure in degrees.", 
               "type": "number"
            }, 
            "volume": {
               "description": "Cell volume V in angstroms cubed.\n\n V = a b c (1 - cos^2^~alpha~ - cos^2^~beta~ - cos^2^~gamma~\n            + 2 cos~alpha~ cos~beta~ cos~gamma~)^1/2^\n\n a     = _cell.length_a\n b     = _cell.length_b\n c     = _cell.length_c\n alpha = _cell.angle_alpha\n beta  = _cell.angle_beta\n gamma = _cell.angle_gamma", 
               "type": "number"
            }, 
            "length_b_esd": {
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.length_b.", 
               "type": "number"
            }, 
            "reciprocal_angle_beta": {
               "description": "The angle (recip-beta) defining the reciprocal cell in degrees.\n (recip-alpha), (recip-alpha) and (recip-alpha) related to the\n angles in the real cell by:\n\n cos(recip-alpha)\n     = [cos(beta)*cos(gamma) - cos(alpha)]/[sin(beta)*sin(gamma)]\n\n cos(recip-beta)\n     = [cos(gamma)*cos(alpha) - cos(beta)]/[sin(gamma)*sin(alpha)]\n\n cos(recip-gamma)\n     = [cos(alpha)*cos(beta) - cos(gamma)]/[sin(alpha)*sin(beta)]\n\n Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.\n         New York: John Wiley & Sons Inc.", 
               "type": "number"
            }, 
            "length_a_esd": {
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.length_a.", 
               "type": "number"
            }, 
            "reciprocal_angle_alpha": {
               "description": "The angle (recip-alpha) defining the reciprocal cell in degrees.\n (recip-alpha), (recip-alpha) and (recip-alpha) related to the\n angles in the real cell by:\n\n cos(recip-alpha)\n     = [cos(beta)*cos(gamma) - cos(alpha)]/[sin(beta)*sin(gamma)]\n\n cos(recip-beta)\n     = [cos(gamma)*cos(alpha) - cos(beta)]/[sin(gamma)*sin(alpha)]\n\n cos(recip-gamma)\n     = [cos(alpha)*cos(beta) - cos(gamma)]/[sin(alpha)*sin(beta)]\n\n Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.\n         New York: John Wiley & Sons Inc.", 
               "type": "number"
            }, 
            "Z_PDB": {
               "description": "The number of the polymeric chains in a unit cell. In the case\n of heteropolymers, Z is the number of occurrences of the most\n populous chain.\n\n This data item is provided for compatibility with the original\n Protein Data Bank format, and only for that purpose.", 
               "type": "integer"
            }, 
            "pdbx_unique_axis": {
               "description": "To further identify unique axis if necessary.  E.g., P 21 with\n an unique C axis will have 'C' in this field.", 
               "type": "string"
            }, 
            "length_c_esd": {
               "description": "The standard uncertainty (estimated standard deviation)\n of _cell.length_c.", 
               "type": "number"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "struct_asym": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _struct_asym.id must uniquely identify a record in\n the STRUCT_ASYM list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "1", 
                     "A", 
                     "2B3"
                  ], 
                  "type": "string"
               }, 
               "pdbx_blank_PDB_chainid_flag": {
                  "enum": [
                     "N", 
                     "Y"
                  ], 
                  "description": "A flag indicating that this entity was originally labeled\n with a blank PDB chain id.", 
                  "type": "string"
               }, 
               "pdbx_modified": {
                  "description": "This data item indicates whether the structural elements are modified.", 
                  "examples": [
                     "y"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "entity_src_gen": {
         "minItems": 1, 
         "items": {
            "properties": {
               "host_org_details": {
                  "description": "A description of special aspects of the organism that served as\n host for the production of the entity. Where full details of\n the protein production are available it would be expected that\n this item would derived from _entity_src_gen_express.host_org_details", 
                  "type": "string"
               }, 
               "pdbx_gene_src_fragment": {
                  "description": "A domain or fragment of the molecule.", 
                  "examples": [
                     "CYTOPLASM", 
                     "NUCLEUS"
                  ], 
                  "type": "string"
               }, 
               "host_org_genus": {
                  "description": "The genus of the organism that served as host for the production\n of the entity.", 
                  "examples": [
                     "Saccharomyces", 
                     "Escherichia"
                  ], 
                  "type": "string"
               }, 
               "gene_src_common_name": {
                  "description": "The common name of the natural organism from which the gene was\n obtained.", 
                  "examples": [
                     "man", 
                     "yeast", 
                     "bacteria"
                  ], 
                  "type": "string"
               }, 
               "pdbx_gene_src_gene": {
                  "description": "Identifies the gene.", 
                  "type": "string"
               }, 
               "pdbx_gene_src_organelle": {
                  "description": "Organized structure within cell.", 
                  "examples": [
                     "MITOCHONDRIA"
                  ], 
                  "type": "string"
               }, 
               "pdbx_end_seq_num": {
                  "description": "The ending polymer sequence position for the polymer section corresponding\n to this source.\n\n A reference to the sequence position in the entity_poly category.", 
                  "type": "integer"
               }, 
               "pdbx_host_org_tissue_fraction": {
                  "description": "\nThe fraction of the tissue which expressed the\nmolecule.", 
                  "examples": [
                     "mitochondria", 
                     "nucleus", 
                     "membrane"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_variant": {
                  "description": "Variant of the organism used as the expression system. Where\n full details of the protein production are available it would\n be expected that this item be derived from\n entity_src_gen_express.host_org_variant or via\n _entity_src_gen_express.host_org_tax_id", 
                  "examples": [
                     "TRP-LAC", 
                     "LAMBDA DE3"
                  ], 
                  "type": "string"
               }, 
               "gene_src_strain": {
                  "description": "The strain of the natural organism from which the gene was\n obtained, if relevant.", 
                  "examples": [
                     "DH5a", 
                     "BMH 71-18"
                  ], 
                  "type": "string"
               }, 
               "pdbx_src_id": {
                  "description": "This data item is an ordinal identifier for entity_src_gen data records.", 
                  "type": "integer"
               }, 
               "pdbx_gene_src_variant": {
                  "description": "Identifies the variant.", 
                  "examples": [
                     "DELTAH1DELTATRP"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_tissue": {
                  "description": "The specific tissue which expressed the molecule. Where full details\n of the protein production are available it would be expected that this\n item would be derived from _entity_src_gen_express.host_org_tissue", 
                  "examples": [
                     "heart", 
                     "liver", 
                     "eye lens"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_organ": {
                  "description": "Specific organ which expressed the molecule.", 
                  "examples": [
                     "KIDNEY"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_cell_line": {
                  "description": "A specific line of cells used as the expression system. Where\n full details of the protein production are available it would\n be expected that this item would be derived from\n entity_src_gen_express.host_org_cell_line", 
                  "examples": [
                     "HELA"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_ncbi_taxonomy_id": {
                  "description": "NCBI Taxonomy identifier for the expression system organism.\n\n Reference:\n\n Wheeler DL, Chappey C, Lash AE, Leipe DD, Madden TL, Schuler GD,\n Tatusova TA, Rapp BA (2000). Database resources of the National\n Center for Biotechnology Information. Nucleic Acids Res 2000 Jan\n 1;28(1):10-4\n\n Benson DA, Karsch-Mizrachi I, Lipman DJ, Ostell J, Rapp BA,\n Wheeler DL (2000). GenBank. Nucleic Acids Res 2000 Jan 1;28(1):15-18.\n", 
                  "type": "string"
               }, 
               "pdbx_host_org_organelle": {
                  "description": "Specific organelle which expressed the molecule.", 
                  "examples": [
                     "MITOCHONDRIA"
                  ], 
                  "type": "string"
               }, 
               "pdbx_gene_src_scientific_name": {
                  "description": "Scientific name of the organism.", 
                  "examples": [
                     "ESCHERICHIA COLI\nHOMO SAPIENS\nSACCHAROMYCES CEREVISIAE"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_vector": {
                  "description": "Identifies the vector used. Where full details of the protein\n production are available it would be expected that this item\n would be derived from _entity_src_gen_clone.vector_name.", 
                  "examples": [
                     "PBIT36", 
                     "PET15B", 
                     "PUC18"
                  ], 
                  "type": "string"
               }, 
               "pdbx_seq_type": {
                  "enum": [
                     "C-terminal tag", 
                     "N-terminal tag", 
                     "Linker", 
                     "Biological sequence"
                  ], 
                  "description": "This data item povides additional information about the sequence type.", 
                  "type": "string"
               }, 
               "pdbx_host_org_gene": {
                  "description": "Specific gene which expressed the molecule.", 
                  "examples": [
                     "HIV-1 POL", 
                     "GLNS7", 
                     "U1A (2-98, Y31H, Q36R)"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_vector_type": {
                  "description": "Identifies the type of vector used (plasmid, virus, or cosmid).\n Where full details of the protein production are available it\n would be expected that this item would be derived from\n _entity_src_gen_express.vector_type.", 
                  "examples": [
                     "COSMID", 
                     "PLASMID"
                  ], 
                  "type": "string"
               }, 
               "pdbx_description": {
                  "description": "Information on the source which is not given elsewhere.", 
                  "type": "string"
               }, 
               "gene_src_details": {
                  "description": "A description of special aspects of the natural organism from\n which the gene was obtained.", 
                  "type": "string"
               }, 
               "host_org_species": {
                  "description": "The species of the organism that served as host for the\n production of the entity.", 
                  "examples": [
                     "cerevisiae", 
                     "coli"
                  ], 
                  "type": "string"
               }, 
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "plasmid_details": {
                  "description": "A description of special aspects of the plasmid that produced the\n entity in the host organism. Where full details of the protein\n production are available it would be expected that this item\n would be derived from _pdbx_construct.details of the construct\n pointed to from _entity_src_gen_express.plasmid_id.", 
                  "type": "string"
               }, 
               "pdbx_gene_src_organ": {
                  "description": "Organized group of tissues that carries on a specialized function.", 
                  "examples": [
                     "KIDNEY", 
                     "LIVER", 
                     "PANCREAS"
                  ], 
                  "type": "string"
               }, 
               "gene_src_species": {
                  "description": "The species of the natural organism from which the gene was\n obtained.", 
                  "examples": [
                     "sapiens", 
                     "cerevisiae", 
                     "coli"
                  ], 
                  "type": "string"
               }, 
               "host_org_common_name": {
                  "description": "The common name of the organism that served as host for the\n production of the entity.  Where full details of the protein\n production are available it would be expected that this item\n be derived from _entity_src_gen_express.host_org_common_name\n or via _entity_src_gen_express.host_org_tax_id", 
                  "examples": [
                     "yeast", 
                     "bacteria"
                  ], 
                  "type": "string"
               }, 
               "pdbx_beg_seq_num": {
                  "description": "The beginning polymer sequence position for the polymer section corresponding\n to this source.\n\n A reference to the sequence position in the entity_poly category.", 
                  "type": "integer"
               }, 
               "gene_src_tissue_fraction": {
                  "description": "The subcellular fraction of the tissue of the natural organism\n from which the gene was obtained.", 
                  "examples": [
                     "mitochondria", 
                     "nucleus", 
                     "membrane"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_cell": {
                  "description": "Cell type from which the gene is derived. Where\n entity.target_id is provided this should be derived from\n details of the target.", 
                  "examples": [
                     "ENDOTHELIAL"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_cellular_location": {
                  "description": "Identifies the location inside (or outside) the cell which\n expressed the molecule.", 
                  "examples": [
                     "CYTOPLASM", 
                     "NUCLEUS"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_culture_collection": {
                  "description": "Culture collection of the expression system. Where\n full details of the protein production are available it would\n be expected that this item  would be derived somehwere, but\n exactly where is not clear.", 
                  "type": "string"
               }, 
               "plasmid_name": {
                  "description": "The name of the plasmid that produced the entity in the host\n organism. Where full details of the protein production are available\n it would be expected that this item would be derived from\n _pdbx_construct.name of the construct pointed to from\n _entity_src_gen_express.plasmid_id.", 
                  "examples": [
                     "pET3C", 
                     "pT123sab"
                  ], 
                  "type": "string"
               }, 
               "pdbx_gene_src_cell_line": {
                  "description": "The specific line of cells.", 
                  "examples": [
                     "HELA CELLS"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_scientific_name": {
                  "description": "The scientific name of the organism that served as host for the\n production of the entity. Where full details of the protein\n production are available it would be expected that this item\n would be derived from _entity_src_gen_express.host_org_scientific_name\n or via _entity_src_gen_express.host_org_tax_id", 
                  "examples": [
                     "ESCHERICHIA COLI", 
                     "SACCHAROMYCES CEREVISIAE"
                  ], 
                  "type": "string"
               }, 
               "gene_src_tissue": {
                  "description": "The tissue of the natural organism from which the gene was\n obtained.", 
                  "examples": [
                     "heart", 
                     "liver", 
                     "eye lens"
                  ], 
                  "type": "string"
               }, 
               "pdbx_gene_src_cell": {
                  "description": "Cell type.", 
                  "examples": [
                     "ENDOTHELIAL"
                  ], 
                  "type": "string"
               }, 
               "pdbx_host_org_atcc": {
                  "description": "Americal Tissue Culture Collection of the expression system. Where\n full details of the protein production are available it would\n be expected that this item  would be derived from\n _entity_src_gen_express.host_org_culture_collection", 
                  "type": "string"
               }, 
               "pdbx_gene_src_cellular_location": {
                  "description": "Identifies the location inside (or outside) the cell.", 
                  "examples": [
                     "CYTOPLASM", 
                     "NUCLEUS"
                  ], 
                  "type": "string"
               }, 
               "pdbx_gene_src_ncbi_taxonomy_id": {
                  "description": "NCBI Taxonomy identifier for the gene source organism.\n\n Reference:\n\n Wheeler DL, Chappey C, Lash AE, Leipe DD, Madden TL, Schuler GD,\n Tatusova TA, Rapp BA (2000). Database resources of the National\n Center for Biotechnology Information. Nucleic Acids Res 2000 Jan\n 1;28(1):10-4\n\n Benson DA, Karsch-Mizrachi I, Lipman DJ, Ostell J, Rapp BA,\n Wheeler DL (2000). GenBank. Nucleic Acids Res 2000 Jan 1;28(1):15-18.\n", 
                  "type": "string"
               }, 
               "pdbx_host_org_strain": {
                  "description": "\nThe strain of the organism in which the entity was\nexpressed.", 
                  "examples": [
                     "AR120"
                  ], 
                  "type": "string"
               }, 
               "pdbx_gene_src_atcc": {
                  "description": "American Type Culture Collection tissue culture number.", 
                  "examples": [
                     "6051"
                  ], 
                  "type": "string"
               }, 
               "expression_system_id": {
                  "description": "A unique identifier for the expression system. This\n should be extracted from a local list of expression\n systems.", 
                  "type": "string"
               }, 
               "gene_src_genus": {
                  "description": "The genus of the natural organism from which the gene was\n obtained.", 
                  "examples": [
                     "Homo", 
                     "Saccharomyces", 
                     "Escherichia"
                  ], 
                  "type": "string"
               }, 
               "pdbx_alt_source_flag": {
                  "enum": [
                     "sample", 
                     "model"
                  ], 
                  "description": "This data item identifies cases in which an alternative source\n modeled.", 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_id", 
               "pdbx_src_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "exptl_crystal_grow": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pH": {
                  "description": "The pH at which the crystal was grown. If more than one pH was\n employed during the crystallization process, the final pH should\n be noted here and the protocol involving multiple pH values\n should be described in _exptl_crystal_grow.details.", 
                  "examples": [
                     "7.4", 
                     "7.6", 
                     "4.3"
                  ], 
                  "type": "number"
               }, 
               "temp": {
                  "description": "The temperature in kelvins at which the crystal was grown.\n If more than one temperature was employed during the\n crystallization process, the final temperature should be noted\n here and the protocol  involving multiple temperatures should be\n described in _exptl_crystal_grow.details.", 
                  "type": "number"
               }, 
               "crystal_id": {
                  "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category.", 
                  "type": "string"
               }, 
               "method": {
                  "description": "The method used to grow the crystals.", 
                  "examples": [
                     "batch precipitation", 
                     "batch dialysis", 
                     "hanging drop vapor diffusion", 
                     "sitting drop vapor diffusion"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the crystal growth.", 
                  "examples": [
                     "Solution 2 was prepared as a well solution and\n                                  mixed. A droplet containing 2 \\ml of solution\n                                  1 was delivered onto a cover slip; 2 \\ml of\n                                  solution 2 was added to the droplet without\n                                  mixing.", 
                     "Crystal plates were originally stored at room\n                                  temperature for 1 week but no nucleation\n                                  occurred. They were then transferred to 4\n                                  degrees C, at which temperature well formed\n                                  single crystals grew in 2 days.", 
                     "The dependence on pH for successful crystal\n                                  growth is very sharp. At pH 7.4 only showers\n                                  of tiny crystals grew, at pH 7.5 well formed\n                                  single crystals grew, at pH 7.6 no\n                                  crystallization occurred at all."
                  ], 
                  "type": "string"
               }, 
               "pdbx_details": {
                  "description": "Text description of crystal growth procedure.", 
                  "examples": [
                     "PEG 4000, potassium phosphate, magnesium chloride, cacodylate"
                  ], 
                  "type": "string"
               }, 
               "temp_details": {
                  "description": "A description of special aspects of temperature control during\n crystal growth.", 
                  "type": "string"
               }, 
               "pdbx_pH_range": {
                  "description": "The range of pH values at which the crystal was grown.   Used when\n a point estimate of pH is not appropriate.", 
                  "examples": [
                     "5.6 - 6.4"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "crystal_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_ref": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _struct_ref.id must uniquely identify a record\n in the STRUCT_REF list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "pdbx_align_begin": {
                  "description": "\nBeginning index in the chemical sequence from the\nreference database.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "pdbx_db_isoform": {
                  "description": "Database code assigned by the reference database for a sequence isoform.   An isoform sequence is an\n alternative protein sequence that can be generated from the same gene by a single or by a combination of\n biological events such as: alternative promoter usage, alternative splicing, alternative initiation\n and ribosomal frameshifting.", 
                  "examples": [
                     "P29994-6"
                  ], 
                  "type": "string"
               }, 
               "db_name": {
                  "description": "The name of the database containing reference information about\n this entity or biological unit.", 
                  "examples": [
                     "PDB", 
                     "CSD", 
                     "Genbank"
                  ], 
                  "type": "string"
               }, 
               "db_code": {
                  "description": "The code for this entity or biological unit or for a closely\n related entity or biological unit in the named database.", 
                  "examples": [
                     "1ABC", 
                     "ABCDEF"
                  ], 
                  "type": "string"
               }, 
               "pdbx_seq_one_letter_code": {
                  "description": "Database chemical sequence expressed as string of one-letter\n amino acid codes.", 
                  "examples": [
                     "A  for alanine or adenine\nB  for ambiguous asparagine/aspartic-acid\nR  for arginine\nN  for asparagine\nD  for aspartic-acid\nC  for cysteine or cystine or cytosine\nQ  for glutamine\nE  for glutamic-acid\nZ  for ambiguous glutamine/glutamic acid\nG  for glycine or guanine\nH  for histidine\nI  for isoleucine\nL  for leucine\nK  for lysine\nM  for methionine\nF  for phenylalanine\nP  for proline\nS  for serine\nT  for threonine or thymine\nW  for tryptophan\nY  for tyrosine\nV  for valine\nU  for uracil\nO  for water\nX  for other"
                  ], 
                  "type": "string"
               }, 
               "pdbx_db_accession": {
                  "description": "Accession code assigned by the reference database.", 
                  "examples": [
                     "P07617"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "chem_comp": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _chem_comp.id must uniquely identify each item in\n the CHEM_COMP list.\n\n For protein polymer entities, this is the three-letter code for\n the amino acid.\n\n For nucleic acid polymer entities, this is the one-letter code\n for the base.", 
                  "examples": [
                     "ALA", 
                     "VAL", 
                     "DG", 
                     "C"
                  ], 
                  "type": "string"
               }, 
               "formula_weight": {
                  "description": "Formula mass in daltons of the chemical component.", 
                  "type": "number"
               }, 
               "mon_nstd_flag": {
                  "enum": [
                     "yes", 
                     "n", 
                     "no", 
                     "y"
                  ], 
                  "description": "'yes' indicates that this is a 'standard' monomer, 'no'\n indicates that it is 'nonstandard'. Nonstandard monomers\n should be described in more detail using the\n _chem_comp.mon_nstd_parent, _chem_comp.mon_nstd_class and\n _chem_comp.mon_nstd_details data items.", 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "L-saccharide", 
                     "D-saccharide 1,4 and 1,4 linking", 
                     "L-beta-peptide, C-gamma linking", 
                     "L-DNA linking", 
                     "DNA OH 3 prime terminus", 
                     "L-peptide NH3 amino terminus", 
                     "peptide linking", 
                     "D-peptide linking", 
                     "non-polymer", 
                     "D-saccharide", 
                     "L-saccharide 1,4 and 1,6 linking", 
                     "RNA OH 5 prime terminus", 
                     "DNA OH 5 prime terminus", 
                     "L-RNA linking", 
                     "D-gamma-peptide, C-delta linking", 
                     "D-peptide COOH carboxy terminus", 
                     "other", 
                     "RNA OH 3 prime terminus", 
                     "D-peptide NH3 amino terminus", 
                     "L-peptide linking", 
                     "D-beta-peptide, C-gamma linking", 
                     "L-gamma-peptide, C-delta linking", 
                     "saccharide", 
                     "DNA linking", 
                     "D-saccharide 1,4 and 1,6 linking", 
                     "L-peptide COOH carboxy terminus", 
                     "L-saccharide 1,4 and 1,4 linking", 
                     "RNA linking", 
                     "peptide-like"
                  ], 
                  "description": "For standard polymer components, the type of the monomer.\n Note that monomers that will form polymers are of three types:\n linking monomers, monomers with some type of N-terminal (or 5')\n cap and monomers with some type of C-terminal (or 3') cap.", 
                  "type": "string"
               }, 
               "formula": {
                  "description": "The formula for the chemical component. Formulae are written\n according to the following rules:\n\n (1) Only recognized element symbols may be used.\n\n (2) Each element symbol is followed by a 'count' number. A count\n    of '1' may be omitted.\n\n (3) A space or parenthesis must separate each cluster of\n    (element symbol + count), but in general parentheses are\n    not used.\n\n (4) The order of elements depends on whether carbon is\n    present or not. If carbon is present, the order should be:\n    C, then H, then the other elements in alphabetical order\n    of their symbol. If carbon is not present, the elements\n    are listed purely in alphabetic order of their symbol. This\n    is the 'Hill' system used by Chemical Abstracts.", 
                  "examples": [
                     "C18 H19 N7 O8 S"
                  ], 
                  "type": "string"
               }, 
               "name": {
                  "description": "The full name of the component.", 
                  "examples": [
                     "alanine", 
                     "valine", 
                     "adenine", 
                     "cytosine"
                  ], 
                  "type": "string"
               }, 
               "pdbx_synonyms": {
                  "description": "Synonym list for the component.", 
                  "examples": [
                     "ATP"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_biol": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _struct_biol.id must uniquely identify a record in\n the STRUCT_BIOL list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the biological unit.", 
                  "examples": [
                     "The drug binds to this enzyme in two roughly\n                                  twofold symmetric modes. Hence this\n                                  biological unit (3) is roughly twofold\n                                  symmetric to biological unit (2). Disorder in\n                                  the protein chain indicated with alternative\n                                  ID 2 should be used with this biological unit."
                  ], 
                  "type": "string"
               }, 
               "pdbx_aggregation_state": {
                  "enum": [
                     "TETRAMER", 
                     "TRIMER", 
                     "DIMER", 
                     "MORE", 
                     "MONOMER", 
                     "HEXAMER"
                  ], 
                  "description": "A description of the structural aggregation in this assembly.", 
                  "type": "string"
               }, 
               "pdbx_formula_weight_method": {
                  "description": "Method used to determine _struct_biol.pdbx_formula_weight.", 
                  "examples": [
                     "MASS SPEC", 
                     "CALCULATION"
                  ], 
                  "type": "string"
               }, 
               "pdbx_parent_biol_id": {
                  "description": "An identifier for the parent biological assembly\n if this biological unit is part of a complex assembly.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }, 
               "pdbx_assembly_method": {
                  "description": "The method or experiment used to determine this assembly.", 
                  "examples": [
                     "AUTHOR PROVIDED', 'LCMS', 'PISA', 'PQS"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_chem_comp_diagnostics": {
         "minItems": 1, 
         "items": {
            "properties": {
               "asym_id": {
                  "description": "Instance identifier for the polymer molecule.", 
                  "examples": [
                     "A", 
                     "B"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "\nAn ordinal index for this category", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "integer"
               }, 
               "pdb_strand_id": {
                  "description": "PDB strand/chain id.", 
                  "examples": [
                     "A", 
                     "B"
                  ], 
                  "type": "string"
               }, 
               "auth_seq_id": {
                  "description": "\nPDB  position in the sequence.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "auth_comp_id": {
                  "description": "\nPDB component ID", 
                  "examples": [
                     "NAG", 
                     "ATP"
                  ], 
                  "type": "string"
               }, 
               "seq_num": {
                  "description": "\nPosition in the sequence.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "integer"
               }, 
               "type": {
                  "enum": [
                     "OTHER", 
                     "LABELING", 
                     "MISSING_ATOM", 
                     "VALENCE", 
                     "STEREOCHEMISTRY", 
                     "GEOMETRY"
                  ], 
                  "description": "A classification of the diagnostic for the chemical\n component instance", 
                  "type": "string"
               }
            }, 
            "required": [
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "cell_measurement": {
         "properties": {
            "reflns_used": {
               "description": "The total number of reflections used to determine the unit cell.\n These reflections may be specified as CELL_MEASUREMENT_REFLN\n data items.", 
               "type": "integer"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "database_PDB_matrix": {
         "properties": {
            "origx_2_1": {
               "description": "The [2][1] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_2_2": {
               "description": "The [2][2] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_2_3": {
               "description": "The [2][3] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "origx_3_1": {
               "description": "The [3][1] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_3_3": {
               "description": "The [3][3] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_3_2": {
               "description": "The [3][2] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_1_3": {
               "description": "The [1][3] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_1_2": {
               "description": "The [1][2] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_1_1": {
               "description": "The [1][1] element of the PDB ORIGX matrix.", 
               "type": "number"
            }, 
            "origx_vector_1": {
               "description": "The [1] element of the PDB ORIGX vector.", 
               "type": "number"
            }, 
            "origx_vector_2": {
               "description": "The [2] element of the PDB ORIGX vector.", 
               "type": "number"
            }, 
            "origx_vector_3": {
               "description": "The [3] element of the PDB ORIGX vector.", 
               "type": "number"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_struct_oper_list": {
         "minItems": 1, 
         "items": {
            "properties": {
               "matrix_1_2": {
                  "description": "The [1][2] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_1_3": {
                  "description": "The [1][3] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "id": {
                  "description": "This identifier code must uniquely identify a\n record in the PDBX_STRUCT_OPER_LIST list.", 
                  "type": "string"
               }, 
               "matrix_2_2": {
                  "description": "The [2][2] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "type": {
                  "enum": [
                     "transform to helical frame", 
                     "crystal symmetry operation", 
                     "transform to 2D crystal frame", 
                     "transform to 3D crystal frame", 
                     "point symmetry operation", 
                     "transform to crystal frame", 
                     "build point asymmetric unit", 
                     "2D crystal symmetry operation", 
                     "transform to point frame", 
                     "build helical asymmetric unit", 
                     "build 2D crystal asymmetric unit", 
                     "build 3D crystal asymmetric unit", 
                     "helical symmetry operation", 
                     "3D crystal symmetry operation", 
                     "identity operation"
                  ], 
                  "description": "A code to indicate the type of operator.", 
                  "type": "string"
               }, 
               "symmetry_operation": {
                  "description": "The symmetry operation corresponding to the transformation operation.", 
                  "examples": [
                     "x,y,z", 
                     "x+1/2,y,-z"
                  ], 
                  "type": "string"
               }, 
               "matrix_1_1": {
                  "description": "The [1][1] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_2_1": {
                  "description": "The [2][1] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "vector_3": {
                  "description": "The [3] element of the three-element vector component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_2_3": {
                  "description": "The [2][3] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "vector_1": {
                  "description": "The [1] element of the three-element vector component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "vector_2": {
                  "description": "The [2] element of the three-element vector component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "name": {
                  "description": "A descriptive name for the transformation operation.", 
                  "examples": [
                     "1_555", 
                     "two-fold rotation"
                  ], 
                  "type": "string"
               }, 
               "matrix_3_1": {
                  "description": "The [3][1] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_3_2": {
                  "description": "The [3][2] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_3_3": {
                  "description": "The [3][3] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "atom_sites": {
         "properties": {
            "Cartn_transf_matrix_1_1": {
               "description": "The [1][1] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_1_3": {
               "description": "The [1][3] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_1_2": {
               "description": "The [1][2] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "fract_transf_matrix_3_3": {
               "description": "The [3][3] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_3_2": {
               "description": "The [3][2] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_3_1": {
               "description": "The [3][1] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_vector_1": {
               "description": "The [1] element of the three-element vector used to transform\n Cartesian coordinates in the ATOM_SITE category to fractional\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x3 rotation is defined in\n _atom_sites.fract_transf_matrix[][].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_vector_3": {
               "description": "The [3] element of the three-element vector used to transform\n Cartesian coordinates in the ATOM_SITE category to fractional\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x3 rotation is defined in\n _atom_sites.fract_transf_matrix[][].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_vector_2": {
               "description": "The [2] element of the three-element vector used to transform\n Cartesian coordinates in the ATOM_SITE category to fractional\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x3 rotation is defined in\n _atom_sites.fract_transf_matrix[][].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_2_2": {
               "description": "The [2][2] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_2_3": {
               "description": "The [2][3] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_2_1": {
               "description": "The [2][1] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_1_1": {
               "description": "The [1][1] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_1_3": {
               "description": "The [1][3] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "fract_transf_matrix_1_2": {
               "description": "The [1][2] element of the 3x3 matrix used to transform Cartesian\n coordinates in the ATOM_SITE category to fractional coordinates\n in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.fract_transf_vector[].\n\n |x'|               |11 12 13| |x|              |1|\n |y'|~fractional~ = |21 22 23| |y|~Cartesian~ + |2|\n |z'|               |31 32 33| |z|              |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_3_3": {
               "description": "The [3][3] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_3_2": {
               "description": "The [3][2] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_3_1": {
               "description": "The [3][1] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_2_2": {
               "description": "The [2][2] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_2_3": {
               "description": "The [2][3] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_matrix_2_1": {
               "description": "The [2][1] element of the 3x3 matrix used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The 3x1 translation is defined in\n _atom_sites.Cartn_transf_vector[].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_vector_1": {
               "description": "The [1] element of the three-element vector used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The rotation matrix is defined in\n _atom_sites.Cartn_transf_matrix[][].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_vector_3": {
               "description": "The [3] element of the three-element vector used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The rotation matrix is defined in\n _atom_sites.Cartn_transf_matrix[][].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }, 
            "Cartn_transf_vector_2": {
               "description": "The [2] element of the three-element vector used to transform\n fractional coordinates in the ATOM_SITE category to Cartesian\n coordinates in the same category. The axial alignments of this\n transformation are described in _atom_sites.Cartn_transform_axes.\n The rotation matrix is defined in\n _atom_sites.Cartn_transf_matrix[][].\n\n |x'|              |11 12 13| |x|               |1|\n |y'|~Cartesian~ = |21 22 23| |y|~fractional~ + |2|\n |z'|              |31 32 33| |z|               |3|", 
               "type": "number"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_entity_nonpoly": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "A name for the non-polymer entity", 
                  "type": "string"
               }, 
               "comp_id": {
                  "description": "This data item is a pointer to _chem_comp.id in the CHEM_COMP category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "database_2": {
         "minItems": 1, 
         "items": {
            "properties": {
               "database_id": {
                  "enum": [
                     "ICSD", 
                     "PDB", 
                     "NBS", 
                     "BMRB", 
                     "CSD", 
                     "MDF", 
                     "PDF", 
                     "CAS", 
                     "EBI", 
                     "RCSB", 
                     "EMDB", 
                     "PDB_ACC", 
                     "PDBE", 
                     "WWPDB", 
                     "NDB"
                  ], 
                  "description": "An abbreviation that identifies the database.", 
                  "type": "string"
               }, 
               "database_code": {
                  "description": "The code assigned by the database identified in\n _database_2.database_id.", 
                  "examples": [
                     "1ABC", 
                     "ABCDEF"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "database_code", 
               "database_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_sample_details": {
         "minItems": 1, 
         "items": {
            "properties": {
               "contents": {
                  "description": "\nA complete description of each NMR sample. Include the concentration\nand concentration units for each component (include buffers, etc.). For each\ncomponent describe the isotopic composition, including the % labeling level,\nif known.\n\nFor example:\n1. Uniform (random) labeling with 15N: U-15N\n2. Uniform (random) labeling with 13C, 15N at known labeling\n   levels: U-95% 13C;U-98% 15N\n3. Residue selective labeling: U-95% 15N-Thymine\n4. Site specific labeling: 95% 13C-Ala18,\n5. Natural abundance labeling in an otherwise uniformly labeled\n   biomolecule is designated by NA: U-13C; NA-K,H\n", 
                  "examples": [
                     "2mM Ribonuclease  U-15N,13C; 50mM phosphate buffer NA; 90% H2O, 10% D2O"
                  ], 
                  "type": "string"
               }, 
               "solution_id": {
                  "description": "\nThe name (number) of the sample.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "\nBrief description of the sample providing additional information not captured by other items in the category.", 
                  "examples": [
                     "The added glycerol was used to raise the viscosity of the solution to 1.05 poisson."
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "lyophilized powder", 
                     "fibrous protein", 
                     "emulsion", 
                     "fiber", 
                     "bicelle", 
                     "gel solid", 
                     "membrane", 
                     "micelle", 
                     "solution", 
                     "reverse micelle", 
                     "gel solution", 
                     "filamentous virus", 
                     "oriented membrane film", 
                     "liposome", 
                     "single crystal", 
                     "solid", 
                     "polycrystalline powder"
                  ], 
                  "description": "\nA descriptive term for the sample that defines the general physical properties\nof the sample.", 
                  "examples": [
                     "bicelle"
                  ], 
                  "type": "string"
               }, 
               "label": {
                  "description": "\nA value that uniquely identifies this sample from the other samples listed\nin the entry.", 
                  "examples": [
                     "15N_sample"
                  ], 
                  "type": "string"
               }, 
               "solvent_system": {
                  "description": "\nThe solvent system used for this sample.", 
                  "examples": [
                     "90% H2O, 10% D2O"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "solution_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_volume_selection": {
         "minItems": 1, 
         "items": {
            "properties": {
               "details": {
                  "description": "Any additional details used for selecting volumes.", 
                  "examples": [
                     "negative monitor contrast facilitated volume picking"
                  ], 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "The value of _em_volume_selection.image_processing_id points to\n the EM_IMAGE_PROCESSING category.", 
                  "type": "string"
               }, 
               "method": {
                  "description": "The method used for selecting volumes.", 
                  "examples": [
                     "volumes picked interactively"
                  ], 
                  "type": "string"
               }, 
               "num_tomograms": {
                  "description": "The number of tomograms used in the extraction/selection", 
                  "examples": [
                     "20"
                  ], 
                  "type": "integer"
               }, 
               "reference_model": {
                  "description": "Description of reference model used for volume selection", 
                  "type": "string"
               }, 
               "num_volumes_extracted": {
                  "description": "The number of volumes selected from the projection set of images.", 
                  "examples": [
                     "840"
                  ], 
                  "type": "integer"
               }, 
               "id": {
                  "description": "Ordinal identifier\n", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "image_processing_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "symmetry_equiv": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _symmetry_equiv.id must uniquely identify\n a record in the SYMMETRY_EQUIV category.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "pos_as_xyz": {
                  "description": "Symmetry-equivalent position in the 'xyz' representation. Except\n for the space group P1, these data will be repeated in a loop.\n The format of the data item is as per International Tables for\n Crystallography Vol. A (2002). All equivalent positions should\n be entered, including those for lattice centring and a centre of\n symmetry, if present.", 
                  "examples": [
                     "-y+x,-y,1/3+z"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "database_PDB_caveat": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "A unique identifier for the PDB caveat record.", 
                  "type": "integer"
               }, 
               "text": {
                  "description": "The full text of the PDB caveat record.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_assembly_prop": {
         "minItems": 1, 
         "items": {
            "properties": {
               "value": {
                  "description": "The value of the assembly property.", 
                  "type": "string"
               }, 
               "biol_id": {
                  "description": "The identifier for the assembly used in category PDBX_STRUCT_ASSEMBLY.", 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "MORE", 
                     "SSA (A^2)", 
                     "ABSA (A^2)"
                  ], 
                  "description": "The property type for the assembly.", 
                  "type": "string"
               }
            }, 
            "required": [
               "biol_id", 
               "type"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_soln_scatter_model": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entry_fitting_list": {
                  "description": "A list of the entries used to fit the model\n to the scattering data", 
                  "examples": [
                     "PDB CODE 1HFI, 1HCC, 1HFH, 1VCC"
                  ], 
                  "type": "string"
               }, 
               "software_list": {
                  "description": "A list of the software used in the modeeling", 
                  "examples": [
                     "INSIGHT II, HOMOLOGY, DISCOVERY, BIOPOLYMER, DELPHI"
                  ], 
                  "type": "string"
               }, 
               "method": {
                  "description": "A description of the methods used in the modelling", 
                  "examples": [
                     "Constrained scattering fitting of homology models"
                  ], 
                  "type": "string"
               }, 
               "conformer_selection_criteria": {
                  "description": "A description of the conformer selection criteria\n used.", 
                  "examples": [
                     "The modelled scattering curves were assessed by calculation of the\n   RG, RSX-1 and RXS-2 values in the same Q ranges\n   used in the experimental Guinier fits. models were\n   then ranked using a goodness-of-fit R-factor\n   defined by analogy with protein crystallography\n   and based on the experimental curves in the Q range\n   extending to 1.4 nm-1."
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of any additional details concerning the experiment.", 
                  "examples": [
                     "Homology models were built for\n    the 17 SCR domains and energy minimisations were\n    performed to improve the connectivity in the fh model.\n    triantennary complex-type carbohydrate structures\n    (MAN3GLCNAC6GAL3FUC3NEUNAC1) were added to each of the\n    N-linked glycosylation sites. a library of linker peptide\n    conformations was used in domain modelling constrained\n    by the solution scattering fits. modelling with the\n    scattering data was also carried out by rotational\n    search methods. the x-ray and neutron scattering curve\n    I(Q) was calculated assuming a uniform scattering density\n    for the spheres using the debye equation as adapted to\n    spheres. x-ray curves were calculated from the hydrated\n    sphere models without corrections for wavelength spread or\n    beam divergence, while these corrections were applied for\n    the neutron curves but now using unhydrated models."
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _pdbx_soln_scatter_model.id must\n uniquely identify the sample in the category PDBX_SOLN_SCATTER_MODEL", 
                  "type": "string"
               }, 
               "scatter_id": {
                  "description": "This data item is a pointer to  _pdbx_soln_scatter.id in the  PDBX_SOLN_SCATTER category.", 
                  "type": "string"
               }, 
               "num_conformers_calculated": {
                  "description": "The number of model conformers calculated.", 
                  "type": "integer"
               }, 
               "software_author_list": {
                  "description": "A list of the software authors", 
                  "examples": [
                     "MSI"
                  ], 
                  "type": "string"
               }, 
               "representative_conformer": {
                  "description": "The index of the representative conformer among the submitted conformers for the entry", 
                  "type": "integer"
               }, 
               "num_conformers_submitted": {
                  "description": "The number of model conformers submitted in the entry", 
                  "type": "integer"
               }
            }, 
            "required": [
               "id", 
               "scatter_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MAD": {
         "properties": {
            "pdbx_fom_acentric": {
               "description": "_phasing_MAD.pdbx_fom_acentric  records the figure of merit\n using acentric data for MAD phasing.", 
               "type": "number"
            }, 
            "pdbx_reflns_acentric": {
               "description": "_phasing_MAD.pdbx_reflns_acentric records the number of\n acentric reflections for MAD phasing.", 
               "type": "integer"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "pdbx_d_res_low": {
               "description": "_phasing_MAD.pdbx_d_res_low records the lowest resolution\n for MAD phasing.", 
               "type": "number"
            }, 
            "pdbx_reflns_centric": {
               "description": "_phasing_MAD.pdbx_reflns_centric records the number of\n centric reflections for MAD phasing.", 
               "type": "integer"
            }, 
            "pdbx_fom_centric": {
               "description": "_phasing_MAD.pdbx_fom_centric  records the figure of merit\n using centric data for MAD phasing.", 
               "type": "number"
            }, 
            "pdbx_reflns": {
               "description": "_phasing_MAD.pdbx_reflns records the number of\n reflections used for MAD phasing.", 
               "type": "integer"
            }, 
            "pdbx_d_res_high": {
               "description": "_phasing_MAD.pdbx_d_res_high records the highest resolution\n for MAD phasing.", 
               "type": "number"
            }, 
            "pdbx_fom": {
               "description": "_phasing_MAD.pdbx_fom records the figure of merit\n for MAD phasing.", 
               "type": "number"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "struct_ncs_dom": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_ens_id": {
                  "description": "This is a unique identifier for a collection NCS related domains.\n This references item '_struct_ncs_ens.id'.\n", 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the structural elements that\n comprise a domain in an ensemble of domains related by\n noncrystallographic symmetry.", 
                  "examples": [
                     "The loop between residues 18 and 23 in this\n                                  domain interacts with a symmetry-related\n                                  molecule, and thus deviates significantly from\n                                  the noncrystallographic threefold."
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _struct_ncs_dom.id must uniquely identify a\n record in the STRUCT_NCS_DOM list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "pdbx_ens_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_database_related": {
         "minItems": 1, 
         "items": {
            "properties": {
               "db_id": {
                  "description": "The identifying code in the related database.", 
                  "examples": [
                     "1ABC", 
                     "BDL001"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of the related entry.", 
                  "examples": [
                     "1ABC contains the same protein complexed with Netropsin."
                  ], 
                  "type": "string"
               }, 
               "content_type": {
                  "enum": [
                     "native structure", 
                     "other", 
                     "associated NMR restraints", 
                     "split", 
                     "associated EM volume", 
                     "associated SAS data", 
                     "minimized average structure", 
                     "associated structure factors", 
                     "unspecified", 
                     "protein target sequence and/or protocol data", 
                     "ensemble", 
                     "representative structure", 
                     "derivative structure", 
                     "re-refinement", 
                     "complete structure", 
                     "other EM volume"
                  ], 
                  "description": "The identifying content type of the related entry.", 
                  "examples": [
                     "minimized average structure", 
                     "representative structure", 
                     "ensemble", 
                     "derivative structure", 
                     "native structure", 
                     "associated EM volume", 
                     "other EM volume", 
                     "associated NMR restraints", 
                     "associated structure factors", 
                     "associated SAS data", 
                     "protein target sequence and/or protocol data", 
                     "split", 
                     "re-refinement", 
                     "complete structure", 
                     "unspecified", 
                     "other"
                  ], 
                  "type": "string"
               }, 
               "db_name": {
                  "description": "The name of the database containing the related entry.", 
                  "examples": [
                     "PDB  - Protein Databank\nNDB  - Nucleic Acid Database\nBMRB - BioMagResBank\nEMDB - Electron Microscopy Database\nBMCD - Biological Macromolecule Crystallization Database\nTargetTrack - Target Registration and Protocol Database\nSASBDB - Small Angle Scattering Biological Data Bank"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "content_type", 
               "db_id", 
               "db_name"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine_analyze": {
         "minItems": 1, 
         "items": {
            "properties": {
               "Luzzati_coordinate_error_free": {
                  "description": "The estimated coordinate error obtained from the plot of\n the R value versus sin(theta)/lambda for the reflections\n treated as a test set during refinement.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810.", 
                  "type": "number"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "pdbx_Luzzati_d_res_high_obs": {
                  "description": "record the high resolution for calculating Luzzati statistics.", 
                  "type": "number"
               }, 
               "Luzzati_sigma_a_obs": {
                  "description": "The value of sigma~a~ used in constructing the Luzzati plot for\n reflections classified as observed. Details of the\n estimation of sigma~a~ can be specified in\n _refine_analyze.Luzzati_sigma_a_obs_details.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810.", 
                  "type": "number"
               }, 
               "Luzzati_d_res_low_obs": {
                  "description": "The value of the low-resolution cutoff used in\n constructing the Luzzati plot for reflections classified as\n observed.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810.", 
                  "type": "number"
               }, 
               "occupancy_sum_hydrogen": {
                  "description": "The sum of the occupancies of the hydrogen atoms in the refined\n model.", 
                  "type": "number"
               }, 
               "Luzzati_d_res_low_free": {
                  "description": "The value of the low-resolution cutoff used in constructing the\n Luzzati plot for reflections treated as a test set during\n refinement.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810.", 
                  "type": "number"
               }, 
               "Luzzati_sigma_a_free": {
                  "description": "The value of sigma~a~ used in constructing the Luzzati plot for\n the reflections treated as a test set during refinement.\n Details of the estimation of sigma~a~ can be specified\n in _refine_analyze.Luzzati_sigma_a_free_details.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810.", 
                  "type": "number"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_analyze.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "number_disordered_residues": {
                  "description": "The number of discretely disordered residues in the refined\n model.", 
                  "type": "number"
               }, 
               "occupancy_sum_non_hydrogen": {
                  "description": "The sum of the occupancies of the non-hydrogen atoms in the\n  refined model.", 
                  "type": "number"
               }, 
               "Luzzati_coordinate_error_obs": {
                  "description": "The estimated coordinate error obtained from the plot of\n the R value versus sin(theta)/lambda for reflections classified\n as observed.\n\n Ref:  Luzzati, V. (1952). Traitement statistique des erreurs\n dans la determination des structures cristallines. Acta\n Cryst. 5, 802-810.", 
                  "type": "number"
               }
            }, 
            "required": [
               "entry_id", 
               "pdbx_refine_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_conn_angle": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _pdbx_struct_conn_angle.id must uniquely identify a record in\n the PDBX_STRUCT_CONN_ANGLE list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "ptnr1_auth_asym_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_label_asym_id": {
                  "description": "A component of the identifier for partner 3 of the structure angle.\n\n This data item is a pointer to _atom_site.label_asym_id in\n the ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_label_asym_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_auth_seq_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_seq_id in\n the ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_auth_comp_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_auth_comp_id": {
                  "description": "A component of the identifier for partner 3 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_comp_id in\n the ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_label_seq_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.label_seq_id in\n the ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "ptnr3_label_comp_id": {
                  "description": "A component of the identifier for partner 3 of the structure angle.\n\n This data item is a pointer to _atom_site.label_comp_id in\n the ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_label_atom_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n\n This data item is a pointer to _atom_site.label_atom_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_label_seq_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "ptnr1_auth_comp_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_symmetry": {
                  "description": "Describes the symmetry operation that should be applied to the\n atom specified by _pdbx_struct_conn_angle.ptnr2_label* to generate the\n second partner in the structure angle.", 
                  "type": "string"
               }, 
               "ptnr3_label_atom_id": {
                  "description": "A component of the identifier for partner 3 of the structure angle.\n\n This data item is a pointer to _atom_site.label_atom_id in\n the ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_label_comp_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr1_label_atom_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n This data item is a pointer to _atom_site.label_atom_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr1_label_asym_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr1_auth_seq_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "value": {
                  "description": "Angle in degrees defined by the three sites\n _pdbx_struct_conn_angle.ptnr1_label_atom_id,\n _pdbx_struct_conn_angle.ptnr2_label_atom_id\n _pdbx_struct_conn_angle.ptnr3_label_atom_id\n", 
                  "type": "number"
               }, 
               "ptnr2_PDB_ins_code": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.pdbx_PDB_ins_code in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_symmetry": {
                  "description": "Describes the symmetry operation that should be applied to the\n atom specified by _pdbx_struct_conn_angle.ptnr3_label* to generate the\n first partner in the structure angle.", 
                  "examples": [
                     "7_645"
                  ], 
                  "type": "string"
               }, 
               "ptnr2_label_alt_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n This data item is a pointer to _atom_site.label_alt.id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_auth_asym_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_PDB_ins_code": {
                  "description": "A component of the identifier for partner 3 of the structure angle.\n\n This data item is a pointer to _atom_site.pdbx_PDB_ins_code in\n the ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr2_auth_seq_id": {
                  "description": "A component of the identifier for partner 2 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_auth_asym_id": {
                  "description": "A component of the identifier for partner 3 of the structure angle.\n\n This data item is a pointer to _atom_site.auth_asym_id in\n the ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr1_symmetry": {
                  "description": "Describes the symmetry operation that should be applied to the\n atom specified by _pdbx_struct_conn_angle.ptnr1_label* to generate the\n first partner in the structure angle.", 
                  "examples": [
                     "7_645"
                  ], 
                  "type": "string"
               }, 
               "ptnr1_PDB_ins_code": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.pdbx_PDB_ins_code in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr1_label_comp_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr1_label_seq_id": {
                  "description": "A component of the identifier for partner 1 of the structure angle.\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "ptnr1_label_alt_id": {
                  "description": "A component of the identifier for partner 1 of the structure\n angle.\n\n This data item is a pointer to _atom_site.label_alt_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "ptnr3_label_alt_id": {
                  "description": "A component of the identifier for partner 3 of the structure angle.\n\n This data item is a pointer to _atom_site.label_alt_id in\n the ATOM_SITE category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_phasing_dm": {
         "minItems": 1, 
         "items": {
            "properties": {
               "reflns": {
                  "description": "The value of _pdbx_phasing_dm.reflns  identifies the number\n of centric and acentric reflections.", 
                  "type": "integer"
               }, 
               "reflns_acentric": {
                  "description": "The value of _pdbx_phasing_dm.reflns_acentric  identifies the number\n of acentric reflections.", 
                  "type": "integer"
               }, 
               "fom_centric": {
                  "description": "The value of _pdbx_phasing_dm.fom_centric  identifies the figure of merit\n for acentric data", 
                  "type": "number"
               }, 
               "fom_acentric": {
                  "description": "The value of _pdbx_phasing_dm.fom_acentric  identifies the figure of merit\n for acentric data", 
                  "type": "number"
               }, 
               "method": {
                  "description": "The value of _pdbx_phasing_dm.method identifies the method used for\n density modification", 
                  "type": "string"
               }, 
               "entry_id": {
                  "description": "The value of _pdbx_phasing_dm.entry_id identifies the data block.", 
                  "type": "string"
               }, 
               "mask_type": {
                  "description": "The value of _pdbx_phasing_dm.mask_type  identifies the type of mask used for\n density modification", 
                  "type": "string"
               }, 
               "delta_phi_initial": {
                  "description": "The value of _pdbx_phasing_dm.delta_phi_initial  identifies phase difference\n before density modification", 
                  "type": "number"
               }, 
               "fom": {
                  "description": "The value of _pdbx_phasing_dm.fom identifies the figure of merit\n for all the data", 
                  "type": "number"
               }, 
               "reflns_centric": {
                  "description": "The value of _pdbx_phasing_dm.reflns_centric  identifies the number\n of centric reflections.", 
                  "type": "integer"
               }, 
               "delta_phi_final": {
                  "description": "The value of _pdbx_phasing_dm.delta_phi_final  identifies phase difference\n after density modification", 
                  "type": "number"
               }
            }, 
            "required": [
               "entry_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_3d_crystal_entity": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "Unique key for the em_3d_crystal_entity category.", 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.", 
                  "type": "string"
               }, 
               "length_b": {
                  "description": "Unit-cell length b in Angstroms.", 
                  "type": "number"
               }, 
               "length_a": {
                  "description": "Unit-cell length a in Angstroms.", 
                  "type": "number"
               }, 
               "angle_gamma": {
                  "description": "Unit-cell angle gamma in degrees.", 
                  "type": "number"
               }, 
               "angle_alpha": {
                  "description": "Unit-cell angle alpha in degrees.", 
                  "type": "number"
               }, 
               "space_group_num": {
                  "description": "Space group number.", 
                  "type": "integer"
               }, 
               "space_group_name": {
                  "description": "Space group name.", 
                  "examples": [
                     "P 1", 
                     "P 21 21 2", 
                     "I 4", 
                     "H 3"
                  ], 
                  "type": "string"
               }, 
               "length_c": {
                  "description": "Unit-cell length c in Angstroms.", 
                  "type": "number"
               }, 
               "angle_beta": {
                  "description": "Unit-cell angle beta in degrees.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id", 
               "image_processing_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_coordinate_model": {
         "minItems": 1, 
         "items": {
            "properties": {
               "asym_id": {
                  "description": "A reference to _struct_asym.id.", 
                  "examples": [
                     "1", 
                     "A"
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "P ATOMS ONLY", 
                     "CA ATOMS ONLY"
                  ], 
                  "description": "A classification of the composition of the coordinate model.", 
                  "examples": [
                     "CA ATOMS ONLY", 
                     "P ATOMS ONLY"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "asym_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MAD_clust": {
         "minItems": 1, 
         "items": {
            "properties": {
               "expt_id": {
                  "description": "This data item is a pointer to _phasing_MAD_expt.id in the\n PHASING_MAD_EXPT category.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _phasing_MAD_clust.id must, together with\n _phasing_MAD_clust.expt_id, uniquely identify a record in the\n PHASING_MAD_CLUST list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }
            }, 
            "required": [
               "expt_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine_ls_restr": {
         "minItems": 1, 
         "items": {
            "properties": {
               "dev_ideal_target": {
                  "description": "For the given parameter type, the target root-mean-square\n deviation between the ideal values used as restraints in the\n least-squares refinement and the values obtained by refinement.", 
                  "type": "number"
               }, 
               "weight": {
                  "description": "The weighting value applied to this type of restraint in\n the least-squares refinement.", 
                  "type": "number"
               }, 
               "dev_ideal": {
                  "description": "For the given parameter type, the root-mean-square deviation\n between the ideal values used as restraints in the least-squares\n refinement and the values obtained by refinement. For instance,\n bond distances may deviate by 0.018 \\%A (r.m.s.) from ideal\n values in the current model.", 
                  "type": "number"
               }, 
               "type": {
                  "description": "The type of the parameter being restrained.\n Explicit sets of data values are provided for the programs\n PROTIN/PROLSQ (beginning with p_) and RESTRAIN (beginning with\n RESTRAIN_). As computer programs change, these data values\n are given as examples, not as an enumeration list. Computer\n programs that convert a data block to a refinement table will\n expect the exact form of the data values given here to be used.", 
                  "examples": [
                     "p_bond_d", 
                     "p_angle_d", 
                     "p_planar_d", 
                     "p_xhbond_d", 
                     "p_xhangle_d", 
                     "p_hydrog_d", 
                     "p_special_d", 
                     "p_planar", 
                     "p_chiral", 
                     "p_singtor_nbd", 
                     "p_multtor_nbd", 
                     "p_xyhbond_nbd", 
                     "p_xhyhbond_nbd", 
                     "p_special_tor", 
                     "p_planar_tor", 
                     "p_staggered_tor", 
                     "p_orthonormal_tor", 
                     "p_mcbond_it", 
                     "p_mcangle_it", 
                     "p_scbond_it", 
                     "p_scangle_it", 
                     "p_xhbond_it", 
                     "p_xhangle_it", 
                     "p_special_it", 
                     "RESTRAIN_Distances < 2.12", 
                     "RESTRAIN_Distances 2.12 < D < 2.625", 
                     "RESTRAIN_Distances > 2.625", 
                     "RESTRAIN_Peptide Planes", 
                     "RESTRAIN_Ring and other planes", 
                     "RESTRAIN_rms diffs for Uiso atoms at dist 1.2-1.4", 
                     "RESTRAIN_rms diffs for Uiso atoms at dist 1.4-1.6", 
                     "RESTRAIN_rms diffs for Uiso atoms at dist 1.8-2.0", 
                     "RESTRAIN_rms diffs for Uiso atoms at dist 2.0-2.2", 
                     "RESTRAIN_rms diffs for Uiso atoms at dist 2.2-2.4", 
                     "RESTRAIN_rms diffs for Uiso atoms at dist >2.4"
                  ], 
                  "type": "string"
               }, 
               "number": {
                  "description": "The number of parameters of this type subjected to restraint in\n least-squares refinement.", 
                  "type": "integer"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_ls_restr.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "pdbx_restraint_function": {
                  "description": "The functional form of the restraint function used in the least-squares\n refinement.", 
                  "examples": [
                     "SINUSOIDAL", 
                     "HARMONIC", 
                     "SEMIHARMONIC"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "pdbx_refine_id", 
               "type"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "entity_src_nat": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_src_id": {
                  "description": "This data item is an ordinal identifier for entity_src_nat data records.", 
                  "type": "integer"
               }, 
               "common_name": {
                  "description": "The common name of the organism from which the entity\n was isolated.", 
                  "examples": [
                     "man", 
                     "yeast", 
                     "bacteria"
                  ], 
                  "type": "string"
               }, 
               "pdbx_end_seq_num": {
                  "description": "The ending polymer sequence position for the polymer section corresponding\n to this source.\n\n A reference to the sequence position in the entity_poly category.", 
                  "type": "integer"
               }, 
               "pdbx_alt_source_flag": {
                  "enum": [
                     "sample", 
                     "model"
                  ], 
                  "description": "This data item identifies cases in which an alternative source\n modeled.", 
                  "type": "string"
               }, 
               "pdbx_cell": {
                  "description": "A particular cell type.", 
                  "examples": [
                     "BHK-21"
                  ], 
                  "type": "string"
               }, 
               "genus": {
                  "description": "The genus of the organism from which the entity was isolated.", 
                  "examples": [
                     "Homo", 
                     "Saccharomyces", 
                     "Escherichia"
                  ], 
                  "type": "string"
               }, 
               "pdbx_atcc": {
                  "description": "Americal Tissue Culture Collection number.", 
                  "examples": [
                     "6051"
                  ], 
                  "type": "string"
               }, 
               "pdbx_organism_scientific": {
                  "description": "Scientific name of the organism of the natural source.", 
                  "examples": [
                     "BOS TAURUS", 
                     "SUS SCROFA", 
                     "ASPERGILLUS ORYZAE"
                  ], 
                  "type": "string"
               }, 
               "pdbx_ncbi_taxonomy_id": {
                  "description": "NCBI Taxonomy identifier for the source organism.\n\n Reference:\n\n Wheeler DL, Chappey C, Lash AE, Leipe DD, Madden TL, Schuler GD,\n Tatusova TA, Rapp BA (2000). Database resources of the National\n Center for Biotechnology Information. Nucleic Acids Res 2000 Jan\n 1;28(1):10-4\n\n Benson DA, Karsch-Mizrachi I, Lipman DJ, Ostell J, Rapp BA,\n Wheeler DL (2000). GenBank. Nucleic Acids Res 2000 Jan 1;28(1):15-18.\n", 
                  "type": "string"
               }, 
               "pdbx_secretion": {
                  "description": "Identifies the secretion from which the molecule was isolated.", 
                  "examples": [
                     "saliva", 
                     "urine", 
                     "venom"
                  ], 
                  "type": "string"
               }, 
               "strain": {
                  "description": "The strain of the organism from which the entity was isolated.", 
                  "examples": [
                     "DH5a", 
                     "BMH 71-18"
                  ], 
                  "type": "string"
               }, 
               "pdbx_plasmid_name": {
                  "description": "The plasmid containing the gene.", 
                  "examples": [
                     "pB322"
                  ], 
                  "type": "string"
               }, 
               "pdbx_organelle": {
                  "description": "Organized structure within cell.", 
                  "examples": [
                     "MITOCHONDRIA"
                  ], 
                  "type": "string"
               }, 
               "pdbx_beg_seq_num": {
                  "description": "The beginning polymer sequence position for the polymer section corresponding\n to this source.\n\n A reference to the sequence position in the entity_poly category.", 
                  "type": "integer"
               }, 
               "details": {
                  "description": "A description of special aspects of the organism from which the\n entity was isolated.", 
                  "type": "string"
               }, 
               "tissue": {
                  "description": "The tissue of the organism from which the entity was isolated.", 
                  "examples": [
                     "heart", 
                     "liver", 
                     "eye lens"
                  ], 
                  "type": "string"
               }, 
               "pdbx_variant": {
                  "description": "Identifies the variant.", 
                  "type": "string"
               }, 
               "pdbx_cellular_location": {
                  "description": "Identifies the location inside (or outside) the cell.", 
                  "type": "string"
               }, 
               "pdbx_plasmid_details": {
                  "description": "Details about the plasmid.", 
                  "examples": [
                     "PLC28 DERIVATIVE"
                  ], 
                  "type": "string"
               }, 
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "pdbx_organ": {
                  "description": "Organized group of tissues that carries on a specialized function.", 
                  "examples": [
                     "KIDNEY"
                  ], 
                  "type": "string"
               }, 
               "pdbx_fragment": {
                  "description": "A domain or fragment of the molecule.", 
                  "type": "string"
               }, 
               "pdbx_cell_line": {
                  "description": "The specific line of cells.", 
                  "examples": [
                     "HELA"
                  ], 
                  "type": "string"
               }, 
               "tissue_fraction": {
                  "description": "The subcellular fraction of the tissue of the organism from\n which the entity was isolated.", 
                  "examples": [
                     "mitochondria", 
                     "nucleus", 
                     "membrane"
                  ], 
                  "type": "string"
               }, 
               "species": {
                  "description": "The species of the organism from which the entity was isolated.", 
                  "examples": [
                     "sapiens", 
                     "cerevisiae", 
                     "coli"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_id", 
               "pdbx_src_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "entity": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _entity.id must uniquely identify a record in the\n ENTITY list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "formula_weight": {
                  "description": "Formula mass in daltons of the entity.", 
                  "type": "number"
               }, 
               "pdbx_fragment": {
                  "description": "Entity fragment description(s).", 
                  "examples": [
                     "KLENOW FRAGMENT", 
                     "REPLICASE OPERATOR HAIRPIN", 
                     "C-TERMINAL DOMAIN"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the entity.", 
                  "type": "string"
               }, 
               "pdbx_ec": {
                  "description": "Enzyme Commission (EC) number(s)", 
                  "examples": [
                     "2.7.7.7"
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "non-polymer", 
                     "macrolide", 
                     "polymer", 
                     "branched", 
                     "water"
                  ], 
                  "description": "Defines the type of the entity.\n\n Polymer entities are expected to have corresponding\n ENTITY_POLY and associated entries.\n\n Non-polymer entities are expected to have corresponding\n CHEM_COMP and associated entries.\n\n Water entities are not expected to have corresponding\n entries in the ENTITY category.", 
                  "type": "string"
               }, 
               "pdbx_mutation": {
                  "description": "Details about any entity mutation(s).", 
                  "examples": [
                     "Y31H", 
                     "DEL(298-323)"
                  ], 
                  "type": "string"
               }, 
               "src_method": {
                  "enum": [
                     "nat", 
                     "man", 
                     "syn"
                  ], 
                  "description": "The method by which the sample for the entity was produced.\n Entities isolated directly from natural sources (tissues, soil\n samples etc.) are expected to have further information in the\n ENTITY_SRC_NAT category. Entities isolated from genetically\n manipulated sources are expected to have further information in\n the ENTITY_SRC_GEN category.", 
                  "type": "string"
               }, 
               "pdbx_description": {
                  "description": "A description of the entity.\n\n Corresponds to the compound name in the PDB format.", 
                  "examples": [
                     "DNA (5'-D(*GP*(CH3)CP*GP*(CH3)CP*GP*C)-3')", 
                     "PROFLAVINE", 
                     "PROTEIN (DEOXYRIBONUCLEASE I (E.C.3.1.21.1))"
                  ], 
                  "type": "string"
               }, 
               "pdbx_number_of_molecules": {
                  "description": "A place holder for the number of molecules of the entity in\n the entry.", 
                  "examples": [
                     "1.0", 
                     "2.0", 
                     "3.0"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_entity_assembly": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id_list": {
                  "uniqueItems": false, 
                  "items": {
                     "description": "macromolecules associated with this component, if defined\n as comma separated list of entity ids (integers).", 
                     "type": "string"
                  }, 
                  "type": "array"
               }, 
               "parent_id": {
                  "description": "The parent of this assembly.\n This data item is an internal category pointer to _em_entity_assembly.id.\n By convention, the full assembly (top of hierarchy) is assigned parent id 0 (zero).", 
                  "type": "integer"
               }, 
               "details": {
                  "description": "Additional details about the component.", 
                  "examples": [
                     "Fab fragment generated by proteolytic cleavage of LA2 IgG antibody."
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "description": "A description of types of components of the\n assembly of the biological structure.", 
                  "type": "string"
               }, 
               "oligomeric_details": {
                  "description": "oligomeric details", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _em_entity_assembly.id identifies\n one component of the complex.", 
                  "type": "string"
               }, 
               "source": {
                  "enum": [
                     "MULTIPLE SOURCES", 
                     "RECOMBINANT", 
                     "NATURAL"
                  ], 
                  "description": "The assembly type.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "Name of this component in the observed assembly.", 
                  "examples": [
                     "Ternary complex of alpha-tubulin with tubulin folding cofactors TBCE and TBCB", 
                     "80S Ribosome bound to emetine", 
                     "messenger RNA", 
                     "initiation factor 2", 
                     "GroEL", 
                     "antibody Fab fragment"
                  ], 
                  "type": "string"
               }, 
               "synonym": {
                  "description": "Alternative name of the component.", 
                  "examples": [
                     "FADV-1"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "atom_sites_footnote": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "A code that identifies the footnote.", 
                  "examples": [
                     "a", 
                     "b", 
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "text": {
                  "description": "The text of the footnote. Footnotes are used to describe\n an atom site or a group of atom sites in the ATOM_SITE list.\n\n For example, footnotes may be used to indicate atoms for which\n the electron density is very weak, or atoms for which static\n disorder has been modelled.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_exptl_sample": {
         "minItems": 1, 
         "items": {
            "properties": {
               "component": {
                  "description": "The name of each component in the sample", 
                  "examples": [
                     "ribonuclease", 
                     "DNA strand 1", 
                     "TRIS buffer", 
                     "sodium chloride", 
                     "H2O", 
                     "D2O"
                  ], 
                  "type": "string"
               }, 
               "concentration_units": {
                  "enum": [
                     "na", 
                     "g/L", 
                     "pM", 
                     "ug/mL", 
                     "w/w", 
                     "w/v", 
                     "mg/uL", 
                     "saturated", 
                     "uM", 
                     "ug/uL", 
                     "v/v", 
                     "M", 
                     "% v/v", 
                     "mM", 
                     "mg/L", 
                     "% w/w", 
                     "%", 
                     "mg/mL", 
                     "% w/v", 
                     "nM"
                  ], 
                  "description": "The concentration units of the component.", 
                  "examples": [
                     "mg/mL for mg per milliliter", 
                     "mM for millimolar", 
                     "% for percent by volume"
                  ], 
                  "type": "string"
               }, 
               "solution_id": {
                  "description": "The name (number) of the sample.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }, 
               "concentration_range": {
                  "description": "The concentration range for the component.", 
                  "examples": [
                     "2.0-2.2", 
                     "2.7-3.5", 
                     "0.01-0.05"
                  ], 
                  "type": "string"
               }, 
               "concentration": {
                  "description": "The concentration value of the component.", 
                  "examples": [
                     "2.0", 
                     "2.7", 
                     "0.01"
                  ], 
                  "type": "number"
               }, 
               "isotopic_labeling": {
                  "description": "The isotopic composition of each component, including\n the % labeling level, if known. For example:\n 1. Uniform (random) labeling with 15N: U-15N\n 2. Uniform (random) labeling with 13C, 15N at known labeling\n  levels: U-95% 13C;U-98% 15N\n 3. Residue selective labeling: U-95% 15N-Thymine\n 4. Site specific labeling: 95% 13C-Ala18,\n 5. Natural abundance labeling in an otherwise uniformly labled\n   biomolecule is designated by NA: U-13C; NA-K,H", 
                  "examples": [
                     "U-13C,15N", 
                     "U-2H"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "component", 
               "solution_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_molecule": {
         "minItems": 1, 
         "items": {
            "properties": {
               "prd_id": {
                  "description": "The value of _pdbx_molecule.prd_id is the PDB accession code for this\n reference molecule.", 
                  "type": "string"
               }, 
               "asym_id": {
                  "description": "A reference to _struct_asym.id in the STRUCT_ASYM category.", 
                  "examples": [
                     "A", 
                     "B"
                  ], 
                  "type": "string"
               }, 
               "instance_id": {
                  "description": "              The value of _pdbx_molecule.instance_id is identifies a particular molecule\n\t       in the molecule list.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "asym_id", 
               "instance_id", 
               "prd_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_exptl_crystal_grow_comp": {
         "minItems": 1, 
         "items": {
            "properties": {
               "sol_id": {
                  "description": "An identifier for the solution to which the given solution\n component belongs.", 
                  "type": "string"
               }, 
               "crystal_id": {
                  "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category.", 
                  "type": "string"
               }, 
               "comp_id": {
                  "description": "The value of _exptl_crystal_grow_comp.comp_id must uniquely identify\n each item in the PDBX_EXPTL_CRYSTAL_GROW_COMP list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "conc_units": {
                  "description": "The concentration units for the solution component.", 
                  "examples": [
                     "millimolar", 
                     "percent_weight_by_volume", 
                     "milligrams_per_milliliter"
                  ], 
                  "type": "string"
               }, 
               "conc": {
                  "description": "The concentration value of the solution component.", 
                  "examples": [
                     "200.", 
                     "0.1"
                  ], 
                  "type": "number"
               }, 
               "comp_name": {
                  "description": "A common name for the component of the solution.", 
                  "examples": [
                     "protein in buffer", 
                     "acetic acid"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "comp_id", 
               "crystal_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_biol_keywords": {
         "minItems": 1, 
         "items": {
            "properties": {
               "biol_id": {
                  "description": "This data item is a pointer to _struct_biol.id in the STRUCT_BIOL\n category.", 
                  "type": "string"
               }, 
               "text": {
                  "description": "Keywords describing this biological entity.", 
                  "examples": [
                     "antibody", 
                     "antigen", 
                     "enzyme", 
                     "cytokine", 
                     "tRNA"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "biol_id", 
               "text"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_point_symmetry": {
         "properties": {
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "circular_symmetry": {
               "description": "Rotational n-fold C and D point symmetry.", 
               "type": "integer"
            }, 
            "Schoenflies_symbol": {
               "enum": [
                  "O", 
                  "D", 
                  "T", 
                  "C", 
                  "I"
               ], 
               "description": "The Schoenflies point symmetry symbol.", 
               "type": "string"
            }, 
            "H_M_notation": {
               "description": "The Hermann-Mauguin notation for this point symmetry group.", 
               "examples": [
                  "I -> 532", 
                  "O -> 432", 
                  "T -> 23", 
                  "Cn -> n (e.g. C5 -> 5)", 
                  "Dn -> n22 (n even)", 
                  "Dn -> n2  (n odd)"
               ], 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_poly_seq_scheme": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "Pointer to _entity.id.", 
                  "type": "string"
               }, 
               "auth_mon_id": {
                  "description": "Author provided residue identifier.   This value may differ from the PDB residue\n identifier and may not correspond to residue identifier within the coordinate records.", 
                  "type": "string"
               }, 
               "asym_id": {
                  "description": "Pointer to _atom_site.label_asym_id.", 
                  "examples": [
                     "1", 
                     "A", 
                     "2B3"
                  ], 
                  "type": "string"
               }, 
               "pdb_seq_num": {
                  "description": "PDB residue number.", 
                  "type": "string"
               }, 
               "pdb_mon_id": {
                  "description": "PDB residue identifier.", 
                  "type": "string"
               }, 
               "ndb_seq_num": {
                  "description": "NDB residue number.", 
                  "type": "integer"
               }, 
               "hetero": {
                  "enum": [
                     "yes", 
                     "n", 
                     "no", 
                     "y"
                  ], 
                  "description": "Pointer to _entity_poly_seq.hetero", 
                  "type": "string"
               }, 
               "mon_id": {
                  "description": "Pointer to _entity_poly_seq.mon_id.", 
                  "type": "string"
               }, 
               "pdb_strand_id": {
                  "description": "PDB strand/chain id.", 
                  "type": "string"
               }, 
               "pdb_ins_code": {
                  "description": "PDB insertion code.", 
                  "type": "string"
               }, 
               "seq_id": {
                  "description": "Pointer to _entity_poly_seq.num", 
                  "type": "integer"
               }, 
               "auth_seq_num": {
                  "description": "Author provided residue number.   This value may differ from the PDB residue\n number and may not correspond to residue numbering within the coordinate records.\n", 
                  "type": "string"
               }
            }, 
            "required": [
               "asym_id", 
               "entity_id", 
               "mon_id", 
               "seq_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "rcsb_load_status": {
         "properties": {
            "datablock_name": {
               "description": "Source data block containing the loaded data set", 
               "type": "string"
            }, 
            "load_date": {
               "format": "date-time", 
               "description": "Time stamp of data load", 
               "type": "string"
            }, 
            "locator": {
               "description": "Locator of file containing loaded data", 
               "type": "string"
            }
         }, 
         "required": [
            "datablock_name"
         ], 
         "type": "object"
      }, 
      "em_single_particle_entity": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "Unique category label.", 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "pointer to _em_image_processing.id.", 
                  "type": "string"
               }, 
               "point_symmetry": {
                  "description": "Point symmetry symbol, either Cn, Dn, T, O, or I", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "image_processing_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "diffrn_detector": {
         "minItems": 1, 
         "items": {
            "properties": {
               "detector": {
                  "description": "The general class of the radiation detector.", 
                  "examples": [
                     "photographic film", 
                     "scintillation counter", 
                     "CCD plate", 
                     "BF~3~ counter"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the radiation detector.", 
                  "type": "string"
               }, 
               "diffrn_id": {
                  "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category.", 
                  "type": "string"
               }, 
               "pdbx_collection_date": {
                  "format": "date-time", 
                  "description": "The date of data collection.", 
                  "examples": [
                     "1996-12-25"
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "description": "The make, model or name of the detector device used.", 
                  "type": "string"
               }
            }, 
            "required": [
               "diffrn_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_entity_assembly_molwt": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_assembly_id": {
                  "description": "A reference to  _em_entity_assembly.id which uniquely identifies\n one assembly or assembly component of the imaged sample.", 
                  "type": "string"
               }, 
               "experimental_flag": {
                  "enum": [
                     "YES", 
                     "NO"
                  ], 
                  "description": "Identifies whether the given molecular weight was derived experimentally.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "Ordinal key for the em_entity_assembly_molwt category.", 
                  "type": "string"
               }, 
               "units": {
                  "enum": [
                     "MEGADALTONS", 
                     "KILODALTONS/NANOMETER"
                  ], 
                  "description": "Molecular weight units.", 
                  "type": "string"
               }, 
               "value": {
                  "description": "The molecular weight of the assembly component.", 
                  "examples": [
                     "0.53"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "entity_assembly_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_diffraction_stats": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "Identifier for this category", 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "Pointer to _em_image_processing.id", 
                  "type": "string"
               }, 
               "num_intensities_measured": {
                  "description": "Total number of diffraction intensities measured (before averaging)", 
                  "examples": [
                     "1590"
                  ], 
                  "type": "integer"
               }, 
               "fourier_space_coverage": {
                  "description": "Completeness of the structure factor data within the defined space group\n at the reported resolution (percent).", 
                  "examples": [
                     "89.3"
                  ], 
                  "type": "number"
               }, 
               "phase_error_rejection_criteria": {
                  "description": "Criteria used to reject phases", 
                  "examples": [
                     "Structure factors with phase errors higher than 20 degrees were omitted from refinement"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any addition details about the structure factor measurements", 
                  "examples": [
                     "Phases were obtained from micrograph images of the 2D crystals"
                  ], 
                  "type": "string"
               }, 
               "r_merge": {
                  "description": "Rmerge value (percent)", 
                  "examples": [
                     "19.8"
                  ], 
                  "type": "number"
               }, 
               "overall_phase_residual": {
                  "description": "Overall phase residual in degrees", 
                  "examples": [
                     "17.5"
                  ], 
                  "type": "number"
               }, 
               "r_sym": {
                  "description": "Rsym value (percent)", 
                  "examples": [
                     "24.4"
                  ], 
                  "type": "number"
               }, 
               "num_structure_factors": {
                  "description": "Number of structure factors obtained (merged amplitudes + phases)", 
                  "examples": [
                     "325"
                  ], 
                  "type": "integer"
               }, 
               "overall_phase_error": {
                  "description": "Overall phase error in degrees", 
                  "examples": [
                     "17.5"
                  ], 
                  "type": "number"
               }, 
               "high_resolution": {
                  "description": "High resolution limit of the structure factor data, in Angstroms", 
                  "examples": [
                     "7.5"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_software": {
         "minItems": 1, 
         "items": {
            "properties": {
               "version": {
                  "description": "The version of the software.", 
                  "examples": [
                     "9.03", 
                     "2.1"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "Unique identifier for each software description.", 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Details about the software used.", 
                  "examples": [
                     "EMAN2 e2boxer.py was used to automatically select particle images."
                  ], 
                  "type": "string"
               }, 
               "imaging_id": {
                  "description": "pointer to _em_imaging.id in the EM_IMAGING category.", 
                  "type": "string"
               }, 
               "category": {
                  "enum": [
                     "CRYSTALLOGRAPHY MERGING", 
                     "OTHER", 
                     "DIFFRACTION INDEXING", 
                     "MOLECULAR REPLACEMENT", 
                     "FINAL EULER ASSIGNMENT", 
                     "MASKING", 
                     "CLASSIFICATION", 
                     "MODEL FITTING", 
                     "VOLUME SELECTION", 
                     "LAYERLINE INDEXING", 
                     "RECONSTRUCTION", 
                     "IMAGE ACQUISITION", 
                     "SERIES ALIGNMENT", 
                     "CTF CORRECTION", 
                     "SYMMETRY DETERMINATION", 
                     "PARTICLE SELECTION", 
                     "MODEL REFINEMENT", 
                     "INITIAL EULER ASSIGNMENT", 
                     "LATTICE DISTORTION CORRECTION"
                  ], 
                  "description": "The purpose of the software.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "The name of the software package used, e.g., RELION.  Depositors are strongly\n  encouraged to provide a value in this field.", 
                  "examples": [
                     "EMAN", 
                     "Imagic", 
                     "Spider", 
                     "Bsoft", 
                     "UCSF-Chimera"
                  ], 
                  "type": "string"
               }, 
               "fitting_id": {
                  "description": "pointer to _em_3d_fitting.id in the EM_3D_FITTING category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "exptl_crystal": {
         "minItems": 1, 
         "items": {
            "properties": {
               "colour": {
                  "description": "The colour of the crystal.", 
                  "examples": [
                     "dark green"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _exptl_crystal.id must uniquely identify a record in\n the EXPTL_CRYSTAL list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "density_percent_sol": {
                  "description": "Density value P calculated from the crystal cell and contents,\n expressed as per cent solvent.\n\n P = 1 - (1.23 N MMass) / V\n\n N     = the number of molecules in the unit cell\n MMass = the molecular mass of each molecule (gm/mole)\n V     = the volume of the unit cell (A^3^)\n 1.23  = a conversion factor evaluated as:\n\n         (0.74 cm^3^/g) (10^24^ A^3^/cm^3^)\n         --------------------------------------\n              (6.02*10^23^) molecules/mole\n\n         where 0.74 is an assumed value for the partial specific\n         volume of the molecule", 
                  "type": "number"
               }, 
               "density_meas": {
                  "description": "Density values measured using standard chemical and physical\n methods. The units are megagrams per cubic metre (grams per\n cubic centimetre).", 
                  "type": "number"
               }, 
               "pdbx_mosaicity_esd": {
                  "description": "The uncertainty in the mosaicity estimate for the crystal.", 
                  "type": "number"
               }, 
               "description": {
                  "description": "A description of the quality and habit of the crystal.\n The crystal dimensions should not normally be reported here;\n use instead the specific items in the EXPTL_CRYSTAL category\n relating to size for the gross dimensions of the crystal and\n data items in the EXPTL_CRYSTAL_FACE category to describe the\n relationship between individual faces.", 
                  "type": "string"
               }, 
               "density_Matthews": {
                  "description": "The density of the crystal, expressed as the ratio of the\n volume of the asymmetric unit to the molecular mass of a\n monomer of the structure, in units of angstroms^3^ per dalton.\n\n Ref: Matthews, B. W. (1968). J. Mol. Biol. 33, 491-497.", 
                  "type": "number"
               }, 
               "preparation": {
                  "description": "Details of crystal growth and preparation of the crystal (e.g.\n mounting) prior to the intensity measurements.", 
                  "examples": [
                     "mounted in an argon-filled quartz capillary"
                  ], 
                  "type": "string"
               }, 
               "pdbx_mosaicity": {
                  "description": "\nThe of the distribution of mis-orientation angles specified in degrees\nof all the unit cells in the crystal. Lower mosaicity indicates better\nordered crystals.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "audit_author": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_ordinal": {
                  "description": "This data item defines the order of the author's name in the\n list of audit authors.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "integer"
               }, 
               "name": {
                  "description": "The name of an author of this data block. If there are multiple\n authors, _audit_author.name is looped with _audit_author.address.\n The family name(s), followed by a comma and including any\n dynastic components, precedes the first name(s) or initial(s).", 
                  "examples": [
                     "Bleary, Percival R.", 
                     "O'Neil, F.K.", 
                     "Van den Bossche, G.", 
                     "Yang, D.-L.", 
                     "Simonov, Yu.A"
                  ], 
                  "type": "string"
               }, 
               "identifier_ORCID": {
                  "description": "The Open Researcher and Contributor ID (ORCID).", 
                  "examples": [
                     "0000-0002-6686-5475"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "pdbx_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_ncs_oper": {
         "minItems": 1, 
         "items": {
            "properties": {
               "matrix_1_2": {
                  "description": "The [1][2] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "matrix_1_3": {
                  "description": "The [1][3] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "matrix_1_1": {
                  "description": "The [1][1] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "code": {
                  "enum": [
                     "generate", 
                     "given"
                  ], 
                  "description": "A code to indicate whether this operator describes a\n relationship between coordinates all of which are given in the\n data block (in which case the value of code is 'given'), or\n whether the operator is used to generate new coordinates from\n those that are given in the data block (in which case the value\n of code is 'generate').", 
                  "type": "string"
               }, 
               "matrix_2_2": {
                  "description": "The [2][2] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "details": {
                  "description": "A description of special aspects of the noncrystallographic\n symmetry operator.", 
                  "examples": [
                     "The operation is given as a precise threefold\n                                  rotation, despite the fact the best rms\n                                  fit between domain 1 and domain 2 yields a\n                                  rotation of 119.7 degrees and a translation\n                                  of 0.13 angstroms."
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _struct_ncs_oper.id must uniquely identify a\n record in the STRUCT_NCS_OPER list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "matrix_2_1": {
                  "description": "The [2][1] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "vector_3": {
                  "description": "The [3] element of the three-element vector component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "matrix_2_3": {
                  "description": "The [2][3] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "vector_1": {
                  "description": "The [1] element of the three-element vector component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "vector_2": {
                  "description": "The [2] element of the three-element vector component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "matrix_3_1": {
                  "description": "The [3][1] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "matrix_3_2": {
                  "description": "The [3][2] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }, 
               "matrix_3_3": {
                  "description": "The [3][3] element of the 3x3 matrix component of a\n noncrystallographic symmetry operation.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "diffrn": {
         "minItems": 1, 
         "items": {
            "properties": {
               "crystal_id": {
                  "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "This data item uniquely identifies a set of diffraction\n data.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Special details of the diffraction measurement process. Should\n include information about source instability, crystal motion,\n degradation and so on.", 
                  "type": "string"
               }, 
               "ambient_pressure": {
                  "description": "The mean hydrostatic pressure in kilopascals at which the\n intensities were measured.", 
                  "type": "number"
               }, 
               "crystal_support": {
                  "description": "The physical device used to support the crystal during data\n collection.", 
                  "examples": [
                     "glass capillary", 
                     "quartz capillary", 
                     "fiber", 
                     "metal loop"
                  ], 
                  "type": "string"
               }, 
               "ambient_temp": {
                  "description": "The mean temperature in kelvins at which the intensities were\n measured.", 
                  "type": "number"
               }, 
               "ambient_temp_details": {
                  "description": "A description of special aspects of temperature control during\n data collection.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_refine": {
         "minItems": 1, 
         "items": {
            "properties": {
               "R_factor_all_no_cutoff": {
                  "description": "       R-value (all reflections, no cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "type": "number"
               }, 
               "R_factor_obs_no_cutoff": {
                  "description": "       R-value (working set reflections, no cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "type": "number"
               }, 
               "R_factor_obs_4sig_cutoff": {
                  "description": "       R-value (working set, 4 sigma cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "examples": [
                     "0.169"
                  ], 
                  "type": "number"
               }, 
               "free_R_factor_no_cutoff": {
                  "description": "           Free R-value (no cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "type": "number"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "free_R_val_test_set_size_perc_no_cutoff": {
                  "description": "       Free R-value test set size (in percent, no cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "type": "number"
               }, 
               "free_R_val_test_set_size_perc_4sig_cutoff": {
                  "description": "Free R-value test set size (in percent, 4 sigma cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "examples": [
                     "1.29"
                  ], 
                  "type": "number"
               }, 
               "number_reflns_obs_4sig_cutoff": {
                  "description": "      Total number of reflections (4 sigma cutoff).\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "examples": [
                     "1263"
                  ], 
                  "type": "number"
               }, 
               "free_R_error_no_cutoff": {
                  "description": "Free R-value error(no cutoff)", 
                  "type": "number"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _pdbx_refine.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "free_R_val_test_set_ct_4sig_cutoff": {
                  "description": "   Free R-value test set count (4 sigma cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "examples": [
                     "164"
                  ], 
                  "type": "number"
               }, 
               "R_factor_all_4sig_cutoff": {
                  "description": "       R-value (all reflections, 4 sigma cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "examples": [
                     "0.174"
                  ], 
                  "type": "number"
               }, 
               "number_reflns_obs_no_cutoff": {
                  "description": "       Total number of reflections (no cutoff).\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "type": "number"
               }, 
               "free_R_factor_4sig_cutoff": {
                  "description": "        R free value (4 sigma cutoff).\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "examples": [
                     "0.216"
                  ], 
                  "type": "number"
               }, 
               "free_R_val_test_set_ct_no_cutoff": {
                  "description": "       Free R-value test set count (no cutoff)\nPlaceholder for PDB mapping of SHELXL refinement data.", 
                  "type": "number"
               }
            }, 
            "required": [
               "entry_id", 
               "pdbx_refine_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "atom_type": {
         "minItems": 1, 
         "items": {
            "properties": {
               "scat_Cromer_Mann_b4": {
                  "description": "The Cromer-Mann scattering-factor coefficient b4 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "pdbx_scat_Cromer_Mann_b5": {
                  "description": "Scattering-factor coefficient b5, used to calculate electron\n elastic atomic scattering factors for the defined atom type.\n\n Electron Elastic Scattering Factors Ref:\n     International Tables for X-ray Crystallography (2006).\n     Vol. C, Table 4.3.2.2, pp. 282-283.\n\n Cromer_Mann equation Ref:\n     International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.\n", 
                  "type": "number"
               }, 
               "scat_Cromer_Mann_a4": {
                  "description": "The Cromer-Mann scattering-factor coefficient a4 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "scat_Cromer_Mann_a1": {
                  "description": "The Cromer-Mann scattering-factor coefficient a1 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "scat_Cromer_Mann_a2": {
                  "description": "The Cromer-Mann scattering-factor coefficient a2 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "scat_Cromer_Mann_a3": {
                  "description": "The Cromer-Mann scattering-factor coefficient a3 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "scat_Cromer_Mann_b1": {
                  "description": "The Cromer-Mann scattering-factor coefficient b1 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "scat_dispersion_imag": {
                  "description": "The imaginary component of the anomalous-dispersion\n scattering factor, f'', in electrons for this atom type and\n the radiation identified by _diffrn_radiation_wavelength.id.", 
                  "type": "number"
               }, 
               "scat_Cromer_Mann_b3": {
                  "description": "The Cromer-Mann scattering-factor coefficient b3 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "scat_Cromer_Mann_b2": {
                  "description": "The Cromer-Mann scattering-factor coefficient b2 used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "scat_source": {
                  "description": "Reference to the source of the scattering factors or scattering\n lengths used for this atom type.", 
                  "examples": [
                     "International Tables Vol. IV Table 2.4.6B"
                  ], 
                  "type": "string"
               }, 
               "scat_Cromer_Mann_c": {
                  "description": "The Cromer-Mann scattering-factor coefficient c used to\n calculate the scattering factors for this atom type.\n\n Ref: International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.", 
                  "type": "number"
               }, 
               "symbol": {
                  "description": "The code used to identify the atom species (singular or plural)\n representing this atom type. Normally this code is the element\n symbol. The code may be composed of any character except\n an underscore with the additional proviso that digits designate\n an oxidation state and must be followed by a + or - character.", 
                  "examples": [
                     "C", 
                     "Cu2+", 
                     "H(SDS)", 
                     "dummy", 
                     "FeNi"
                  ], 
                  "type": "string"
               }, 
               "oxidation_number": {
                  "description": "Formal oxidation state of this atom type in the structure.", 
                  "type": "integer"
               }, 
               "pdbx_scat_Cromer_Mann_a5": {
                  "description": "Scattering-factor coefficient a5, used to calculate electron\n elastic atomic scattering factors for the defined atom type.\n\n Electron Elastic Scattering Factors Ref:\n     International Tables for X-ray Crystallography (2006).\n     Vol. C, Table 4.3.2.2, pp. 282-283.\n\n Cromer_Mann equation Ref:\n     International Tables for X-ray Crystallography (1974).\n     Vol. IV, Table 2.2B\n  or: International Tables for Crystallography  (2004). Vol. C,\n      Tables 6.1.1.4 and 6.1.1.5.\n", 
                  "type": "number"
               }, 
               "scat_dispersion_real": {
                  "description": "The real component of the anomalous-dispersion\n scattering factor, f', in electrons for this atom type and\n the radiation identified by _diffrn_radiation_wavelength.id.", 
                  "type": "number"
               }
            }, 
            "required": [
               "symbol"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct": {
         "properties": {
            "pdbx_model_type_details": {
               "description": "A description of the type of structure model.", 
               "examples": [
                  "MINIMIZED AVERAGE"
               ], 
               "type": "string"
            }, 
            "pdbx_model_details": {
               "description": "Text description of the methodology which produced this\n model structure.", 
               "examples": [
                  "This model was produced from a 10 nanosecond Amber/MD simulation\nstarting from PDB structure ID 1ABC."
               ], 
               "type": "string"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "title": {
               "description": "A title for the data block. The author should attempt to convey\n the essence of the structure archived in the CIF in the title,\n and to distinguish this structural result from others.", 
               "examples": [
                  "5'-D(*(I)CP*CP*GP*G)-3", 
                  "T4 lysozyme mutant - S32A", 
                  "hen egg white lysozyme at -30 degrees C", 
                  "quail egg white lysozyme at 2 atmospheres"
               ], 
               "type": "string"
            }, 
            "pdbx_descriptor": {
               "description": "An automatically generated descriptor for an NDB structure or\n the unstructured content of the PDB COMPND record.", 
               "examples": [
                  "5'-D(*CP*GP*CP*(HYD)AP*AP*AP*TP*TP*TP*GP*CP*G)-3'"
               ], 
               "type": "string"
            }, 
            "pdbx_CASP_flag": {
               "enum": [
                  "N", 
                  "Y"
               ], 
               "description": "The item indicates whether the entry is a CASP target, a CASD-NMR target,\n or similar target participating in methods development experiments.", 
               "examples": [
                  "Y"
               ], 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_SG_project": {
         "minItems": 1, 
         "items": {
            "properties": {
               "full_name_of_center": {
                  "enum": [
                     "Partnership for Nuclear Receptor Signaling Code Biology", 
                     "Structural Genomics of Pathogenic Protozoa Consortium", 
                     "Center for the X-ray Structure Determination of Human Transporters", 
                     "Scottish Structural Proteomics Facility", 
                     "RIKEN Structural Genomics/Proteomics Initiative", 
                     "Center for High-Throughput Structural Biology", 
                     "New York SGX Research Center for Structural Genomics", 
                     "Medical Structural Genomics of Pathogenic Protozoa", 
                     "Program for the Characterization of Secreted Effector Proteins", 
                     "Partnership for Stem Cell Biology", 
                     "Oxford Protein Production Facility", 
                     "Structural Proteomics in Europe 2", 
                     "Structural Genomics Consortium for Research on Gene Expression", 
                     "Berkeley Structural Genomics Center", 
                     "Structures of Mtb Proteins Conferring Susceptibility to Known Mtb Inhibitors", 
                     "Northeast Structural Genomics Consortium", 
                     "Bacterial targets at IGS-CNRS, France", 
                     "Center for Structures of Membrane Proteins", 
                     "New York Structural GenomiX Research Consortium", 
                     "Southeast Collaboratory for Structural Genomics", 
                     "Montreal-Kingston Bacterial Structural Genomics Initiative", 
                     "Mitochondrial Protein Partnership", 
                     "Integrated Center for Structure and Function Innovation", 
                     "Accelerated Technologies Center for Gene to 3D Structure", 
                     "Nucleocytoplasmic Transport: a Target for Cellular Control", 
                     "Membrane Protein Structural Biology Consortium", 
                     "Protein Structure Factory", 
                     "TB Structural Genomics Consortium", 
                     "Center for Membrane Proteins of Infectious Diseases", 
                     "Enzyme Discovery for Natural Product Biosynthesis", 
                     "Transmembrane Protein Center", 
                     "Marseilles Structural Genomics Program @ AFMB", 
                     "Center for Structural Genomics of Infectious Diseases", 
                     "New York Structural Genomics Research Consortium", 
                     "Structure, Dynamics and Activation Mechanisms of Chemokine Receptors", 
                     "New York Consortium on Membrane Protein Structure", 
                     "South Africa Structural Targets Annotation Database", 
                     "Seattle Structural Genomics Center for Infectious Disease", 
                     "Israel Structural Proteomics Center", 
                     "Paris-Sud Yeast Structural Genomics", 
                     "Transcontinental EM Initiative for Membrane Protein Structure", 
                     "Assembly, Dynamics and Evolution of Cell-Cell and Cell-Matrix Adhesions", 
                     "Midwest Center for Structural Genomics", 
                     "Partnership for T-Cell Biology", 
                     "Joint Center for Structural Genomics", 
                     "Mycobacterium Tuberculosis Structural Proteomics Project", 
                     "Structure-Function Analysis of Polymorphic CDI Toxin-Immunity Protein Complexes", 
                     "Membrane Protein Structures by Solution NMR", 
                     "Structure-Function Studies of Tight Junction Membrane Proteins", 
                     "Chaperone-Enabled Studies of Epigenetic Regulation Enzymes", 
                     "Center for Eukaryotic Structural Genomics", 
                     "Structural Proteomics in Europe", 
                     "GPCR Network", 
                     "Midwest Center for Macromolecular Research", 
                     "Structural Genomics Consortium", 
                     "Ontario Centre for Structural Proteomics", 
                     "Structure 2 Function Project", 
                     "Atoms-to-Animals: The Immune Function Network"
                  ], 
                  "description": "The value identifies the full name of center.", 
                  "examples": [
                     "Midwest Center for Structural Genomics"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "enum": [
                     9, 
                     8, 
                     7, 
                     6, 
                     5, 
                     4, 
                     3, 
                     2, 
                     1, 
                     10
                  ], 
                  "description": "A unique integer identifier for this center", 
                  "examples": [
                     "1 2 3"
                  ], 
                  "type": "integer"
               }, 
               "project_name": {
                  "enum": [
                     "PSI:Biology", 
                     "NPPSFA, National Project on Protein Structural and Functional Analyses", 
                     "NIAID, National Institute of Allergy and Infectious Diseases", 
                     "Enzyme Function Initiative", 
                     "PSI, Protein Structure Initiative"
                  ], 
                  "description": "The value identifies the Structural Genomics project.", 
                  "examples": [
                     "PSI, Protein Structure Initiative"
                  ], 
                  "type": "string"
               }, 
               "initial_of_center": {
                  "enum": [
                     "NESG", 
                     "MPP", 
                     "CHSAM", 
                     "NPCXstals", 
                     "TJMP", 
                     "SASTAD", 
                     "MSGPP", 
                     "YSG", 
                     "SGCGES", 
                     "TMPC", 
                     "NatPro", 
                     "CHTSB", 
                     "TransportPDB", 
                     "MTBI", 
                     "OPPF", 
                     "RSGI", 
                     "SSGCID", 
                     "TBSGC", 
                     "BSGC", 
                     "CELLMAT", 
                     "MCSG", 
                     "SPINE", 
                     "SECSG", 
                     "CSMP", 
                     "NHRs", 
                     "S2F", 
                     "BSGI", 
                     "OCSP", 
                     "MCMR", 
                     "SGC", 
                     "SSPF", 
                     "BIGS", 
                     "MPSBC", 
                     "CESG", 
                     "PCSEP", 
                     "PSF", 
                     "ISPC", 
                     "TEMIMPS", 
                     "MPID", 
                     "CSGID", 
                     "SPINE-2", 
                     "NYCOMPS", 
                     "MPSbyNMR", 
                     "MSGP", 
                     "GPCR", 
                     "ISFI", 
                     "IFN", 
                     "TCELL", 
                     "NYSGRC", 
                     "JCSG", 
                     "CEBS", 
                     "XMTB", 
                     "NYSGXRC", 
                     "STEMCELL", 
                     "ATCG3D", 
                     "SGPP", 
                     "UC4CDI"
                  ], 
                  "description": "The value identifies the full name of center.", 
                  "examples": [
                     "JCSG"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine_B_iso": {
         "minItems": 1, 
         "items": {
            "properties": {
               "details": {
                  "description": "A description of special aspects of the isotropic B-factor\n (displacement-parameter) refinement for the class of atoms\n described in _refine_B_iso.class.", 
                  "examples": [
                     "The temperature factors of atoms in the side\n                                  chain of Arg 92 were held fixed due to\n                                  unstable behavior in refinement."
                  ], 
                  "type": "string"
               }, 
               "treatment": {
                  "enum": [
                     "anisotropic", 
                     "fixed", 
                     "isotropic"
                  ], 
                  "description": "The treatment of isotropic B-factor (displacement-parameter)\n refinement for a class of atoms defined in _refine_B_iso.class.", 
                  "type": "string"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_B_iso.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "class": {
                  "description": "A class of atoms treated similarly for isotropic B-factor\n (displacement-parameter) refinement.", 
                  "examples": [
                     "all", 
                     "protein", 
                     "solvent", 
                     "sugar-phosphate backbone"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "class", 
               "pdbx_refine_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_entity_assembly_recombinant": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "Ordinal identifier", 
                  "type": "string"
               }, 
               "cell": {
                  "description": "The cell of the host organism from which the expressed component was\n  obtained, if relevant.", 
                  "examples": [
                     "Potato root"
                  ], 
                  "type": "string"
               }, 
               "entity_assembly_id": {
                  "description": "Pointer to the expressed component described in the EM ENTITY ASSEMBLY category.", 
                  "type": "string"
               }, 
               "organism": {
                  "description": "Expression system host organism used to produce the component.", 
                  "examples": [
                     "escherichia coli", 
                     "saccharomyces cerevisiae"
                  ], 
                  "type": "string"
               }, 
               "ncbi_tax_id": {
                  "description": "The NCBI taxonomy id of the expression host used to produce the component.", 
                  "type": "integer"
               }, 
               "plasmid": {
                  "description": "The plasmid used to produce the component in the expression system.", 
                  "examples": [
                     "pBR322", 
                     "pMB9"
                  ], 
                  "type": "string"
               }, 
               "strain": {
                  "description": "The strain of the host organism from which the expresed component was\n  obtained, if relevant.", 
                  "examples": [
                     "DH5a", 
                     "BMH 71-18"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_assembly_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "entity_keywords": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "text": {
                  "description": "Keywords describing this entity.", 
                  "examples": [
                     "polypeptide", 
                     "natural product", 
                     "polysaccharide"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_ncs_ens": {
         "minItems": 1, 
         "items": {
            "properties": {
               "details": {
                  "description": "A description of special aspects of the ensemble.", 
                  "examples": [
                     "The ensemble has a slight translation between\n                                  domains 1 and 4, but overall it can accurately\n                                  be described as point group 222"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _struct_ncs_ens.id must uniquely identify a\n record in the STRUCT_NCS_ENS list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_imaging_optics": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "Primary key", 
                  "type": "string"
               }, 
               "energyfilter_upper": {
                  "description": "The energy filter range upper value in electron volts (eV) set by spectrometer.", 
                  "examples": [
                     "15"
                  ], 
                  "type": "string"
               }, 
               "chr_aberration_corrector": {
                  "description": "Chromatic aberration corrector information", 
                  "examples": [
                     "CEOS manufactured Cc corrector"
                  ], 
                  "type": "string"
               }, 
               "sph_aberration_corrector": {
                  "description": "Spherical aberration corrector information", 
                  "examples": [
                     "Microscope was modified with a Cs corrector with two hexapole elements."
                  ], 
                  "type": "string"
               }, 
               "energyfilter_name": {
                  "description": "The type of energy filter spectrometer", 
                  "examples": [
                     "GIF 200"
                  ], 
                  "type": "string"
               }, 
               "energyfilter_lower": {
                  "description": "The energy filter range lower value in electron volts (eV) set by spectrometer.", 
                  "examples": [
                     "0"
                  ], 
                  "type": "string"
               }, 
               "imaging_id": {
                  "description": "Foreign key to the EM IMAGING category", 
                  "type": "string"
               }, 
               "phase_plate": {
                  "description": "Phase plate information", 
                  "examples": [
                     "Zernike phase plate"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "imaging_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_particle_selection": {
         "minItems": 1, 
         "items": {
            "properties": {
               "image_processing_id": {
                  "description": "The value of _em_particle_selection.image_processing_id points to\n the EM_IMAGE_PROCESSING category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details used for selecting particles", 
                  "examples": [
                     "negative monitor contrast facilitated particle picking"
                  ], 
                  "type": "string"
               }, 
               "num_particles_selected": {
                  "description": "The number of particles selected from the projection set of images.", 
                  "examples": [
                     "840"
                  ], 
                  "type": "integer"
               }, 
               "id": {
                  "description": "Ordinal identifier\n", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "image_processing_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_audit_revision_history": {
         "minItems": 1, 
         "items": {
            "properties": {
               "minor_revision": {
                  "description": "The minor version number of deposition release.", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }, 
               "data_content_type": {
                  "enum": [
                     "Structure model", 
                     "Structure factors", 
                     "NMR shifts", 
                     "NMR restraints"
                  ], 
                  "description": "The type of file that the pdbx_audit_revision_history record refers to.", 
                  "examples": [
                     "Structure model"
                  ], 
                  "type": "string"
               }, 
               "major_revision": {
                  "description": "The major version number of deposition release.", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }, 
               "ordinal": {
                  "description": "A unique identifier for the pdbx_audit_revision_history record.", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }, 
               "revision_date": {
                  "format": "date", 
                  "description": "The release date of the revision", 
                  "examples": [
                     "2017-03-08"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "data_content_type", 
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "audit": {
         "minItems": 1, 
         "items": {
            "properties": {
               "creation_date": {
                  "format": "date", 
                  "description": "A date that the data block was created. The date format is\n yyyy-mm-dd.", 
                  "examples": [
                     "1990-07-12"
                  ], 
                  "type": "string"
               }, 
               "update_record": {
                  "description": "A record of any changes to the data block. The update format is\n a date (yyyy-mm-dd) followed by a description of the changes.\n The latest update entry is added to the bottom of this record.", 
                  "examples": [
                     "1990-07-15   Updated by the Co-editor"
                  ], 
                  "type": "string"
               }, 
               "creation_method": {
                  "description": "A description of how data were entered into the data block.", 
                  "examples": [
                     "spawned by the program QBEE"
                  ], 
                  "type": "string"
               }, 
               "revision_id": {
                  "description": "The value of _audit.revision_id must uniquely identify a record\n in the AUDIT list.", 
                  "examples": [
                     "rev1"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "revision_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_site_gen": {
         "minItems": 1, 
         "items": {
            "properties": {
               "symmetry": {
                  "description": "Describes the symmetry operation that should be applied to the\n atom set specified by _struct_site_gen.label* to generate a\n portion of the site.", 
                  "examples": [
                     "4", 
                     "7_645"
                  ], 
                  "type": "string"
               }, 
               "pdbx_num_res": {
                  "description": "Number of residues in the site.", 
                  "type": "integer"
               }, 
               "id": {
                  "description": "The value of _struct_site_gen.id must uniquely identify a record\n in the STRUCT_SITE_GEN list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "label_asym_id": {
                  "description": "A component of the identifier for participants in the site.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_seq_id": {
                  "description": "A component of the identifier for participants in the site.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_comp_id": {
                  "description": "A component of the identifier for participants in the site.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "pdbx_auth_ins_code": {
                  "description": "PDB insertion code.", 
                  "type": "string"
               }, 
               "site_id": {
                  "description": "This data item is a pointer to _struct_site.id in the STRUCT_SITE\n category.", 
                  "type": "string"
               }, 
               "auth_asym_id": {
                  "description": "A component of the identifier for participants in the site.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "label_seq_id": {
                  "description": "A component of the identifier for participants in the site.\n\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "label_comp_id": {
                  "description": "A component of the identifier for participants in the site.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "site_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine_ls_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "number_reflns_R_free": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation limit\n established by _reflns.observed_criterion, and that were used\n as the test reflections (i.e. were excluded from the refinement)\n when the refinement included the calculation of a 'free'\n R factor. Details of how reflections were assigned to the\n working and test sets are given in _reflns.R_free_details.", 
                  "type": "integer"
               }, 
               "R_factor_R_free": {
                  "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation limit\n established by _reflns.observed_criterion, and that were\n used as the test reflections (i.e. were excluded from the\n refinement) when the refinement included the calculation\n of a 'free' R factor. Details of how reflections were assigned\n to the working and test sets are given in _reflns.R_free_details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "number_reflns_R_work": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation limit\n established by _reflns.observed_criterion, and that were used\n as the working reflections (i.e. were included in the\n refinement) when the refinement included the calculation of\n a 'free' R factor. Details of how reflections were assigned\n to the working and test sets are given in _reflns.R_free_details.", 
                  "type": "integer"
               }, 
               "number_reflns_obs": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation criterion\n established by _reflns.observed_criterion.", 
                  "type": "integer"
               }, 
               "d_res_low": {
                  "description": "The highest value for the interplanar spacings for the\n reflection data in this shell. This is called the lowest\n resolution.", 
                  "type": "number"
               }, 
               "percent_reflns_obs": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation criterion\n established by _reflns.observed_criterion, expressed as a\n percentage of the number of geometrically observable\n reflections that satisfy the resolution limits.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "The lowest value for the interplanar spacings for the\n reflection data in this shell. This is called\n the highest resolution.", 
                  "type": "number"
               }, 
               "percent_reflns_R_free": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation limit\n established by _reflns.observed_criterion, and that were used\n as the test reflections (i.e. were excluded from the refinement)\n when the refinement included the calculation of a 'free'\n R factor, expressed as a percentage of the number of\n geometrically observable reflections that satisfy the\n reflection limits.", 
                  "type": "number"
               }, 
               "R_factor_all": {
                  "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "pdbx_fsc_work": {
                  "description": "Fourier Shell Correlation (FSC) between model and\n observed structure factors for reflections included in refinement.\n\n FSC is a measure of the agreement between observed\n and calculated structure factors as complex numbers.\n\n              (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~work~  = --------------------------------------\n              (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation is carried over all working reflections in the resolution shell.\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n", 
                  "type": "number"
               }, 
               "pdbx_phase_error": {
                  "description": "The average phase error for all reflections in the resolution shell.", 
                  "examples": [
                     "0.30"
                  ], 
                  "type": "number"
               }, 
               "R_factor_R_free_error": {
                  "description": "The estimated error in _refine_ls_shell.R_factor_R_free.\n The method used to estimate the error is described in the\n item _refine.ls_R_factor_R_free_error_details.", 
                  "type": "number"
               }, 
               "pdbx_total_number_of_bins_used": {
                  "description": "Total number of bins used.", 
                  "type": "integer"
               }, 
               "pdbx_fsc_free": {
                  "description": "Fourier Shell Correlation (FSC) between model and\n observed structure factors for reflections not included in refinement.\n\n FSC is a measure of the agreement between observed\n and calculated structure factors as complex numbers.\n\n              (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~free~  = --------------------------------------\n              (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation is carried over all free reflections in the resolution shell.\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n", 
                  "type": "number"
               }, 
               "R_factor_R_work": {
                  "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation limit\n established by _reflns.observed_criterion, and that were used\n as the working reflections (i.e. were included in the\n refinement) when the refinement included the calculation of\n a 'free' R factor. Details of how reflections were assigned\n to the working and test sets are given in _reflns.R_free_details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "R_factor_obs": {
                  "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low and the observation criterion\n established by _reflns.observed_criterion.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "wR_factor_R_work": {
                  "description": "Weighted residual factor wR for reflections that satisfy the\n resolution limits established by _refine_ls_shell.d_res_high\n and _refine_ls_shell.d_res_low and the observation limit\n established by _reflns.observed_criterion, and that were used\n as the working reflections (i.e. were included in the\n refinement) when the refinement included the calculation of\n a 'free' R factor. Details of how reflections were assigned\n to the working and test sets are given in _reflns.R_free_details.\n\n      ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^\n wR = ( ---------------------------- )\n      (        sum|w Y~obs~^2^|      )\n\n Y~obs~  = the observed amplitude specified by\n           _refine.ls_structure_factor_coef\n Y~calc~ = the calculated amplitude specified by\n           _refine.ls_structure_factor_coef\n w       = the least-squares weight\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_ls_shell.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "redundancy_reflns_obs": {
                  "description": "The ratio of the total number of observations of the\n reflections that satisfy the resolution limits established by\n _refine_ls_shell.d_res_high and _refine_ls_shell.d_res_low and\n the observation criterion established by\n _reflns.observed_criterion to the number of crystallographically\n unique reflections that satisfy the same limits.", 
                  "type": "number"
               }, 
               "number_reflns_all": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine_ls_shell.d_res_high and\n _refine_ls_shell.d_res_low.", 
                  "type": "integer"
               }, 
               "redundancy_reflns_all": {
                  "description": "The ratio of the total number of observations of the reflections\n that satisfy the resolution limits established by\n _refine_ls_shell.d_res_high and _refine_ls_shell.d_res_low\n to the number of crystallographically unique reflections that\n satisfy the same limits.", 
                  "type": "number"
               }
            }, 
            "required": [
               "d_res_high", 
               "pdbx_refine_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_buffer_component": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "This data item is the primary key of the category.", 
                  "type": "string"
               }, 
               "concentration_units": {
                  "description": "Units for the sample concentration value.", 
                  "examples": [
                     "mg/mL"
                  ], 
                  "type": "string"
               }, 
               "concentration": {
                  "description": "The concentration of the sample (arbitrary units).", 
                  "examples": [
                     "1.35"
                  ], 
                  "type": "number"
               }, 
               "formula": {
                  "description": "formula for buffer component", 
                  "examples": [
                     "NaCl"
                  ], 
                  "type": "string"
               }, 
               "buffer_id": {
                  "description": "Foreign key to the entry category.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "name of the buffer component", 
                  "examples": [
                     "sodium chloride"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "buffer_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_representative": {
         "properties": {
            "entry_id": {
               "description": "msd will assign the ID.", 
               "type": "string"
            }, 
            "selection_criteria": {
               "description": "\nBy highlighting the appropriate choice(s), describe the criteria used to\nselect this structure as a representative structure, or if an average\nstructure has been calculated describe how this was done.", 
               "examples": [
                  "The structure closest to the average.\nThe structure with the lowest energy was selected.\nThe structure with the fewest number of violations was selected.\nA minimized average structure was calculated."
               ], 
               "type": "string"
            }, 
            "conformer_id": {
               "description": "If a member of the ensemble has been selected as a representative\n structure, identify it by its model number.", 
               "examples": [
                  "15"
               ], 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "refine_hist": {
         "minItems": 1, 
         "items": {
            "properties": {
               "cycle_id": {
                  "description": "The value of _refine_hist.cycle_id must uniquely identify a\n record in the REFINE_HIST list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "pdbx_B_iso_mean_ligand": {
                  "description": "Mean isotropic B-value for ligand molecules included in refinement.", 
                  "type": "number"
               }, 
               "pdbx_number_atoms_ligand": {
                  "description": "Number of ligand atoms included in refinement", 
                  "type": "integer"
               }, 
               "d_res_low": {
                  "description": "The highest value for the interplanar spacings for the\n reflection data for this cycle of refinement. This is\n called the lowest resolution.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "The lowest value for the interplanar spacings for the\n reflection data for this cycle of refinement. This is called\n the highest resolution.", 
                  "type": "number"
               }, 
               "pdbx_number_residues_total": {
                  "description": "Total number of polymer residues included in refinement.", 
                  "type": "integer"
               }, 
               "pdbx_number_atoms_nucleic_acid": {
                  "description": "Number of nucleic atoms included in refinement", 
                  "type": "integer"
               }, 
               "pdbx_B_iso_mean_solvent": {
                  "description": "Mean isotropic B-value for solvent molecules included in refinement.", 
                  "type": "number"
               }, 
               "number_atoms_solvent": {
                  "description": "The number of solvent atoms that were included in the model at\n this cycle of the refinement.", 
                  "type": "integer"
               }, 
               "pdbx_number_atoms_protein": {
                  "description": "Number of protein atoms included in refinement", 
                  "type": "integer"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_hist.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "number_atoms_total": {
                  "description": "The total number of atoms that were included in the model at\n this cycle of the refinement.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "cycle_id", 
               "pdbx_refine_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_entity_assembly_naturalsource": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "Ordinal key for the em_entity_assembly_naturalsource category.", 
                  "type": "string"
               }, 
               "organelle": {
                  "description": "The organelle from which the component was obtained.", 
                  "examples": [
                     "Golgi", 
                     "Mitochondrion", 
                     "Cytoskeleton"
                  ], 
                  "type": "string"
               }, 
               "cell": {
                  "description": "The cell type from which the component was obtained.", 
                  "examples": [
                     "CHO", 
                     "HELA", 
                     "3T3"
                  ], 
                  "type": "string"
               }, 
               "entity_assembly_id": {
                  "description": "Pointer to the assembly component defined in the EM ENTITY ASSEMBLY category.", 
                  "type": "string"
               }, 
               "organism": {
                  "description": "The genus-species of the natural organism from which the component was obtained.", 
                  "examples": [
                     "Escherichia coli"
                  ], 
                  "type": "string"
               }, 
               "organ": {
                  "description": "The organ of the organism from which the component was obtained.", 
                  "examples": [
                     "Escherichia coli"
                  ], 
                  "type": "string"
               }, 
               "ncbi_tax_id": {
                  "description": "The NCBI taxonomy id for the natural organism source of the component.", 
                  "examples": [
                     "10804", 
                     "9606"
                  ], 
                  "type": "integer"
               }, 
               "tissue": {
                  "description": "The tissue of the natural organism from which the component was obtained.", 
                  "examples": [
                     "Cartilage", 
                     "Liver", 
                     "Eye lens"
                  ], 
                  "type": "string"
               }, 
               "cellular_location": {
                  "description": "The cellular location of the component.", 
                  "examples": [
                     "cytoplasm", 
                     "endoplasmic reticulum", 
                     "plasma membrane"
                  ], 
                  "type": "string"
               }, 
               "strain": {
                  "description": "The strain of the natural organism from which the component was\n  obtained, if relevant.", 
                  "examples": [
                     "DH5a", 
                     "BMH 71-18"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_assembly_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "reflns_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "d_res_low": {
                  "description": "The highest value in angstroms for the interplanar spacings\n for the reflections in this shell. This is called the lowest\n resolution.", 
                  "type": "number"
               }, 
               "Rmerge_F_obs": {
                  "description": "Residual factor Rmerge for reflections that satisfy the\n resolution limits established by _reflns_shell.d_res_high and\n _reflns_shell.d_res_low and the observation criterion\n established by _reflns.observed_criterion.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection", 
                  "type": "number"
               }, 
               "meanI_over_sigI_obs": {
                  "description": "The ratio of the mean of the intensities of the reflections\n classified as 'observed' (see _reflns.observed_criterion) in\n this shell to the mean of the standard uncertainties of the\n intensities of the 'observed' reflections in this\n shell.", 
                  "type": "number"
               }, 
               "meanI_over_sigI_all": {
                  "description": "The ratio of the mean of the intensities of all reflections\n in this shell to the mean of the standard uncertainties of the\n intensities of all reflections in this shell.", 
                  "type": "number"
               }, 
               "percent_possible_obs": {
                  "description": "The percentage of geometrically possible reflections represented\n by reflections classified as 'observed' (see\n _reflns.observed_criterion) for this shell.", 
                  "type": "number"
               }, 
               "pdbx_chi_squared": {
                  "description": "Chi-squared statistic for this resolution shell.", 
                  "type": "number"
               }, 
               "number_unique_obs": {
                  "description": "The total number of measured reflections classified as 'observed'\n (see _reflns.observed_criterion) which are symmetry-unique\n after merging for this shell.", 
                  "type": "integer"
               }, 
               "number_measured_obs": {
                  "description": "The number of reflections classified as 'observed'\n (see _reflns.observed_criterion) for this\n shell.", 
                  "type": "integer"
               }, 
               "Rmerge_F_all": {
                  "description": "Residual factor Rmerge for all reflections that satisfy the\n resolution limits established by _reflns_shell.d_res_high and\n _reflns_shell.d_res_low.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection", 
                  "type": "number"
               }, 
               "pdbx_Rpim_I_all": {
                  "description": "The precision-indicating merging R factor value Rpim,\n for merging all intensities in a given shell.\n\n        sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n Rpim = --------------------------------------------------\n                      sum~i~ ( sum~j~ I~j~ )\n\n I~j~   = the intensity of the jth observation of reflection i\n <I~i~> = the mean of the intensities of all observations of\n          reflection i\n N~i~   = the redundancy (the number of times reflection i\n          has been measured).\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection.\n\n Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n      Biol. 4, 269-275.\n      Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n      30, 203-205.\n      Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.\n", 
                  "type": "number"
               }, 
               "pdbx_R_split": {
                  "description": "\n              R split measures the agreement between the sets of intensities created by merging\n              odd- and even-numbered images from the data within the resolution shell.\n\n\t      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass,\n\t      A. Barty and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341\n", 
                  "type": "number"
               }, 
               "percent_possible_all": {
                  "description": "The percentage of geometrically possible reflections represented\n by all reflections measured for this shell.", 
                  "type": "number"
               }, 
               "pdbx_netI_over_sigmaI_all": {
                  "description": "The mean of the ratio of the intensities to their\n standard uncertainties of all reflections in the\n resolution shell.\n\n _reflns_shell.pdbx_netI_over_sigmaI_all =  <I/sigma(I)>", 
                  "type": "number"
               }, 
               "meanI_over_uI_all": {
                  "description": "The ratio of the mean of the intensities of all reflections\n in this shell to the mean of the standard uncertainties of the\n intensities of all reflections in this shell.", 
                  "type": "number"
               }, 
               "pdbx_netI_over_sigmaI_obs": {
                  "description": "The mean of the ratio of the intensities to their\n standard uncertainties of observed reflections\n (see _reflns.observed_criterion) in the resolution shell.\n\n _reflns_shell.pdbx_netI_over_sigmaI_obs =  <I/sigma(I)>", 
                  "type": "number"
               }, 
               "number_possible": {
                  "description": "The number of unique reflections it is possible to measure in\n this shell.", 
                  "type": "integer"
               }, 
               "Rmerge_I_all": {
                  "description": "The value of Rmerge(I) for all reflections in a given shell.\n\n             sum~i~(sum~j~|I~j~ - <I>|)\n Rmerge(I) = --------------------------\n                 sum~i~(sum~j~<I>)\n\n I~j~ = the intensity of the jth observation of reflection i\n <I>  = the mean of the intensities of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection\n", 
                  "type": "number"
               }, 
               "pdbx_redundancy": {
                  "description": "Redundancy for the current shell.", 
                  "type": "number"
               }, 
               "Rmerge_I_obs": {
                  "description": "The value of Rmerge(I) for reflections classified as 'observed'\n (see _reflns.observed_criterion) in a given shell.\n\n             sum~i~(sum~j~|I~j~ - <I>|)\n Rmerge(I) = --------------------------\n                 sum~i~(sum~j~<I>)\n\n I~j~ = the intensity of the jth observation of reflection i\n <I>  = the mean of the intensities of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection", 
                  "type": "number"
               }, 
               "pdbx_ordinal": {
                  "description": "An ordinal identifier for this resolution shell.", 
                  "type": "integer"
               }, 
               "pdbx_Rrim_I_all": {
                  "description": "             The redundancy-independent merging R factor value Rrim,\n              also denoted Rmeas, for merging all intensities in a\n              given shell.\n\n                     sum~i~ [N~i~ /( N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n              Rrim = --------------------------------------------------------\n                                   sum~i~ ( sum~j~ I~j~ )\n\n              I~j~   = the intensity of the jth observation of reflection i\n              <I~i~> = the mean of the intensities of all observations of\n                       reflection i\n\t      N~i~   = the redundancy (the number of times reflection i\n                       has been measured).\n\n              sum~i~ is taken over all reflections\n              sum~j~ is taken over all observations of each reflection.\n\n              Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n                   Biol. 4, 269-275.\n                   Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n                   30, 203-205.\n                   Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.", 
                  "type": "number"
               }, 
               "number_measured_all": {
                  "description": "The total number of reflections measured for this\n shell.", 
                  "type": "integer"
               }, 
               "pdbx_diffrn_id": {
                  "uniqueItems": false, 
                  "items": {
                     "description": "An identifier for the diffraction data set corresponding to this resolution shell.\n\n Multiple diffraction data sets specified as a comma separated list.", 
                     "type": "string"
                  }, 
                  "type": "array"
               }, 
               "pdbx_Rsym_value": {
                  "description": "R sym value in percent.", 
                  "type": "number"
               }, 
               "pdbx_rejects": {
                  "description": "The number of rejected reflections in the resolution\n shell.  Reflections may be rejected from scaling\n by setting the observation criterion,\n _reflns.observed_criterion.\n", 
                  "type": "integer"
               }, 
               "d_res_high": {
                  "description": "The smallest value in angstroms for the interplanar spacings\n for the reflections in this shell. This is called the highest\n resolution.", 
                  "type": "number"
               }, 
               "number_unique_all": {
                  "description": "The total number of measured reflections which are symmetry-\n unique after merging for this shell.", 
                  "type": "integer"
               }, 
               "pdbx_CC_half": {
                  "description": "             The Pearson's correlation coefficient expressed as a decimal value\n              between the average intensities from randomly selected\n              half-datasets within the resolution shell.\n\n\t      Ref: Karplus & Diederichs (2012), Science 336, 1030-33\n", 
                  "type": "number"
               }
            }, 
            "required": [
               "pdbx_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "diffrn_source": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_wavelength_list": {
                  "description": "Comma separated list of wavelengths or wavelength range.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the radiation source used.", 
                  "type": "string"
               }, 
               "diffrn_id": {
                  "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category.", 
                  "type": "string"
               }, 
               "type": {
                  "description": "The make, model or name of the source of radiation.", 
                  "examples": [
                     "NSLS beamline X8C", 
                     "Rigaku RU200"
                  ], 
                  "type": "string"
               }, 
               "pdbx_wavelength": {
                  "description": "Wavelength of radiation.", 
                  "type": "string"
               }, 
               "pdbx_synchrotron_site": {
                  "description": "Synchrotron site.", 
                  "type": "string"
               }, 
               "source": {
                  "description": "The general class of the radiation source.", 
                  "examples": [
                     "sealed X-ray tube", 
                     "nuclear reactor", 
                     "spallation source", 
                     "electron microscope", 
                     "rotating-anode X-ray tube", 
                     "synchrotron"
                  ], 
                  "type": "string"
               }, 
               "pdbx_synchrotron_beamline": {
                  "description": "Synchrotron beamline.", 
                  "type": "string"
               }
            }, 
            "required": [
               "diffrn_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "diffrn_radiation_wavelength": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The code identifying each value of\n _diffrn_radiation_wavelength.wavelength.\n Items in the DIFFRN_RADIATION_WAVELENGTH category are looped\n when multiple wavelengths are used.\n\n This code is used to link with the DIFFRN_REFLN category.\n The _diffrn_refln.wavelength_id codes must match one of\n the codes defined in this category.", 
                  "examples": [
                     "x1", 
                     "x2", 
                     "neut"
                  ], 
                  "type": "string"
               }, 
               "wt": {
                  "description": "The relative weight of a wavelength identified by the code\n _diffrn_radiation_wavelength.id in the list of wavelengths.", 
                  "type": "number"
               }, 
               "wavelength": {
                  "description": "The radiation wavelength in angstroms.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MAD_expt": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _phasing_MAD_expt.id must uniquely identify each\n record in the PHASING_MAD_EXPT list.", 
                  "type": "string"
               }, 
               "mean_fom": {
                  "description": "The mean figure of merit.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing": {
         "minItems": 1, 
         "items": {
            "properties": {
               "method": {
                  "description": "A listing of the method or methods used to phase this\n structure.", 
                  "examples": [
                     "abinitio", 
                     "averaging", 
                     "dm", 
                     "isas", 
                     "isir", 
                     "isomorphous", 
                     "mad", 
                     "mir", 
                     "miras", 
                     "mr", 
                     "sir", 
                     "siras"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "method"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "exptl_crystal_grow_comp": {
         "minItems": 1, 
         "items": {
            "properties": {
               "crystal_id": {
                  "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _exptl_crystal_grow_comp.id must uniquely identify\n each item in the EXPTL_CRYSTAL_GROW_COMP list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "1", 
                     "A", 
                     "protein in buffer"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of any special aspects of the solution component.\n When the solution component is the one that contains the\n macromolecule, this could be the specification of the buffer in\n which the macromolecule was stored. When the solution component\n is a buffer component, this could be the methods (or formula)\n used to achieve a desired pH.", 
                  "examples": [
                     "in 3 mM NaAzide", 
                     "The protein solution was in a buffer\n                                  containing 25 mM NaCl, 100 mM NaMES/MES\n                                  buffer, pH 7.5, 3 mM NaAzide", 
                     "in 3 mM NaAzide. Buffer components were mixed\n                                  to produce a pH of 4.7 according to a ratio\n                                  calculated from the pKa. The actual pH of\n                                  solution 2 was not measured."
                  ], 
                  "type": "string"
               }, 
               "sol_id": {
                  "description": "An identifier for the solution to which the given solution\n component belongs.", 
                  "examples": [
                     "1", 
                     "well solution", 
                     "solution A"
                  ], 
                  "type": "string"
               }, 
               "conc": {
                  "description": "The concentration of the solution component.", 
                  "examples": [
                     "200 \\ml", 
                     "0.1 ml"
                  ], 
                  "type": "string"
               }, 
               "volume": {
                  "description": "The volume of the solution component.", 
                  "examples": [
                     "200 \\ml", 
                     "0.1 ml"
                  ], 
                  "type": "string"
               }, 
               "name": {
                  "description": "A common name for the component of the solution.", 
                  "examples": [
                     "protein in buffer", 
                     "acetic acid"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "crystal_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "reflns": {
         "minItems": 1, 
         "items": {
            "properties": {
               "data_reduction_method": {
                  "description": "The method used for data reduction.\n\n Note that this is not the computer program used, which is\n described in the SOFTWARE category, but the method\n itself.\n\n This data item should be used to describe significant\n methodological options used within the data-reduction programs.", 
                  "examples": [
                     "Profile fitting by method of Kabsch (1987).\n                                  Scaling used spherical harmonic coefficients."
                  ], 
                  "type": "string"
               }, 
               "B_iso_Wilson_estimate": {
                  "description": "The value of the overall isotropic displacement parameter\n estimated from the slope of the Wilson plot.", 
                  "type": "number"
               }, 
               "R_free_details": {
                  "description": "A description of the method by which a subset of reflections was\n selected for exclusion from refinement so as to be used in the\n calculation of a 'free' R factor.", 
                  "examples": [
                     "The data set was sorted with l varying most\n                                  rapidly and h varying least rapidly. Every\n                                  10th reflection in this sorted list was\n                                  excluded from refinement and included in the\n                                  calculation of a 'free' R factor."
                  ], 
                  "type": "string"
               }, 
               "pdbx_netI_over_av_sigmaI": {
                  "description": "The ratio of the average intensity to the average uncertainty,\n <I>/<sigma(I)>.\n", 
                  "type": "number"
               }, 
               "d_resolution_high": {
                  "description": "The smallest value for the interplanar spacings for\n the reflection data. This is called the highest resolution.", 
                  "type": "number"
               }, 
               "Rmerge_F_obs": {
                  "description": "Residual factor Rmerge for reflections that satisfy the\n resolution limits established by _reflns.d_resolution_high\n and _reflns.d_resolution_low and the observation limit\n established by _reflns.observed_criterion.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection", 
                  "type": "number"
               }, 
               "d_resolution_low": {
                  "description": "The largest value for the interplanar spacings for the\n reflection data. This is called the lowest resolution.", 
                  "type": "number"
               }, 
               "pdbx_Rmerge_I_obs": {
                  "description": "The R value for merging intensities satisfying the observed\n criteria in this data set.", 
                  "type": "number"
               }, 
               "limit_h_max": {
                  "description": "Maximum value of the Miller index h for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_h_max.", 
                  "type": "integer"
               }, 
               "number_obs": {
                  "description": "The number of reflections in the REFLN list (not the DIFFRN_REFLN\n list) classified as observed (see _reflns.observed_criterion).\n This number may contain Friedel-equivalent reflections according\n to the nature of the structure and the procedures used.", 
                  "type": "integer"
               }, 
               "pdbx_Rsym_value": {
                  "description": "The R sym value as a decimal number.", 
                  "examples": [
                     "0.02"
                  ], 
                  "type": "number"
               }, 
               "pdbx_netI_over_sigmaI": {
                  "description": "The mean of the ratio of the intensities to their\n standard uncertainties, <I/sigma(I)>.", 
                  "type": "number"
               }, 
               "pdbx_number_measured_all": {
                  "description": "Total number of measured reflections.\n", 
                  "examples": [
                     "23000", 
                     "140000"
                  ], 
                  "type": "integer"
               }, 
               "number_all": {
                  "description": "The total number of reflections in the REFLN list (not the\n DIFFRN_REFLN list). This number may contain Friedel-equivalent\n reflections according to the nature of the structure and the\n procedures used. The item _reflns.details describes the\n reflection data.", 
                  "type": "integer"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "data_reduction_details": {
                  "description": "A description of special aspects of the data-reduction\n procedures.", 
                  "examples": [
                     "Merging and scaling based on only those\n                                  reflections with I > sig(I)."
                  ], 
                  "type": "string"
               }, 
               "Rmerge_F_all": {
                  "description": "Residual factor Rmerge for all reflections that satisfy the\n resolution limits established by _reflns.d_resolution_high\n and _reflns.d_resolution_low.\n\n             sum~i~(sum~j~|F~j~ - <F>|)\n Rmerge(F) = --------------------------\n                  sum~i~(sum~j~<F>)\n\n F~j~ = the amplitude of the jth observation of reflection i\n <F>  = the mean of the amplitudes of all observations of\n        reflection i\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection", 
                  "type": "number"
               }, 
               "pdbx_Rpim_I_all": {
                  "description": "The precision-indicating merging R factor value Rpim,\n for merging all intensities in this data set.\n\n        sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n Rpim = --------------------------------------------------\n                      sum~i~ ( sum~j~ I~j~ )\n\n I~j~   = the intensity of the jth observation of reflection i\n <I~i~> = the mean of the intensities of all observations\n          of reflection i\n N~i~   = the redundancy (the number of times reflection i\n          has been measured).\n\n sum~i~ is taken over all reflections\n sum~j~ is taken over all observations of each reflection.\n\n Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n      Biol. 4, 269-275.\n      Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n      30, 203-205.\n      Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.", 
                  "type": "number"
               }, 
               "pdbx_R_split": {
                  "description": "             R split measures the agreement between the sets of intensities created by merging\n              odd- and even-numbered images  from the overall data.\n\n\t      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass, A. Barty\n              and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341\n", 
                  "type": "number"
               }, 
               "limit_k_min": {
                  "description": "Minimum value of the Miller index k for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_k_min.", 
                  "type": "integer"
               }, 
               "limit_k_max": {
                  "description": "Maximum value of the Miller index k for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_k_max.", 
                  "type": "integer"
               }, 
               "observed_criterion": {
                  "description": "The criterion used to classify a reflection as 'observed'. This\n criterion is usually expressed in terms of a sigma(I) or\n sigma(F) threshold.", 
                  "examples": [
                     ">2sigma(I)"
                  ], 
                  "type": "string"
               }, 
               "limit_l_min": {
                  "description": "Minimum value of the Miller index l for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_l_min.", 
                  "type": "integer"
               }, 
               "details": {
                  "description": "A description of reflection data not covered by other data\n names. This should include details of the Friedel pairs.", 
                  "type": "string"
               }, 
               "percent_possible_obs": {
                  "description": "The percentage of geometrically possible reflections represented\n by reflections that satisfy the resolution limits established\n by _reflns.d_resolution_high and _reflns.d_resolution_low and\n the observation limit established by\n _reflns.observed_criterion.", 
                  "type": "number"
               }, 
               "observed_criterion_I_min": {
                  "description": "The criterion used to classify a reflection as 'observed'\n expressed as a lower limit for the value of I.", 
                  "type": "number"
               }, 
               "pdbx_redundancy": {
                  "description": "Overall redundancy for this data set (%).", 
                  "type": "number"
               }, 
               "observed_criterion_F_max": {
                  "description": "The criterion used to classify a reflection as 'observed'\n expressed as an upper limit for the value of F.", 
                  "type": "number"
               }, 
               "observed_criterion_F_min": {
                  "description": "The criterion used to classify a reflection as 'observed'\n expressed as a lower limit for the value of F.", 
                  "type": "number"
               }, 
               "phase_calculation_details": {
                  "description": "The value of _reflns.phase_calculation_details describes a\n special details about calculation of phases in _refln.phase_calc.", 
                  "examples": [
                     "From model", 
                     "NCS averaging", 
                     "Solvent flipping", 
                     "Solvent flattening", 
                     "Multiple crystal averaging", 
                     "Multiple phase modification", 
                     "Other phase modification"
                  ], 
                  "type": "string"
               }, 
               "pdbx_ordinal": {
                  "description": "An ordinal identifier for this set of reflection statistics.", 
                  "type": "integer"
               }, 
               "pdbx_scaling_rejects": {
                  "description": "Number of reflections rejected in scaling operations.", 
                  "type": "integer"
               }, 
               "pdbx_Rrim_I_all": {
                  "description": "             The redundancy-independent merging R factor value Rrim,\n              also denoted Rmeas, for merging all intensities in this\n              data set.\n\n                     sum~i~ [N~i~/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |\n              Rrim = ----------------------------------------------------\n                                  sum~i~ ( sum~j~ I~j~ )\n\n              I~j~   = the intensity of the jth observation of reflection i\n              <I~i~> = the mean of the intensities of all observations of\n                       reflection i\n\t       N~i~   = the redundancy (the number of times reflection i\n                       has been measured).\n\n              sum~i~ is taken over all reflections\n              sum~j~ is taken over all observations of each reflection.\n\n              Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.\n                   Biol. 4, 269-275.\n                   Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.\n                   30, 203-205.\n                   Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.", 
                  "type": "number"
               }, 
               "pdbx_diffrn_id": {
                  "uniqueItems": false, 
                  "items": {
                     "description": "An identifier for the diffraction data set for this set of summary statistics.\n\n Multiple diffraction data sets entered as a comma separated list.", 
                     "type": "string"
                  }, 
                  "type": "array"
               }, 
               "observed_criterion_I_max": {
                  "description": "The criterion used to classify a reflection as 'observed'\n expressed as an upper limit for the value of I.", 
                  "type": "number"
               }, 
               "pdbx_chi_squared": {
                  "description": "Overall  Chi-squared statistic.", 
                  "type": "number"
               }, 
               "limit_l_max": {
                  "description": "Maximum value of the Miller index l for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_l_max.", 
                  "type": "integer"
               }, 
               "observed_criterion_sigma_I": {
                  "description": "The criterion used to classify a reflection as 'observed'\n expressed as a multiple of the value of sigma(I).", 
                  "type": "number"
               }, 
               "limit_h_min": {
                  "description": "Minimum value of the Miller index h for the reflection data. This\n need not have the same value as _diffrn_reflns.limit_h_min.", 
                  "type": "integer"
               }, 
               "pdbx_CC_half": {
                  "description": "             The Pearson's correlation coefficient expressed as a decimal value\n              between the average intensities from randomly selected\n              half-datasets.\n\n\t      Ref: Karplus & Diederichs (2012), Science 336, 1030-33\n", 
                  "type": "number"
               }, 
               "observed_criterion_sigma_F": {
                  "description": "The criterion used to classify a reflection as 'observed'\n expressed as a multiple of the value of sigma(F).", 
                  "type": "number"
               }
            }, 
            "required": [
               "pdbx_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_audit_revision_details": {
         "minItems": 1, 
         "items": {
            "properties": {
               "provider": {
                  "enum": [
                     "repository", 
                     "author"
                  ], 
                  "description": "The provider of the revision.", 
                  "examples": [
                     "repository"
                  ], 
                  "type": "string"
               }, 
               "data_content_type": {
                  "enum": [
                     "Structure model", 
                     "Structure factors", 
                     "NMR shifts", 
                     "NMR restraints"
                  ], 
                  "description": "The type of file that the pdbx_audit_revision_history record refers to.", 
                  "examples": [
                     "Structure model"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "A unique identifier for the pdbx_audit_revision_details record.", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }, 
               "type": {
                  "enum": [
                     "Initial release", 
                     "Coordinate replacement", 
                     "Obsolete"
                  ], 
                  "description": "A type classification of the revision", 
                  "examples": [
                     "Initial release"
                  ], 
                  "type": "string"
               }, 
               "revision_ordinal": {
                  "description": "A pointer to  _pdbx_audit_revision_history.ordinal", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }
            }, 
            "required": [
               "data_content_type", 
               "ordinal", 
               "revision_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_ensemble_rms": {
         "properties": {
            "chain_range_end": {
               "description": "The ending chain id:", 
               "examples": [
                  "A"
               ], 
               "type": "string"
            }, 
            "coord_average_rmsd_method": {
               "description": "Describe the method for calculating the coordinate average rmsd.", 
               "examples": [
                  "Replace with item example text"
               ], 
               "type": "string"
            }, 
            "bond_angle_rms_dev": {
               "description": "The bond angle rmsd to the target values for the ensemble.", 
               "examples": [
                  "0.60"
               ], 
               "type": "number"
            }, 
            "dihedral_angles_rms_dev": {
               "description": "The dihedral angle rmsd to the target values for the ensemble.", 
               "examples": [
                  "0.66"
               ], 
               "type": "number"
            }, 
            "covalent_bond_rms_dev": {
               "description": "The covalent bond rmsd to the target value for the ensemble.", 
               "examples": [
                  "0.0066"
               ], 
               "type": "number"
            }, 
            "distance_rms_dev_error": {
               "description": "The error in the distance rmsd.", 
               "examples": [
                  "0.07"
               ], 
               "type": "number"
            }, 
            "entry_id": {
               "description": "'?'", 
               "type": "string"
            }, 
            "dihedral_angles_rms_dev_error": {
               "description": "The error of the rmsd dihedral angles.", 
               "examples": [
                  "0.07"
               ], 
               "type": "number"
            }, 
            "atom_type": {
               "enum": [
                  "side chain heavy atoms", 
                  "all atoms", 
                  "all backbone atoms", 
                  "backbone heavy atoms", 
                  "all heavy atoms"
               ], 
               "description": "Statistics are often calculated over only some of the atoms,\n e.g. backbone, or heavy atoms. Describe which type of atoms are used for\n the statistical analysis.", 
               "examples": [
                  "backbone atoms", 
                  "heavy atoms"
               ], 
               "type": "string"
            }, 
            "residue_range_end": {
               "description": "The ending residue number: e.g. 32,69.", 
               "examples": [
                  "32", 
                  "69"
               ], 
               "type": "integer"
            }, 
            "distance_rms_dev": {
               "description": "The distance rmsd to the mean structure for the ensemble of structures.", 
               "examples": [
                  "0.22"
               ], 
               "type": "number"
            }, 
            "improper_torsion_angle_rms_dev": {
               "description": "The improper torsion angle rmsd to the target values for the ensemble.", 
               "examples": [
                  "0.64"
               ], 
               "type": "number"
            }, 
            "chain_range_begin": {
               "description": "The beginning chain id.", 
               "examples": [
                  "A"
               ], 
               "type": "string"
            }, 
            "residue_range_begin": {
               "description": "Structure statistics are often calculated only over the well-ordered region(s)\n of the biopolymer. Portions of the macromolecule are often mobile and\n disordered,  hence they are excluded in calculating the statistics. To define\n the range(s) over which the statistics are calculated, enter the beginning\n residue number(s): e.g. if the regions used were 5-32 and 41-69, enter 5,41", 
               "examples": [
                  "5", 
                  "41"
               ], 
               "type": "integer"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "em_experiment": {
         "properties": {
            "entity_assembly_id": {
               "description": "Foreign key to the EM_ENTITY_ASSEMBLY category", 
               "type": "string"
            }, 
            "aggregation_state": {
               "enum": [
                  "FILAMENT", 
                  "CELL", 
                  "TISSUE", 
                  "3D ARRAY", 
                  "PARTICLE", 
                  "2D ARRAY", 
                  "HELICAL ARRAY"
               ], 
               "description": "The aggregation/assembly state of the imaged specimen.", 
               "type": "string"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "id": {
               "description": "Placeholder ID.", 
               "type": "string"
            }, 
            "reconstruction_method": {
               "enum": [
                  "SUBTOMOGRAM AVERAGING", 
                  "HELICAL", 
                  "SINGLE PARTICLE", 
                  "CRYSTALLOGRAPHY", 
                  "TOMOGRAPHY"
               ], 
               "description": "The reconstruction method used in the EM experiment.", 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_buffer": {
         "minItems": 1, 
         "items": {
            "properties": {
               "name": {
                  "description": "The name of each buffer.", 
                  "examples": [
                     "Acetic acid"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _pdbx_buffer.id must\n uniquely identify the sample buffer.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details to do with buffer.", 
                  "examples": [
                     "aerated"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_virus_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_assembly_id": {
                  "description": "The value of _em_virus_shell.entity_assembly_id is\n a pointer to _em_entity_assembly.id\n category.", 
                  "type": "string"
               }, 
               "triangulation": {
                  "description": "The triangulation number (T number) is a geometric\n concept that refers to the organisation of subunits within the icosahedron.\n The triangulation number, T is given by the relationship\n T= h*2 + hk +k*2,  where h and k are positive integers which define the\n position of the five-fold vertex on the original hexagonal net.", 
                  "examples": [
                     "27"
                  ], 
                  "type": "integer"
               }, 
               "name": {
                  "description": "The name for this virus shell.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _em_em_virus_shell.id is a unique identifier for\n one virus shell.", 
                  "type": "string"
               }, 
               "diameter": {
                  "description": "The value of the diameter (in angstroms) for this virus shell.", 
                  "examples": [
                     "524.0"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "entity_assembly_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_phasing_MR": {
         "minItems": 1, 
         "items": {
            "properties": {
               "d_res_high_translation": {
                  "description": "The value of _pdbx_phasing_MR.d_res_high_translation identifies\n the highest resolution used for translation search.", 
                  "type": "number"
               }, 
               "model_details": {
                  "description": "The value of _pdbx_phasing_MR.model_details records the details of\n model used. For example, the original model can be truncated by\n deleting side chains,  doubtful parts, using the monomer if the\n original model was an oligomer. The search model may be one\n domain of a large molecule. What is the pdb IDs.", 
                  "type": "string"
               }, 
               "d_res_high_rotation": {
                  "description": "The value of _pdbx_phasing_MR.d_res_high_rotation identifies\n the highest resolution used for rotation search.", 
                  "type": "number"
               }, 
               "correlation_coeff_Io_to_Ic": {
                  "description": "The value of _pdbx_phasing_MR.correlation_coeff_Io_to_Ic identifies\n the correlation between the observed and the calculated intensity\n (~|F|^2) after rotation and translation.", 
                  "type": "number"
               }, 
               "method_translation": {
                  "description": "      The value of _pdbx_phasing_MR.method_translation identifies the method\n       used for translation search. For example in CNS, the translation method\n       may be \"general\" or \"phased\" with PC refinement target using\n       \"fastf2f2\" \"e2e2\" \"e1e1\" \"f2f2\" \"f1f1\" \"residual\" \"vector\".\n\n.", 
                  "type": "string"
               }, 
               "entry_id": {
                  "description": "The value of _pdbx_phasing_MR.entry_id identifies the data block.", 
                  "type": "string"
               }, 
               "d_res_low_translation": {
                  "description": "The value of _pdbx_phasing_MR.d_res_low_translation identifies\n the lowest resolution used for translation search.", 
                  "type": "number"
               }, 
               "packing": {
                  "description": "The value of _pdbx_phasing_MR.packing identifies the packing of\n search model in the unit cell. Too many crystallographic contacts\n may indicate a bad search.", 
                  "type": "number"
               }, 
               "sigma_F_translation": {
                  "description": "The value of _pdbx_phasing_MR.sigma_F_translation identifies the\n sigma cut off of structure factor used for translation search.", 
                  "type": "number"
               }, 
               "reflns_percent_translation": {
                  "description": "The value of _pdbx_phasing_MR.reflns_percent_translation identifies the\n completness of data used for translation search.", 
                  "type": "number"
               }, 
               "R_rigid_body": {
                  "description": "The value of _pdbx_phasing_MR.R_rigid_body identifies the R factor\n for rigid body refinement after rotation and translation.(In general,\n rigid body refinement has to be carried out after molecular\n replacement.\n", 
                  "type": "number"
               }, 
               "d_res_low_rotation": {
                  "description": "The value of _pdbx_phasing_MR.d_res_low_rotation identifies\n the lowest resolution used for rotation search.", 
                  "type": "number"
               }, 
               "R_factor": {
                  "description": "The value of _pdbx_phasing_MR.R_factor identifies the R factor\n (defined as uasual) after rotation and translation.\n", 
                  "type": "number"
               }, 
               "correlation_coeff_Fo_to_Fc": {
                  "description": "The value of _pdbx_phasing_MR.correlation_coeff_Fo_to_Fc identifies\n the correlation between the observed and the calculated structure\n factor after rotation and translation.", 
                  "type": "number"
               }, 
               "method_rotation": {
                  "description": "      The value of _pdbx_phasing_MR.method_rotation identifies the method\n       used for rotation search. For example, the rotation method may be\n       realspace,  fastdirect, or direct.\n.", 
                  "type": "string"
               }, 
               "sigma_F_rotation": {
                  "description": "The value of _pdbx_phasing_MR.sigma_F_rotation identifies the\n sigma cut off of structure factor used for rotation search.", 
                  "type": "number"
               }, 
               "reflns_percent_rotation": {
                  "description": "The value of _pdbx_phasing_MR.reflns_percent_rotation identifies the\n completness of data used for rotation search.", 
                  "type": "number"
               }
            }, 
            "required": [
               "entry_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MIR_der_site": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _phasing_MIR_der_site.id must uniquely identify each\n site in each derivative in the PHASING_MIR_DER_SITE list.\n\n The atom identifiers need not be unique over all sites in all\n derivatives; they need only be unique for each site in each\n derivative.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "Cartn_z": {
                  "description": "The z coordinate of this heavy-atom position in this derivative\n specified as orthogonal angstroms. The orthogonal Cartesian axes\n are related to the cell axes as specified by the description\n given in _atom_sites.Cartn_transform_axes.", 
                  "type": "number"
               }, 
               "occupancy": {
                  "description": "The fraction of the atom type present at this heavy-atom site\n in a given derivative. The sum of the occupancies of all the\n atom types at this site may not significantly exceed 1.0 unless\n it is a dummy site.", 
                  "type": "number"
               }, 
               "occupancy_anom_su": {
                  "description": "The standard uncertainty (estimated standard deviation) of\n _phasing_MIR_der_site.occupancy_anom.", 
                  "type": "number"
               }, 
               "B_iso": {
                  "description": "Isotropic displacement parameter for this heavy-atom site in this\n derivative.", 
                  "type": "number"
               }, 
               "occupancy_iso": {
                  "description": "The relative real isotropic occupancy of the atom type\n present at this heavy-atom site in a given derivative.\n This atom occupancy will probably be on an arbitrary scale.", 
                  "type": "number"
               }, 
               "atom_type_symbol": {
                  "description": "This data item is a pointer to _atom_type.symbol in the\n ATOM_TYPE category.\n\n The scattering factors referenced via this data item should be\n those used in the refinement of the heavy-atom data; in some\n cases this is the scattering factor for the single heavy\n atom, in other cases these are the scattering factors for an\n atomic cluster.", 
                  "type": "string"
               }, 
               "fract_x": {
                  "description": "The x coordinate of this heavy-atom position in this derivative\n specified as a fraction of _cell.length_a.", 
                  "type": "number"
               }, 
               "fract_y": {
                  "description": "The y coordinate of this heavy-atom position in this derivative\n specified as a fraction of _cell.length_b.", 
                  "type": "number"
               }, 
               "fract_z": {
                  "description": "The z coordinate of this heavy-atom position in this derivative\n specified as a fraction of _cell.length_c.", 
                  "type": "number"
               }, 
               "der_id": {
                  "description": "This data item is a pointer to _phasing_MIR_der.id in the\n PHASING_MIR_DER category.", 
                  "type": "string"
               }, 
               "Cartn_x": {
                  "description": "The x coordinate of this heavy-atom position in this derivative\n specified as orthogonal angstroms. The orthogonal Cartesian axes\n are related to the cell axes as specified by the description\n given in _atom_sites.Cartn_transform_axes.", 
                  "type": "number"
               }, 
               "Cartn_y": {
                  "description": "The y coordinate of this heavy-atom position in this derivative\n specified as orthogonal angstroms. The orthogonal Cartesian axes\n are related to the cell axes as specified by the description\n given in _atom_sites.Cartn_transform_axes.", 
                  "type": "number"
               }, 
               "occupancy_iso_su": {
                  "description": "The standard uncertainty (estimated standard deviation) of\n _phasing_MIR_der_site.occupancy_iso.", 
                  "type": "number"
               }, 
               "occupancy_anom": {
                  "description": "The relative anomalous occupancy of the atom type\n present at this heavy-atom site in a given derivative.\n This atom occupancy will probably be on an arbitrary scale.", 
                  "type": "number"
               }
            }, 
            "required": [
               "der_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_virus_natural_host": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_assembly_id": {
                  "description": "Pointer to _em_entity_assembly.id.", 
                  "type": "string"
               }, 
               "organism": {
                  "description": "The host organism from which the virus was isolated.", 
                  "examples": [
                     "Homo sapiens", 
                     "Gallus gallus"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "Unique identifier for the virus natural host.", 
                  "type": "string"
               }, 
               "ncbi_tax_id": {
                  "description": "The NCBI taxonomy of the host species from which the virus was isolated.", 
                  "type": "integer"
               }, 
               "strain": {
                  "description": "The strain of the host organism from which the virus was\n  obtained, if relevant.", 
                  "examples": [
                     "DH5a", 
                     "BMH 71-18"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_assembly_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_refine": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entry_id": {
                  "description": "You can leave this blank as an ID will be assigned by the RCSB\n to the constraint file.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Additional details about the NMR refinement.", 
                  "examples": [
                     "Additional comments about the NMR refinement can be placed here, e.g.\nthe structures are based on a total of 3344 restraints, 3167 are NOE-derived\ndistance constraints, 68 dihedral angle restraints,109 distance restraints\nfrom hydrogen bonds."
                  ], 
                  "type": "string"
               }, 
               "method": {
                  "description": "The method used to determine the structure.", 
                  "examples": [
                     "distance geometry\n  simulated annealing\n  molecular dynamics\n  matrix relaxation\n  torsion angle dynamics"
                  ], 
                  "type": "string"
               }, 
               "software_ordinal": {
                  "description": "Pointer to _software.ordinal", 
                  "type": "integer"
               }
            }, 
            "required": [
               "entry_id", 
               "software_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_buffer_components": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _pdbx_buffer_components.id must\n uniquely identify a component of the buffer.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details to do with buffer composition.", 
                  "examples": [
                     "pH adjusted with NaOH"
                  ], 
                  "type": "string"
               }, 
               "conc_units": {
                  "enum": [
                     "%", 
                     "g/L", 
                     "M", 
                     "mM", 
                     "mg/mL"
                  ], 
                  "description": "The concentration units of the component.", 
                  "examples": [
                     "mg/mL for mg per milliliter", 
                     "mM for millimolar", 
                     "% for percent by volume"
                  ], 
                  "type": "string"
               }, 
               "conc": {
                  "description": "The millimolar concentration of buffer component.", 
                  "examples": [
                     "200"
                  ], 
                  "type": "string"
               }, 
               "buffer_id": {
                  "description": "This data item is a pointer to _pdbx_buffer.id in the BUFFER category.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "The name of each buffer component.", 
                  "examples": [
                     "Acetic acid"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "buffer_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_sheet_hbond": {
         "minItems": 1, 
         "items": {
            "properties": {
               "range_id_1": {
                  "description": "This data item is a pointer to _struct_sheet_range.id in\n the STRUCT_SHEET_RANGE category.", 
                  "type": "string"
               }, 
               "range_1_auth_atom_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_atom_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_1_label_atom_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n    This data item is a pointer to _atom_site.label_atom_id in the\n    ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_1_label_asym_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_1_auth_asym_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_2_label_asym_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_2_label_atom_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_atom_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_1_label_seq_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "range_2_auth_atom_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_atom_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_1_PDB_ins_code": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_2_auth_seq_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_1_auth_seq_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_2_PDB_ins_code": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_2_label_seq_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "range_2_auth_asym_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "sheet_id": {
                  "description": "This data item is a pointer to _struct_sheet.id in the\n STRUCT_SHEET category.", 
                  "type": "string"
               }, 
               "range_2_auth_comp_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_id_2": {
                  "description": "This data item is a pointer to _struct_sheet_range.id in\n the STRUCT_SHEET_RANGE category.", 
                  "type": "string"
               }, 
               "range_1_auth_comp_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_2_label_comp_id": {
                  "description": "A component of the residue identifier for the second partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "range_1_label_comp_id": {
                  "description": "A component of the residue identifier for the first partner of the\n registration hydrogen bond between two residue ranges in a sheet.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "range_id_1", 
               "range_id_2", 
               "sheet_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_msym_gen": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_inst_id": {
                  "description": "This data item is a pointer to _pdbx_struct_entity_inst.id in\n the PDBX_STRUCT_ENTITY_INST category.", 
                  "type": "string"
               }, 
               "oper_expression": {
                  "description": "Identifies the operation from category PDBX_STRUCT_OPER_LIST.\n", 
                  "examples": [
                     "(1)", 
                     "(1-3)"
                  ], 
                  "type": "string"
               }, 
               "msym_id": {
                  "description": "Uniquely identifies the this structure instance in\n point symmetry unit.\n", 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_inst_id", 
               "msym_id", 
               "oper_expression"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_mod_residue": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _pdbx_struct_mod_residue.id must uniquely identify\n each item in the PDBX_STRUCT_MOD_RESIDUE list.\n\n This is an integer serial number.", 
                  "type": "integer"
               }, 
               "label_asym_id": {
                  "description": "Part of the identifier for the modified polymer component.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Details of the modification for this polymer component.", 
                  "type": "string"
               }, 
               "auth_comp_id": {
                  "description": "Part of the identifier for the modified polymer component.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "PDB_ins_code": {
                  "description": "Part of the identifier for the modified polymer component.\n\n This data item is a pointer to _atom_site.pdbx_PDB_ins_code in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "parent_comp_id": {
                  "description": "The parent component identifier for this modified polymer component.", 
                  "type": "string"
               }, 
               "auth_seq_id": {
                  "description": "Part of the identifier for the modified polymer component.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_asym_id": {
                  "description": "Part of the identifier for the modified polymer component.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "label_seq_id": {
                  "description": "Part of the identifier for the unobserved or zero occupancy residue.\n\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "label_comp_id": {
                  "description": "Part of the identifier for the modified polymer component.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_staining": {
         "minItems": 1, 
         "items": {
            "properties": {
               "material": {
                  "description": "The staining  material.", 
                  "examples": [
                     "Uranyl Acetate"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "Staining procedure used in the specimen preparation.", 
                  "examples": [
                     "Negatively stained EM specimens were prepared using a carbon-sandwich technique\n  and uranyl-formate stain."
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "This data item is the primary key of the category.", 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "NONE", 
                     "NEGATIVE", 
                     "POSITIVE"
                  ], 
                  "description": "type of staining", 
                  "type": "string"
               }, 
               "specimen_id": {
                  "description": "Foreign key relationship to the EMD SPECIMEN category", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nonpoly_scheme": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "Pointer to _atom_site.label_entity_id.", 
                  "type": "string"
               }, 
               "auth_mon_id": {
                  "description": "Author provided residue identifier.   This value may differ from the PDB residue\n identifier and may not correspond to residue identification within the coordinate records.", 
                  "type": "string"
               }, 
               "asym_id": {
                  "description": "Pointer to _atom_site.label_asym_id.", 
                  "examples": [
                     "1", 
                     "A", 
                     "2B3"
                  ], 
                  "type": "string"
               }, 
               "pdb_seq_num": {
                  "description": "PDB residue number.", 
                  "type": "string"
               }, 
               "pdb_mon_id": {
                  "description": "PDB residue identifier.", 
                  "type": "string"
               }, 
               "ndb_seq_num": {
                  "description": "NDB/RCSB residue number.", 
                  "type": "string"
               }, 
               "mon_id": {
                  "description": "Pointer to _atom_site.label_comp_id.", 
                  "type": "string"
               }, 
               "pdb_strand_id": {
                  "description": "PDB strand/chain id.", 
                  "type": "string"
               }, 
               "pdb_ins_code": {
                  "description": "PDB insertion code.", 
                  "type": "string"
               }, 
               "auth_seq_num": {
                  "description": "Author provided residue numbering.   This value may differ from the PDB residue\n number and may not correspond to residue numbering within the coordinate records.\n", 
                  "type": "string"
               }
            }, 
            "required": [
               "asym_id", 
               "ndb_seq_num"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "reflns_scale": {
         "minItems": 1, 
         "items": {
            "properties": {
               "group_code": {
                  "description": "The code identifying a scale _reflns_scale.meas_F,\n _reflns_scale.meas_F_squared or _reflns_scale.meas_intensity.\n These are linked to the REFLN list by the\n _refln.scale_group_code. These codes\n need not correspond to those in the DIFFRN_SCALE list.", 
                  "examples": [
                     "1", 
                     "2", 
                     "c1", 
                     "c2"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "group_code"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_phasing_dm_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "reflns": {
                  "description": "The value of _pdbx_phasing_dm_shell.reflns  identifies the number\n of centric and acentric reflections with resolution shells.", 
                  "type": "integer"
               }, 
               "reflns_acentric": {
                  "description": "The value of _pdbx_phasing_dm_shell.reflns_acentric  identifies the number\n of acentric reflections with resolution shells.", 
                  "type": "integer"
               }, 
               "fom_centric": {
                  "description": "The value of _pdbx_phasing_dm_shell.fom_centric  identifies the figure of merit\n for centric data with resolution shells.", 
                  "type": "number"
               }, 
               "fom_acentric": {
                  "description": "The value of _pdbx_phasing_dm_shell.fom_acentric  identifies the figure of merit\n for acentric data with resolution shells", 
                  "type": "number"
               }, 
               "d_res_low": {
                  "description": "The value of _pdbx_phasing_dm_shell.d_res_low  identifies low resolution\n", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "The value of _pdbx_phasing_dm_shell.d_res_high  identifies high resolution\n", 
                  "type": "number"
               }, 
               "fom": {
                  "description": "The value of _pdbx_phasing_dm_shell.fom identifies the figure of merit\n for all the data with resolution shells.", 
                  "type": "number"
               }, 
               "reflns_centric": {
                  "description": "The value of _pdbx_phasing_dm_shell.reflns_centric  identifies the number\n of centric reflections with resolution shells.", 
                  "type": "integer"
               }, 
               "delta_phi_final": {
                  "description": "The value of _pdbx_phasing_dm_shell.delta_phi_final  identifies phase difference\n after density modification with resolution shells.", 
                  "type": "number"
               }
            }, 
            "required": [
               "d_res_high", 
               "d_res_low"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_details": {
         "properties": {
            "entry_id": {
               "description": "The entry ID for the structure determination.", 
               "type": "string"
            }, 
            "text": {
               "description": "Additional details describing the NMR experiment.", 
               "examples": [
                  "This structure was determined using standard 2D homonuclear techniques.", 
                  "The structure was determined using triple-resonance NMR spectroscopy."
               ], 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "citation": {
         "minItems": 1, 
         "items": {
            "properties": {
               "coordinate_linkage": {
                  "enum": [
                     "yes", 
                     "n", 
                     "no", 
                     "y"
                  ], 
                  "description": "_citation.coordinate_linkage states whether this citation\n is concerned with precisely the set of coordinates given in the\n data block. If, for instance, the publication described the same\n structure, but the coordinates had undergone further refinement\n prior to the creation of the data block, the value of this data\n item would be 'no'.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _citation.id must uniquely identify a record in the\n CITATION list.\n\n The _citation.id 'primary' should be used to indicate the\n citation that the author(s) consider to be the most pertinent to\n the contents of the data block.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "primary", 
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "journal_abbrev": {
                  "description": "Abbreviated name of the cited journal as given in the\n Chemical Abstracts Service Source Index.", 
                  "examples": [
                     "J. Mol. Biol."
                  ], 
                  "type": "string"
               }, 
               "year": {
                  "description": "The year of the citation; relevant for journal articles, books\n and book chapters.", 
                  "examples": [
                     "1984"
                  ], 
                  "type": "integer"
               }, 
               "journal_issue": {
                  "description": "Issue number of the journal cited; relevant for journal\n articles.", 
                  "examples": [
                     "2"
                  ], 
                  "type": "string"
               }, 
               "book_publisher_city": {
                  "description": "The location of the publisher of the citation; relevant\n for books or book chapters.", 
                  "examples": [
                     "London"
                  ], 
                  "type": "string"
               }, 
               "book_publisher": {
                  "description": "The name of the publisher of the citation; relevant\n for books or book chapters.", 
                  "examples": [
                     "John Wiley and Sons"
                  ], 
                  "type": "string"
               }, 
               "pdbx_database_id_PubMed": {
                  "description": "Ascession number used by PubMed to categorize a specific\n bibliographic entry.", 
                  "examples": [
                     "12627512"
                  ], 
                  "type": "integer"
               }, 
               "page_first": {
                  "description": "The first page of the citation; relevant for journal\n articles, books and book chapters.", 
                  "type": "string"
               }, 
               "page_last": {
                  "description": "The last page of the citation; relevant for journal\n articles, books and book chapters.", 
                  "type": "string"
               }, 
               "journal_id_ISSN": {
                  "description": "The International Standard Serial Number (ISSN) code assigned to\n the journal cited; relevant for journal articles.", 
                  "type": "string"
               }, 
               "book_title": {
                  "description": "The title of the book in which the citation appeared; relevant\n for books or book chapters.", 
                  "type": "string"
               }, 
               "journal_volume": {
                  "description": "Volume number of the journal cited; relevant for journal\n articles.", 
                  "examples": [
                     "174"
                  ], 
                  "type": "string"
               }, 
               "country": {
                  "description": "The country of publication; relevant for books\n and book chapters.", 
                  "type": "string"
               }, 
               "journal_id_CSD": {
                  "description": "The Cambridge Structural Database (CSD) code assigned to the\n journal cited; relevant for journal articles. This is also the\n system used at the Protein Data Bank (PDB).", 
                  "examples": [
                     "0070"
                  ], 
                  "type": "string"
               }, 
               "book_id_ISBN": {
                  "description": "The International Standard Book Number (ISBN) code assigned to\n the book cited; relevant for books or book chapters.", 
                  "type": "string"
               }, 
               "pdbx_database_id_DOI": {
                  "description": "Document Object Identifier used by doi.org to uniquely\n specify bibliographic entry.", 
                  "examples": [
                     "10.2345/S1384107697000225"
                  ], 
                  "type": "string"
               }, 
               "language": {
                  "description": "Language in which the cited article is written.", 
                  "examples": [
                     "German"
                  ], 
                  "type": "string"
               }, 
               "unpublished_flag": {
                  "enum": [
                     "N", 
                     "Y"
                  ], 
                  "description": "Flag to indicate that this citation will not be published.", 
                  "type": "string"
               }, 
               "title": {
                  "description": "The title of the citation; relevant for journal articles, books\n and book chapters.", 
                  "examples": [
                     "Structure of diferric duck ovotransferrin\n                                  at 2.35 Angstroms resolution."
                  ], 
                  "type": "string"
               }, 
               "journal_id_ASTM": {
                  "description": "The American Society for Testing and Materials (ASTM) code\n assigned to the journal cited (also referred to as the CODEN\n designator of the Chemical Abstracts Service); relevant for\n journal articles.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_audit": {
         "properties": {
            "entry_id": {
               "description": "The value of _pdbx_audit.entry_id identifies the data block.", 
               "examples": [
                  "BDL001"
               ], 
               "type": "string"
            }, 
            "current_version": {
               "description": "The value of _pdbx_audit.entry_id identifies the data block.", 
               "examples": [
                  "1"
               ], 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "em_imaging": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _em_imaging.id must uniquely identify\n each imaging experiment.", 
                  "type": "string"
               }, 
               "nominal_magnification": {
                  "description": "The magnification indicated by the microscope readout.", 
                  "examples": [
                     "60000"
                  ], 
                  "type": "integer"
               }, 
               "temperature": {
                  "description": "The mean specimen stage temperature (degrees Kelvin) during imaging\n in the microscope.", 
                  "examples": [
                     "70"
                  ], 
                  "type": "number"
               }, 
               "mode": {
                  "enum": [
                     "OTHER", 
                     "DARK FIELD", 
                     "DIFFRACTION", 
                     "BRIGHT FIELD"
                  ], 
                  "description": "The mode of imaging.", 
                  "type": "string"
               }, 
               "tilt_angle_max": {
                  "description": "The maximum angle at which the specimen was tilted to obtain\n recorded images.", 
                  "examples": [
                     "70"
                  ], 
                  "type": "number"
               }, 
               "calibrated_magnification": {
                  "description": "The magnification value obtained for a known standard just\n prior to, during or just after the imaging experiment.", 
                  "examples": [
                     "61200"
                  ], 
                  "type": "integer"
               }, 
               "microscope_model": {
                  "enum": [
                     "JEOL 100B", 
                     "JEOL KYOTO-3000SFF", 
                     "JEOL 4000", 
                     "HITACHI HF2000", 
                     "JEOL 3100FFC", 
                     "FEI MORGAGNI", 
                     "JEOL 1200EX", 
                     "JEOL 100CX", 
                     "FEI/PHILIPS CM12", 
                     "FEI/PHILIPS CM10", 
                     "FEI TECNAI SPHERA", 
                     "FEI/PHILIPS CM300FEG/ST", 
                     "FEI/PHILIPS CM200FEG", 
                     "FEI/PHILIPS CM120T", 
                     "FEI/PHILIPS EM420", 
                     "FEI/PHILIPS CM300FEG/T", 
                     "FEI TITAN KRIOS", 
                     "FEI/PHILIPS EM400", 
                     "HITACHI H-9500SD", 
                     "ZEISS LEO912", 
                     "JEOL 2010", 
                     "FEI TALOS ARCTICA", 
                     "FEI/PHILIPS CM200T", 
                     "JEOL CRYO ARM 200", 
                     "JEOL 2200FS", 
                     "JEOL 1010", 
                     "JEOL 2200FSC", 
                     "JEOL 1230", 
                     "FEI POLARA 300", 
                     "FEI TECNAI 20", 
                     "JEOL 2000EXII", 
                     "HITACHI HF3000", 
                     "FEI TITAN", 
                     "JEOL 1400", 
                     "JEOL 3000SFF", 
                     "HITACHI H7600", 
                     "JEOL 2011", 
                     "JEOL 2010HC", 
                     "FEI/PHILIPS CM300FEG/HE", 
                     "FEI/PHILIPS CM200FEG/ST", 
                     "HITACHI EF3000", 
                     "FEI/PHILIPS CM200FEG/SOPHIE", 
                     "HITACHI EF2000", 
                     "FEI/PHILIPS CM200FEG/UT", 
                     "JEOL 2100F", 
                     "FEI TECNAI F30", 
                     "JEOL 2010UHR", 
                     "JEOL 2010HT", 
                     "JEOL 3100FEF", 
                     "FEI TECNAI SPIRIT", 
                     "FEI TECNAI ARCTICA", 
                     "JEOL 4000EX", 
                     "FEI TECNAI F20", 
                     "JEOL CRYO ARM 300", 
                     "JEOL 1200", 
                     "FEI TECNAI 10", 
                     "JEOL 2000EX", 
                     "FEI TECNAI 12", 
                     "JEOL 2010F", 
                     "JEOL 1200EXII", 
                     "SIEMENS SULEIKA", 
                     "JEOL 3200FS", 
                     "JEOL 2100", 
                     "ZEISS LIBRA120PLUS", 
                     "JEOL 3200FSC"
                  ], 
                  "description": "The name of the model of microscope.", 
                  "type": "string"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "electron_beam_tilt_params": {
                  "description": "electron beam tilt params", 
                  "type": "string"
               }, 
               "residual_tilt": {
                  "description": "residual tilt of the electron beam", 
                  "type": "number"
               }, 
               "c2_aperture_diameter": {
                  "description": "C2 lens aperture diameter, in mm", 
                  "type": "number"
               }, 
               "specimen_id": {
                  "description": "Foreign key to the EM_SPECIMEN category", 
                  "type": "string"
               }, 
               "specimen_holder_type": {
                  "description": "The type of specimen holder used during imaging.", 
                  "examples": [
                     "cryo"
                  ], 
                  "type": "string"
               }, 
               "detector_distance": {
                  "description": "The camera length (in millimeters). The camera length is the\n product of the objective focal length and the combined magnification\n of the intermediate and projector lenses when the microscope is\n operated in the diffraction mode.", 
                  "type": "number"
               }, 
               "alignment_procedure": {
                  "enum": [
                     "NONE", 
                     "BASIC", 
                     "ZEMLIN TABLEAU", 
                     "COMA FREE", 
                     "OTHER"
                  ], 
                  "description": "microscope alignment procedure", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional imaging details.", 
                  "examples": [
                     "Preliminary grid screening was performed manually."
                  ], 
                  "type": "string"
               }, 
               "recording_temperature_minimum": {
                  "description": "The specimen temperature minimum (degrees Kelvin) for the duration\n of imaging.", 
                  "type": "number"
               }, 
               "date": {
                  "format": "date", 
                  "description": "Date (YYYY-MM-DD) of imaging experiment or the date at which\n a series of experiments began.", 
                  "examples": [
                     "2001-05-08"
                  ], 
                  "type": "string"
               }, 
               "electron_source": {
                  "description": "The source of electrons. The electron gun.", 
                  "type": "string"
               }, 
               "illumination_mode": {
                  "enum": [
                     "FLOOD BEAM", 
                     "SPOT SCAN", 
                     "OTHER"
                  ], 
                  "description": "The mode of illumination.", 
                  "type": "string"
               }, 
               "nominal_cs": {
                  "description": "The spherical aberration coefficient (Cs) in millimeters,\n of the objective lens.", 
                  "examples": [
                     "2.0"
                  ], 
                  "type": "number"
               }, 
               "astigmatism": {
                  "description": "astigmatism", 
                  "type": "string"
               }, 
               "accelerating_voltage": {
                  "description": "A value of accelerating voltage (in kV) used for imaging.", 
                  "examples": [
                     "300"
                  ], 
                  "type": "integer"
               }, 
               "nominal_defocus_max": {
                  "description": "The maximum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images.", 
                  "examples": [
                     "5000"
                  ], 
                  "type": "number"
               }, 
               "nominal_defocus_min": {
                  "description": "The minimum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images.", 
                  "examples": [
                     "1200"
                  ], 
                  "type": "number"
               }, 
               "calibrated_defocus_min": {
                  "description": "The minimum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images.", 
                  "examples": [
                     "1200"
                  ], 
                  "type": "number"
               }, 
               "cryogen": {
                  "enum": [
                     "HELIUM", 
                     "NITROGEN"
                  ], 
                  "description": "Cryogen type used to maintain the specimen stage temperature during imaging\n in the microscope.", 
                  "type": "string"
               }, 
               "recording_temperature_maximum": {
                  "description": "The specimen temperature maximum (degrees Kelvin) for the duration\n of imaging.", 
                  "type": "number"
               }, 
               "tilt_angle_min": {
                  "description": "The minimum angle at which the specimen was tilted to obtain\n recorded images.", 
                  "examples": [
                     "-70"
                  ], 
                  "type": "number"
               }, 
               "specimen_holder_model": {
                  "enum": [
                     "GATAN ULTDT ULTRA LOW TEMPERATURE DOUBLE TILT HELIUM COOLING HOLDER", 
                     "FISCHIONE INSTRUMENTS DUAL AXIS TOMOGRAPHY HOLDER", 
                     "GATAN 915 DOUBLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER", 
                     "HOME BUILD", 
                     "GATAN HC 3500 SINGLE TILT HEATING/NITROGEN COOLING HOLDER", 
                     "GATAN 910 MULTI-SPECIMEN SINGLE TILT CRYO TRANSFER HOLDER", 
                     "GATAN ULTST ULTRA LOW TEMPERATURE SINGLE TILT HELIUM COOLING HOLDER", 
                     "OTHER", 
                     "FEI TITAN KRIOS AUTOGRID HOLDER", 
                     "PHILIPS ROTATION HOLDER", 
                     "GATAN 914 HIGH TILT LIQUID NITROGEN CRYO TRANSFER TOMOGRAPHY HOLDER", 
                     "GATAN CHDT 3504 DOUBLE TILT HIGH RESOLUTION NITROGEN COOLING HOLDER", 
                     "GATAN UHRST 3500 SINGLE TILT ULTRA HIGH RESOLUTION NITROGEN COOLING HOLDER", 
                     "GATAN CT3500TR SINGLE TILT ROTATION LIQUID NITROGEN CRYO TRANSFER HOLDER", 
                     "GATAN 626 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER", 
                     "GATAN CT3500 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER", 
                     "GATAN HCHDT 3010 DOUBLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER", 
                     "JEOL CRYOSPECPORTER", 
                     "JEOL", 
                     "GATAN LIQUID NITROGEN", 
                     "JEOL 3200FSC CRYOHOLDER", 
                     "GATAN HCHST 3008 SINGLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER", 
                     "GATAN HELIUM", 
                     "SIDE ENTRY, EUCENTRIC"
                  ], 
                  "description": "The name of the model of specimen holder used during imaging.", 
                  "type": "string"
               }, 
               "calibrated_defocus_max": {
                  "description": "The maximum defocus value of the objective lens (in nanometers) used\n to obtain the recorded images.", 
                  "examples": [
                     "5000"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "entry_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_exptl_sample_conditions": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pH": {
                  "description": "The pH at which the NMR data were collected.", 
                  "examples": [
                     "3.1", 
                     "7.0"
                  ], 
                  "type": "string"
               }, 
               "pressure_units": {
                  "description": "The units of pressure at which NMR data were collected.", 
                  "examples": [
                     "Pa", 
                     "atm", 
                     "Torr"
                  ], 
                  "type": "string"
               }, 
               "pressure": {
                  "description": "The pressure at which NMR data were collected.", 
                  "examples": [
                     "ambient", 
                     "1atm"
                  ], 
                  "type": "string"
               }, 
               "temperature": {
                  "description": "The temperature (in Kelvin) at which NMR data were\n collected.", 
                  "examples": [
                     "298"
                  ], 
                  "type": "string"
               }, 
               "temperature_units": {
                  "enum": [
                     "C", 
                     "K", 
                     "Not defined"
                  ], 
                  "description": "\nUnits for the value of the sample condition temperature.", 
                  "examples": [
                     "K"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "\nGeneral details describing conditions of both the sample and the environment\nduring measurements.", 
                  "examples": [
                     "The high salinity of the sample may have contributed to overheating of the sample during experiments with long saturation periods like the TOCSY experiments."
                  ], 
                  "type": "string"
               }, 
               "ionic_strength_err": {
                  "description": "\nEstimate of the standard error for the value for the sample ionic strength.", 
                  "examples": [
                     "0.2"
                  ], 
                  "type": "number"
               }, 
               "pressure_err": {
                  "description": "\nEstimate of the standard error for the value for the sample pressure.", 
                  "examples": [
                     "0.01"
                  ], 
                  "type": "number"
               }, 
               "ionic_strength": {
                  "description": "The ionic strength at which the NMR data were collected -in lieu of\n this enter the concentration and identity of the salt in the sample.", 
                  "type": "string"
               }, 
               "temperature_err": {
                  "description": "\nEstimate of the standard error for the value for the sample temperature.", 
                  "examples": [
                     "0.2"
                  ], 
                  "type": "number"
               }, 
               "ionic_strength_units": {
                  "enum": [
                     "Not defined", 
                     "M", 
                     "mM"
                  ], 
                  "description": "\nUnits for the value of the sample condition ionic strength..", 
                  "examples": [
                     "M"
                  ], 
                  "type": "string"
               }, 
               "label": {
                  "description": "\nA descriptive label that uniquely identifies this set of sample conditions.", 
                  "examples": [
                     "conditions_1"
                  ], 
                  "type": "string"
               }, 
               "pH_units": {
                  "enum": [
                     "pH", 
                     "Not defined", 
                     "pD", 
                     "pH*"
                  ], 
                  "description": "\nUnits for the value of the sample condition pH.", 
                  "examples": [
                     "pH"
                  ], 
                  "type": "string"
               }, 
               "pH_err": {
                  "description": "\nEstimate of the standard error for the value for the sample pH.", 
                  "examples": [
                     "0.05"
                  ], 
                  "type": "number"
               }, 
               "conditions_id": {
                  "description": "The condition number as defined above.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "conditions_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine_funct_minimized": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_funct_minimized.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "type": {
                  "description": "The type of the function being minimized.", 
                  "type": "string"
               }
            }, 
            "required": [
               "pdbx_refine_id", 
               "type"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_database_status": {
         "properties": {
            "status_code_mr": {
               "enum": [
                  "HOLD", 
                  "OBS", 
                  "WAIT", 
                  "WDRN", 
                  "AUTH", 
                  "RMVD", 
                  "REL", 
                  "POLC", 
                  "HPUB", 
                  "REPL", 
                  "PROC"
               ], 
               "description": "Code for status of NMR constraints file.", 
               "examples": [
                  "PROC  = To be processed\n     REL   = Release\n     HOLD  = On hold until yyyy-mm-dd\n     HPUB  = On hold until publication\n     OBS   = Entry has been obsoleted and replaced by another entry\n     WDRN  = Entry has been withdrawn by depositor\n     WAIT  = Awaiting author approval"
               ], 
               "type": "string"
            }, 
            "methods_development_category": {
               "enum": [
                  "CAPRI", 
                  "D3R", 
                  "CASP", 
                  "GPCR Dock", 
                  "RNA-Puzzles", 
                  "CASD-NMR", 
                  "FoldIt"
               ], 
               "description": "The methods development category in which this\n entry has been placed.", 
               "examples": [
                  "CASP", 
                  "CASD-NMR"
               ], 
               "type": "string"
            }, 
            "pdb_format_compatible": {
               "enum": [
                  "N", 
                  "Y"
               ], 
               "description": "A flag indicating that the entry is compatible with the PDB format.\n\n A value of 'N' indicates that the no PDB format data file is\n corresponding to this entry is available in the PDB archive.\n", 
               "examples": [
                  "Y"
               ], 
               "type": "string"
            }, 
            "recvd_initial_deposition_date": {
               "format": "date", 
               "description": "The date of initial deposition.  (The first message for\n deposition has been received.)", 
               "examples": [
                  "1983-02-21"
               ], 
               "type": "string"
            }, 
            "process_site": {
               "enum": [
                  "PDBE", 
                  "RCSB", 
                  "NDB", 
                  "PDBJ", 
                  "BNL"
               ], 
               "description": "The site where the file was deposited.\n", 
               "examples": [
                  "NDB", 
                  "RCSB", 
                  "PDBE", 
                  "PDBJ", 
                  "BNL"
               ], 
               "type": "string"
            }, 
            "entry_id": {
               "description": "The value of _pdbx_database_status.entry_id identifies the data block.\n", 
               "examples": [
                  "BDL001"
               ], 
               "type": "string"
            }, 
            "status_code": {
               "enum": [
                  "HOLD", 
                  "REFI", 
                  "OBS", 
                  "WAIT", 
                  "WDRN", 
                  "AUTH", 
                  "TRSF", 
                  "REL", 
                  "REV", 
                  "POLC", 
                  "HPUB", 
                  "REPL", 
                  "PROC", 
                  "UPD", 
                  "DEL", 
                  "RMVD", 
                  "AUCO", 
                  "BIB"
               ], 
               "description": "Code for status of file.", 
               "examples": [
                  "REL", 
                  "HPUB"
               ], 
               "type": "string"
            }, 
            "SG_entry": {
               "enum": [
                  "N", 
                  "Y"
               ], 
               "description": "This code indicates whether the entry belongs to\n Structural Genomics Project.", 
               "examples": [
                  "Y"
               ], 
               "type": "string"
            }, 
            "status_code_cs": {
               "enum": [
                  "HOLD", 
                  "OBS", 
                  "WAIT", 
                  "RMVD", 
                  "AUTH", 
                  "WDRN", 
                  "REL", 
                  "POLC", 
                  "HPUB", 
                  "REPL", 
                  "PROC"
               ], 
               "description": "Code for status of chemical shift data file.", 
               "examples": [
                  "PROC  = Processing in progress\n     WAIT  = Awaiting author approval\n     REL   = Release\n     HOLD  = On hold until yyyy-mm-dd\n     HPUB  = On hold until publication\n     OBS   = Entry has been obsoleted and replaced by another entry\n     WDRN  = Entry has been withdrawn by depositor"
               ], 
               "type": "string"
            }, 
            "status_code_sf": {
               "enum": [
                  "HOLD", 
                  "OBS", 
                  "WAIT", 
                  "WDRN", 
                  "AUTH", 
                  "RMVD", 
                  "REL", 
                  "POLC", 
                  "HPUB", 
                  "REPL", 
                  "PROC"
               ], 
               "description": "Code for status of structure factor file.", 
               "examples": [
                  "PROC  = To be processed\n     REL   = Released\n     HOLD  = On hold until yyyy-mm-dd\n     HPUB  = On hold until publication\n     OBS   = Entry has been obsoleted and replaced by another entry\n     WDRN  = Entry has been withdrawn by depositor\n     WAIT  = Awaiting author approval"
               ], 
               "type": "string"
            }, 
            "deposit_site": {
               "enum": [
                  "BNL", 
                  "BMRB", 
                  "RCSB", 
                  "PDBJ", 
                  "PDBE", 
                  "NDB"
               ], 
               "description": "The site where the file was deposited.\n", 
               "examples": [
                  "NDB", 
                  "RCSB", 
                  "PDBE", 
                  "PDBJ", 
                  "BMRB", 
                  "BNL"
               ], 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "entity_name_com": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "A common name for the entity.", 
                  "examples": [
                     "HIV protease monomer", 
                     "hemoglobin alpha chain", 
                     "2-fluoro-1,4-dichloro benzene", 
                     "arbutin"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_ref_seq_dif": {
         "minItems": 1, 
         "items": {
            "properties": {
               "db_mon_id": {
                  "description": "The monomer type found at this position in the referenced\n database entry.\n\n This data item is a pointer to _chem_comp.id in the CHEM_COMP\n category.", 
                  "type": "string"
               }, 
               "pdbx_ordinal": {
                  "description": "A synthetic integer primary key for this category.", 
                  "type": "integer"
               }, 
               "pdbx_pdb_ins_code": {
                  "description": "Insertion code in PDB sequence\n", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "pdbx_pdb_strand_id": {
                  "description": "PDB strand/chain id.", 
                  "examples": [
                     "A", 
                     "B"
                  ], 
                  "type": "string"
               }, 
               "pdbx_auth_seq_num": {
                  "description": "Insertion code in PDB sequence\n", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "mon_id": {
                  "description": "The monomer type found at this position in the sequence of\n the entity or biological unit described in this data block.\n\n This data item is a pointer to _chem_comp.id in the CHEM_COMP\n category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the point differences\n between the sequence of the entity or biological unit described\n in the data block and that in the referenced database entry.", 
                  "type": "string"
               }, 
               "pdbx_seq_db_seq_num": {
                  "description": "Sequence database sequence number.\n", 
                  "examples": [
                     "142"
                  ], 
                  "type": "string"
               }, 
               "pdbx_seq_db_accession_code": {
                  "description": "Sequence database accession number.", 
                  "examples": [
                     "P07617"
                  ], 
                  "type": "string"
               }, 
               "pdbx_pdb_id_code": {
                  "description": "\nThe PDB ID code.", 
                  "examples": [
                     "1BBP"
                  ], 
                  "type": "string"
               }, 
               "seq_num": {
                  "description": "This data item is a pointer to _entity_poly_seq.num in the\n ENTITY_POLY_SEQ category.", 
                  "type": "integer"
               }, 
               "align_id": {
                  "description": "This data item is a pointer to _struct_ref_seq.align_id in\n the STRUCT_REF_SEQ  category.", 
                  "type": "string"
               }, 
               "pdbx_seq_db_name": {
                  "description": "Sequence database name.\n", 
                  "examples": [
                     "SWS"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "pdbx_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_vitrification": {
         "minItems": 1, 
         "items": {
            "properties": {
               "temp": {
                  "description": "The vitrification temperature (in degrees Kelvin), e.g.,\n  temperature of the plunge instrument cryogen bath.", 
                  "examples": [
                     "90"
                  ], 
                  "type": "number"
               }, 
               "humidity": {
                  "description": "The humidity (%) in the vicinity of the vitrification process.", 
                  "examples": [
                     "90"
                  ], 
                  "type": "number"
               }, 
               "id": {
                  "description": "The value of _em_vitrification.id must uniquely identify\n the vitrification procedure.", 
                  "type": "string"
               }, 
               "chamber_temperature": {
                  "description": "The temperature (in degrees Kelvin) of the sample just prior to vitrification.", 
                  "examples": [
                     "298"
                  ], 
                  "type": "number"
               }, 
               "method": {
                  "description": "The procedure for vitrification.", 
                  "examples": [
                     "plunge freezing"
                  ], 
                  "type": "string"
               }, 
               "cryogen_name": {
                  "enum": [
                     "OTHER", 
                     "FREON 12", 
                     "METHANE", 
                     "PROPANE", 
                     "ETHANE-PROPANE", 
                     "HELIUM", 
                     "NITROGEN", 
                     "ETHANE", 
                     "FREON 22"
                  ], 
                  "description": "This is the name of the cryogen.", 
                  "type": "string"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details relating to vitrification.", 
                  "examples": [
                     "Vitrification carried out in argon atmosphere."
                  ], 
                  "type": "string"
               }, 
               "instrument": {
                  "enum": [
                     "FEI VITROBOT MARK IV", 
                     "FEI VITROBOT MARK III", 
                     "ZEISS PLUNGE FREEZER CRYOBOX", 
                     "EMS-002 RAPID IMMERSION FREEZER", 
                     "HOMEMADE PLUNGER", 
                     "SPOTITON", 
                     "GATAN CRYOPLUNGE 3", 
                     "FEI VITROBOT MARK I", 
                     "LEICA EM CPC", 
                     "REICHERT-JUNG PLUNGER", 
                     "LEICA PLUNGER", 
                     "LEICA EM GP", 
                     "FEI VITROBOT MARK II", 
                     "LEICA KF80"
                  ], 
                  "description": "The type of instrument used in the vitrification process.", 
                  "type": "string"
               }, 
               "time_resolved_state": {
                  "description": "The length of time after an event effecting the sample that\n vitrification was induced and a description of the event.", 
                  "examples": [
                     "plunge 30 msec after spraying with effector"
                  ], 
                  "type": "string"
               }, 
               "specimen_id": {
                  "description": "This data item is a pointer to _em_specimen.id", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "specimen_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_diffraction_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "Unique identifier for the category em_diffraction_shell", 
                  "type": "string"
               }, 
               "fourier_space_coverage": {
                  "description": "Completeness of the structure factor data within this resolution shell, in percent", 
                  "examples": [
                     "93.2"
                  ], 
                  "type": "number"
               }, 
               "phase_residual": {
                  "description": "Phase residual for this resolution shell, in degrees", 
                  "examples": [
                     "13.5"
                  ], 
                  "type": "number"
               }, 
               "low_resolution": {
                  "description": "Low resolution limit for this shell (Angstroms)", 
                  "examples": [
                     "5.5"
                  ], 
                  "type": "number"
               }, 
               "em_diffraction_stats_id": {
                  "description": "Pointer to EM CRYSTALLOGRAPHY STATS", 
                  "type": "string"
               }, 
               "multiplicity": {
                  "description": "Multiplicity (average number of measurements) for the structure factors in this resolution shell", 
                  "examples": [
                     "2.5"
                  ], 
                  "type": "number"
               }, 
               "num_structure_factors": {
                  "description": "Number of measured structure factors in this resolution shell", 
                  "examples": [
                     "244"
                  ], 
                  "type": "integer"
               }, 
               "high_resolution": {
                  "description": "High resolution limit for this shell (Angstroms)", 
                  "examples": [
                     "3.0"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_sample_support": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _em_sample_support.id must uniquely identify\n the sample support.", 
                  "type": "string"
               }, 
               "film_material": {
                  "enum": [
                     "PARLODION PLUS CARBON", 
                     "HOLEY CARBON", 
                     "CARBON", 
                     "CELLULOSE ACETATE PLUS CARBON", 
                     "FORMVAR PLUS CARBON"
                  ], 
                  "description": "The support material covering the em grid.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details concerning the sample support.", 
                  "examples": [
                     "The grid was coated with gold prior to use"
                  ], 
                  "type": "string"
               }, 
               "grid_mesh_size": {
                  "description": "The value of the mesh size (divisions per inch) of the em grid.", 
                  "examples": [
                     "400"
                  ], 
                  "type": "integer"
               }, 
               "grid_type": {
                  "description": "A description of the grid type.", 
                  "type": "string"
               }, 
               "specimen_id": {
                  "description": "This data item is a pointer to _em_sample_preparation.id in the EM_SPECIMEN category.", 
                  "type": "string"
               }, 
               "grid_material": {
                  "enum": [
                     "GOLD", 
                     "COPPER/RHODIUM", 
                     "TITANIUM", 
                     "GRAPHENE OXIDE", 
                     "SILICON NITRIDE", 
                     "PLATINUM", 
                     "TUNGSTEN", 
                     "COPPER", 
                     "COPPER/PALLADIUM", 
                     "MOLYBDENUM", 
                     "NICKEL"
                  ], 
                  "description": "The name of the material from which the grid is made.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "specimen_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_assembly_auth_evidence": {
         "minItems": 1, 
         "items": {
            "properties": {
               "experimental_support": {
                  "enum": [
                     "mass spectrometry", 
                     "homology", 
                     "fluorescence resonance energy transfer", 
                     "gel filtration", 
                     "SAXS", 
                     "microscopy", 
                     "immunoprecipitation", 
                     "light scattering", 
                     "scanning transmission electron microscopy", 
                     "none", 
                     "assay for oligomerization", 
                     "equilibrium centrifugation", 
                     "isothermal titration calorimetry", 
                     "cross-linking", 
                     "surface plasmon resonance", 
                     "native gel electrophoresis"
                  ], 
                  "description": "Provides the experimental method to determine the state of this assembly", 
                  "type": "string"
               }, 
               "assembly_id": {
                  "description": "This item references an assembly in pdbx_struct_assembly", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Provides any additional information regarding the evidence of this assembly", 
                  "type": "string"
               }, 
               "id": {
                  "description": "Identifies a unique record in pdbx_struct_assembly_auth_evidence.", 
                  "type": "string"
               }
            }, 
            "required": [
               "assembly_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_crystal_formation": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "This data item is the primary key of the category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Description of growth of a 2D, 3D, or helical crystal array.", 
                  "examples": [
                     "Lysozyme (200 mg/ml) was mixed 1 to 1 with precipitant solution (3.5M sodium chloride,\n   15% PEG5000, 50 mM sodium acetate pH 4.5). Microcrystals were grown by the hanging drop method."
                  ], 
                  "type": "string"
               }, 
               "temperature": {
                  "description": "The value of the temperature in degrees Kelvin used for\n growing the crystals.", 
                  "examples": [
                     "298"
                  ], 
                  "type": "integer"
               }, 
               "time_unit": {
                  "enum": [
                     "MINUTE", 
                     "HOUR", 
                     "MONTH", 
                     "YEAR", 
                     "DAY"
                  ], 
                  "description": "Time unit for array crystallization", 
                  "type": "string"
               }, 
               "lipid_protein_ratio": {
                  "description": "The molar ratio of lipid to protein in the crystallized sample", 
                  "examples": [
                     "5.0"
                  ], 
                  "type": "number"
               }, 
               "instrument": {
                  "description": "Instrument used to prepare the crystalline array", 
                  "examples": [
                     "Langmuir trough", 
                     "Gryphon LCP"
                  ], 
                  "type": "string"
               }, 
               "lipid_mixture": {
                  "description": "Description of the lipid mixture used for crystallization", 
                  "examples": [
                     "monoolein and monopalmitolein were mixed 1:1"
                  ], 
                  "type": "string"
               }, 
               "time": {
                  "description": "Time period for array crystallization, in time unit indicated (min, hr, day, month, year)", 
                  "examples": [
                     "50"
                  ], 
                  "type": "integer"
               }, 
               "specimen_id": {
                  "description": "Foreign key relationship to the EMD SPECIMEN category", 
                  "type": "string"
               }, 
               "atmosphere": {
                  "description": "The type of atmosphere in which crystals were grown", 
                  "examples": [
                     "Crystallization was performed in an environmental chamber with constant nitrogen gas flow."
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_exptl_crystal_cryo_treatment": {
         "minItems": 1, 
         "items": {
            "properties": {
               "soaking_details": {
                  "description": "Details of the soaking treatment applied to this crystal.", 
                  "examples": [
                     "A series of 1 min soaks beginning at 5% (v/v) glycerol in precipitant,\n   transiting to 20% (v/v) glycerol, and finally to 25% glycerol"
                  ], 
                  "type": "string"
               }, 
               "final_solution_details": {
                  "description": "Details of the final solution used in the treatment of this crystal", 
                  "examples": [
                     "25% (v/v) glycerol in precipitant solution"
                  ], 
                  "type": "string"
               }, 
               "crystal_id": {
                  "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category.", 
                  "type": "string"
               }, 
               "cooling_details": {
                  "description": "Details of the cooling treatment applied to this crystal.", 
                  "examples": [
                     "Direct immersion in liquid nitrogen"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "crystal_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "chem_link": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _chem_link.id must uniquely identify each\n item in the CHEM_LINK list.", 
                  "examples": [
                     "peptide", 
                     "oligosaccharide 1,4", 
                     "DNA"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_refine_tls_group": {
         "minItems": 1, 
         "items": {
            "properties": {
               "selection": {
                  "description": "A qualification of the subset of atoms in the specified\n range included in the TLS fragment.", 
                  "examples": [
                     "all", 
                     "mnc", 
                     "sdc"
                  ], 
                  "type": "string"
               }, 
               "end_label_seq_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range ends.\n", 
                  "examples": [
                     "1", 
                     "303"
                  ], 
                  "type": "integer"
               }, 
               "id": {
                  "description": "The value of _pdbx_refine_tls_group.id must uniquely identify\n a record in the REFINE_TLS_GROUP list for a particular refinement.\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "1", 
                     "A"
                  ], 
                  "type": "string"
               }, 
               "selection_details": {
                  "description": "A text description of subset of atoms included\n included in the TLS fragment.", 
                  "type": "string"
               }, 
               "beg_label_asym_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range begins.\n\n This data item is a pointer to _struct_asym.id in the\n STRUCT_ASYM category.", 
                  "examples": [
                     "O", 
                     "2B3"
                  ], 
                  "type": "string"
               }, 
               "beg_auth_asym_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range begins.\n", 
                  "examples": [
                     "O", 
                     "2B3"
                  ], 
                  "type": "string"
               }, 
               "beg_auth_seq_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range begins.\n", 
                  "examples": [
                     "1", 
                     "5A"
                  ], 
                  "type": "string"
               }, 
               "end_auth_seq_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range ends.", 
                  "examples": [
                     "1", 
                     "5A"
                  ], 
                  "type": "string"
               }, 
               "beg_label_seq_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range begins.\n", 
                  "examples": [
                     "1", 
                     "303"
                  ], 
                  "type": "integer"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _pdbx_refine_tls_group.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "end_label_asym_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range ends.\n\n This data item is a pointer to _struct_asym.id in the\n STRUCT_ASYM category.\n", 
                  "examples": [
                     "O", 
                     "2B3"
                  ], 
                  "type": "string"
               }, 
               "refine_tls_id": {
                  "description": "This data item is a pointer to _pdbx_refine_tls.id in the\n REFINE_TLS category.", 
                  "type": "string"
               }, 
               "end_auth_asym_id": {
                  "description": "A component of the identifier for the residue at which the\n TLS fragment range ends.\n", 
                  "examples": [
                     "O", 
                     "2B3"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_ensemble": {
         "properties": {
            "conformers_calculated_total_number": {
               "description": "The total number of conformer (models) that were calculated in the final round.", 
               "examples": [
                  "40"
               ], 
               "type": "integer"
            }, 
            "average_distance_constraint_violation": {
               "description": "The average distance restraint violation for the ensemble.", 
               "examples": [
                  "0.11"
               ], 
               "type": "number"
            }, 
            "average_constraints_per_residue": {
               "description": "The average number of constraints per residue for the ensemble", 
               "examples": [
                  "30.2"
               ], 
               "type": "integer"
            }, 
            "distance_constraint_violation_method": {
               "description": "Describe the method used to calculate the distance constraint violation statistics,\n i.e. are they calculated over all the distance constraints or calculated for\n violations only?", 
               "examples": [
                  "Statistics were calculated over all of the distance constraints.", 
                  "Statistics were calculated for violations only"
               ], 
               "type": "string"
            }, 
            "maximum_torsion_angle_constraint_violation": {
               "description": "The maximum torsion angle constraint violation for the ensemble.", 
               "examples": [
                  "4"
               ], 
               "type": "number"
            }, 
            "conformer_selection_criteria": {
               "description": "\nBy highlighting the appropriate choice(s), describe how the submitted\nconformer (models) were selected.", 
               "examples": [
                  "structures with the lowest energy", 
                  "structures with the least restraint violations", 
                  "structures with acceptable covalent geometry", 
                  "structures with favorable non-bond energy", 
                  "target function", 
                  "back calculated data agree with experimental NOESY spectrum", 
                  "all calculated structures submitted", 
                  "The submitted conformer models are the 25 structures with the lowest\n    energy.", 
                  "The submitted conformer models are those with the fewest number of\n    constraint violations."
               ], 
               "type": "string"
            }, 
            "conformers_submitted_total_number": {
               "description": "The number of conformer (models) that are submitted for the ensemble.", 
               "examples": [
                  "20"
               ], 
               "type": "integer"
            }, 
            "maximum_upper_distance_constraint_violation": {
               "description": "The maximum upper distance constraint violation for the ensemble.", 
               "examples": [
                  "0.4"
               ], 
               "type": "number"
            }, 
            "torsion_angle_constraint_violation_method": {
               "description": " This item describes the method used to calculate the torsion angle constraint violation statistics.\ni.e. are the entered values based on all torsion angle or calculated for violations only?", 
               "examples": [
                  "Statistics were calculated over all the torsion angle constraints.", 
                  "Statistics were calculated for torsion angle constraints violations only."
               ], 
               "type": "string"
            }, 
            "maximum_lower_distance_constraint_violation": {
               "description": "The maximum lower distance constraint violation for the ensemble.", 
               "examples": [
                  "0.3"
               ], 
               "type": "number"
            }, 
            "representative_conformer": {
               "description": "The number of the conformer identified as most representative.", 
               "examples": [
                  "20"
               ], 
               "type": "integer"
            }, 
            "average_constraint_violations_per_residue": {
               "description": "The average number of constraint violations on a per residue basis for\n the ensemble.", 
               "examples": [
                  "0.25"
               ], 
               "type": "integer"
            }, 
            "maximum_distance_constraint_violation": {
               "description": "The maximum distance constraint violation for the ensemble.", 
               "examples": [
                  "0.4"
               ], 
               "type": "number"
            }, 
            "entry_id": {
               "description": "Leave this blank as the ID is provided by the MSD", 
               "type": "string"
            }, 
            "average_torsion_angle_constraint_violation": {
               "description": "The average torsion angle constraint violation for the ensemble.", 
               "examples": [
                  "2.4"
               ], 
               "type": "number"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_helical_symmetry": {
         "properties": {
            "rise_per_n_subunits": {
               "description": "Angular rotation (degrees) in N subunits", 
               "type": "number"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "circular_symmetry": {
               "description": "Rotational n-fold symmetry about the helical axis.", 
               "type": "integer"
            }, 
            "n_subunits_divisor": {
               "description": "Number of subunits used in the calculation of rise and\n rotation.", 
               "type": "integer"
            }, 
            "dyad_axis": {
               "enum": [
                  "yes", 
                  "no"
               ], 
               "description": "Two-fold symmetry perpendicular to the helical axis.", 
               "type": "string"
            }, 
            "rotation_per_n_subunits": {
               "description": "Angular rotation (degrees) in N subunits", 
               "type": "number"
            }, 
            "number_of_operations": {
               "description": "Number of operations.", 
               "type": "integer"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "entity_name_sys": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "The systematic name for the entity.", 
                  "examples": [
                     "hydroquinone-beta-D-pyranoside", 
                     "EC 2.1.1.1", 
                     "2-fluoro-1,4-dichlorobenzene"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "entity_poly": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "nstd_linkage": {
                  "enum": [
                     "yes", 
                     "n", 
                     "no", 
                     "y"
                  ], 
                  "description": "A flag to indicate whether the polymer contains at least\n one monomer-to-monomer link different from that implied by\n _entity_poly.type.", 
                  "type": "string"
               }, 
               "pdbx_target_identifier": {
                  "description": "For Structural Genomics entries, the sequence's target identifier registered at the TargetTrack database.", 
                  "examples": [
                     "356560"
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "other", 
                     "polypeptide(D)", 
                     "polyribonucleotide", 
                     "polysaccharide(L)", 
                     "polysaccharide(D)", 
                     "polydeoxyribonucleotide/polyribonucleotide hybrid", 
                     "peptide nucleic acid", 
                     "polypeptide(L)", 
                     "cyclic-pseudo-peptide", 
                     "polydeoxyribonucleotide"
                  ], 
                  "description": "The type of the polymer.", 
                  "type": "string"
               }, 
               "pdbx_seq_one_letter_code": {
                  "description": "Chemical sequence expressed as string of one-letter\n amino acid codes. Modifications and non-standard\n amino acids are coded as X.", 
                  "examples": [
                     "A  for alanine or adenine\nB  for ambiguous asparagine/aspartic-acid\nR  for arginine\nN  for asparagine\nD  for aspartic-acid\nC  for cysteine or cystine or cytosine\nQ  for glutamine\nE  for glutamic-acid\nZ  for ambiguous glutamine/glutamic acid\nG  for glycine or guanine\nH  for histidine\nI  for isoleucine\nL  for leucine\nK  for lysine\nM  for methionine\nF  for phenylalanine\nP  for proline\nS  for serine\nT  for threonine or thymine\nW  for tryptophan\nY  for tyrosine\nV  for valine\nU  for uracil\nO  for water\nX  for other"
                  ], 
                  "type": "string"
               }, 
               "pdbx_strand_id": {
                  "description": "The PDB strand/chain id(s) corresponding to this polymer entity.", 
                  "examples": [
                     "A", 
                     "B", 
                     "A,B,C"
                  ], 
                  "type": "string"
               }, 
               "nstd_monomer": {
                  "enum": [
                     "yes", 
                     "n", 
                     "no", 
                     "y"
                  ], 
                  "description": "A flag to indicate whether the polymer contains at least\n one monomer that is not considered standard.", 
                  "type": "string"
               }, 
               "pdbx_seq_one_letter_code_can": {
                  "description": "              Cannonical chemical sequence expressed as string of\n               one-letter amino acid codes. Modifications are coded\n               as the parent amino acid where possible.\n\nA  for alanine or adenine\nB  for ambiguous asparagine/aspartic-acid\nR  for arginine\nN  for asparagine\nD  for aspartic-acid\nC  for cysteine or cystine or cytosine\nQ  for glutamine\nE  for glutamic-acid\nZ  for ambiguous glutamine/glutamic acid\nG  for glycine or guanine\nH  for histidine\nI  for isoleucine\nL  for leucine\nK  for lysine\nM  for methionine\nF  for phenylalanine\nP  for proline\nS  for serine\nT  for threonine or thymine\nW  for tryptophan\nY  for tyrosine\nV  for valine\nU  for uracil", 
                  "examples": [
                     "MSHHWGYGKHNGPEHWHKDFPIAKGERQSPVDIDTHTAKYDPSLKPLSVSYDQATSLRILNNGAAFNVEFD"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_audit_revision_category": {
         "minItems": 1, 
         "items": {
            "properties": {
               "category": {
                  "description": "The category updated in the pdbx_audit_revision_category record.", 
                  "examples": [
                     "audit_author", 
                     "citation"
                  ], 
                  "type": "string"
               }, 
               "data_content_type": {
                  "enum": [
                     "Structure model", 
                     "Structure factors", 
                     "NMR shifts", 
                     "NMR restraints"
                  ], 
                  "description": "The type of file that the pdbx_audit_revision_history record refers to.", 
                  "examples": [
                     "Structure model"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "A unique identifier for the pdbx_audit_revision_category record.", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }, 
               "revision_ordinal": {
                  "description": "A pointer to  _pdbx_audit_revision_history.ordinal", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }
            }, 
            "required": [
               "data_content_type", 
               "ordinal", 
               "revision_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "audit_conform": {
         "minItems": 1, 
         "items": {
            "properties": {
               "dict_name": {
                  "description": "The string identifying the highest-level dictionary defining\n data names used in this file.", 
                  "type": "string"
               }, 
               "dict_location": {
                  "description": "A file name or uniform resource locator (URL) for the\n dictionary to which the current data block conforms.", 
                  "type": "string"
               }, 
               "dict_version": {
                  "description": "The version number of the dictionary to which the current\n data block conforms.", 
                  "type": "string"
               }
            }, 
            "required": [
               "dict_name", 
               "dict_version"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "symmetry": {
         "properties": {
            "space_group_name_Hall": {
               "description": "Space-group symbol as described by Hall (1981). This symbol\n gives the space-group setting explicitly. Leave spaces between\n the separate components of the symbol.\n\n Ref: Hall, S. R. (1981). Acta Cryst. A37, 517-525; erratum\n (1981) A37, 921.", 
               "examples": [
                  "-P 2ac 2n", 
                  "-R 3 2\"", 
                  "P 61 2 2 (0 0 -1)"
               ], 
               "type": "string"
            }, 
            "cell_setting": {
               "enum": [
                  "tetragonal", 
                  "triclinic", 
                  "rhombohedral", 
                  "monoclinic", 
                  "hexagonal", 
                  "cubic", 
                  "orthorhombic", 
                  "trigonal"
               ], 
               "description": "The cell settings for this space-group symmetry.", 
               "type": "string"
            }, 
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "space_group_name_H_M": {
               "description": "Hermann-Mauguin space-group symbol. Note that the\n Hermann-Mauguin symbol does not necessarily contain complete\n information about the symmetry and the space-group origin. If\n used, always supply the FULL symbol from International Tables\n for Crystallography Vol. A (2002) and indicate the origin and\n the setting if it is not implicit. If there is any doubt that\n the equivalent positions can be uniquely deduced from this\n symbol, specify the  _symmetry_equiv.pos_as_xyz or\n _symmetry.space_group_name_Hall  data items as well. Leave\n spaces between symbols referring to\n different axes.", 
               "examples": [
                  "A 1", 
                  "A 1 2 1", 
                  "A 2", 
                  "B 1 1 2", 
                  "B 2", 
                  "B 2 21 2", 
                  "C 2", 
                  "C 1 2 1", 
                  "C 21", 
                  "C 1 21 1", 
                  "C 2(A 112)", 
                  "C 2 2 2", 
                  "C 2 2 21", 
                  "C 4 21 2", 
                  "F 2 2 2", 
                  "F 2 3", 
                  "F 4 2 2", 
                  "F 4 3 2", 
                  "F 41 3 2", 
                  "I 1 2 1", 
                  "I 1 21 1", 
                  "I 2", 
                  "I 2 2 2", 
                  "I 2 3", 
                  "I 21", 
                  "I 21 3", 
                  "I 21 21 21", 
                  "I 4", 
                  "I 4 2 2", 
                  "I 4 3 2", 
                  "I 41", 
                  "I 41/a", 
                  "I 41 2 2", 
                  "I 41 3 2", 
                  "P 1", 
                  "P 1-", 
                  "P 2", 
                  "P 1 2 1", 
                  "P 1 1 2", 
                  "P 2 2 2", 
                  "P 2 3", 
                  "P 2 2 21", 
                  "P 2 21 21", 
                  "P 21", 
                  "P 1 21 1", 
                  "P 1 21/c 1", 
                  "P 1 1 21", 
                  "P 21(C)", 
                  "P 21 2 21", 
                  "P 21 3", 
                  "P 21 21 2", 
                  "P 21 21 2 A", 
                  "P 21 21 21", 
                  "P 3", 
                  "P 3 1 2", 
                  "P 3 2 1", 
                  "P 31", 
                  "P 31 1 2", 
                  "P 31 2 1", 
                  "P 32", 
                  "P 32 1 2", 
                  "P 32 2 1", 
                  "P 4", 
                  "P 4 2 2", 
                  "P 4 3 2", 
                  "P 4 21 2", 
                  "P 41", 
                  "P 41 2 2", 
                  "P 41 3 2", 
                  "P 41 21 2", 
                  "P 42", 
                  "P 42 2 2", 
                  "P 42 3 2", 
                  "P 42 21 2", 
                  "P 43", 
                  "P 43 2 2", 
                  "P 43 3 2", 
                  "P 43 21 2", 
                  "P 6", 
                  "P 6 2 2", 
                  "P 61", 
                  "P 61 2 2", 
                  "P 62", 
                  "P 62 2 2", 
                  "P 63", 
                  "P 63 2 2", 
                  "P 64", 
                  "P 64 2 2", 
                  "P 65", 
                  "P 65 2 2", 
                  "H 3", 
                  "R 3", 
                  "H 3 2", 
                  "R 3 2"
               ], 
               "type": "string"
            }, 
            "pdbx_full_space_group_name_H_M": {
               "description": "Used for PDB space group:\n\n Example: 'C 1 2 1'  (instead of C 2)\n          'P 1 2 1'  (instead of P 2)\n          'P 1 21 1' (instead of P 21)\n          'P 1 1 21' (instead of P 21 -unique C axis)\n          'H 3'      (instead of R 3   -hexagonal)\n          'H 3 2'    (instead of R 3 2 -hexagonal)\n", 
               "examples": [
                  "Example: 'C 1 2 1'  (instead of C 2)\n           'P 1 2 1'  (instead of P 2)\n           'P 1 21 1' (instead of P 21)\n           'P 1 1 21' (instead of P 21 -unique C axis)\n           'H 3'      (instead of R 3   -hexagonal)\n           'H 3 2'    (instead of R 3 2 -hexagonal)"
               ], 
               "type": "string"
            }, 
            "Int_Tables_number": {
               "description": "Space-group number from International Tables for Crystallography\n Vol. A (2002).", 
               "type": "integer"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_audit_revision_item": {
         "minItems": 1, 
         "items": {
            "properties": {
               "data_content_type": {
                  "enum": [
                     "Structure model", 
                     "Structure factors", 
                     "NMR shifts", 
                     "NMR restraints"
                  ], 
                  "description": "The type of file that the pdbx_audit_revision_history record refers to.", 
                  "examples": [
                     "Structure model"
                  ], 
                  "type": "string"
               }, 
               "item": {
                  "description": "A high level explanation the author has provided for submitting a revision.", 
                  "examples": [
                     "_atom_site.type_symbol"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "A unique identifier for the pdbx_audit_revision_item record.", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }, 
               "revision_ordinal": {
                  "description": "A pointer to  _pdbx_audit_revision_history.ordinal", 
                  "examples": [
                     "1"
                  ], 
                  "type": "integer"
               }
            }, 
            "required": [
               "data_content_type", 
               "ordinal", 
               "revision_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_entry_details": {
         "properties": {
            "source_details": {
               "description": "Additional details about the source and taxonomy of the macromolecular\n components in this entry.", 
               "type": "string"
            }, 
            "compound_details": {
               "description": "Additional details about the macromolecular compounds in this entry.", 
               "type": "string"
            }, 
            "entry_id": {
               "description": "This item identifies the entry.  This is a reference to _entry.id.", 
               "type": "string"
            }, 
            "sequence_details": {
               "description": "Additional details about the sequence or sequence database correspondences\n for this entry.", 
               "type": "string"
            }, 
            "nonpolymer_details": {
               "description": "Additional details about the non-polymer components in this entry.", 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "struct_site": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_evidence_code": {
                  "description": "Source of evidence supporting the assignment of this site.", 
                  "examples": [
                     "SOFTWARE", 
                     "AUTHOR", 
                     "UNKNOWN"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _struct_site.id must uniquely identify a record in\n the STRUCT_SITE list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of the site.", 
                  "type": "string"
               }, 
               "pdbx_auth_asym_id": {
                  "description": "A component of the identifier for the ligand in the site.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "pdbx_auth_seq_id": {
                  "description": "A component of the identifier for the ligand in the site.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "pdbx_num_residues": {
                  "description": "Number of residues in the site.", 
                  "type": "integer"
               }, 
               "pdbx_auth_comp_id": {
                  "description": "A component of the identifier for the ligand in the site.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "space_group": {
         "minItems": 1, 
         "items": {
            "properties": {
               "crystal_system": {
                  "enum": [
                     "tetragonal", 
                     "triclinic", 
                     "cubic", 
                     "monoclinic", 
                     "hexagonal", 
                     "orthorhombic", 
                     "trigonal"
                  ], 
                  "description": "The name of the system of geometric crystal classes of space\n groups (crystal system) to which the space group belongs.\n Note that rhombohedral space groups belong to the\n trigonal system.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "This is the unique identifier for the SPACE_GROUP category.", 
                  "type": "string"
               }, 
               "IT_number": {
                  "description": "The number as assigned in International Tables for\n Crystallography Vol. A, specifying the proper affine class (i.e.\n the orientation-preserving affine class) of space groups\n (crystallographic space-group type) to which the space group\n belongs.  This number defines the space-group type but not\n the coordinate system in which it is expressed.", 
                  "type": "integer"
               }, 
               "name_Hall": {
                  "description": "Space-group symbol defined by Hall.\n\n Each component of the space-group name is separated by a\n space or an underscore.  The use of a space is strongly\n recommended.  The underscore is only retained because it\n was used in old CIFs.  It should not be\n used in new CIFs.\n\n _space_group.name_Hall uniquely defines the space group and\n its reference to a particular coordinate system.\n\n Ref: Hall, S. R. (1981). Acta Cryst. A37, 517-525; erratum\n      (1981), A37, 921.\n      [See also International Tables for Crystallography\n      Vol. B (2001), Chapter 1.4, Appendix 1.4.2.]", 
                  "examples": [
                     "P 2c -2ac", 
                     "-I 4bd 2ab 3"
                  ], 
                  "type": "string"
               }, 
               "name_H_M_alt": {
                  "description": "_space_group.name_H-M_alt allows any Hermann-Mauguin symbol\n to be given. The way in which this item is used is determined\n by the user and in general is not intended to be interpreted by\n computer. It may, for example, be used to give one of the\n extended Hermann-Mauguin symbols given in Table 4.3.2.1 of\n International Tables for Crystallography Vol. A (2002) or\n a Hermann-Mauguin symbol for a conventional or unconventional\n setting.\n\n Each component of the space-group name is separated by a\n space or an underscore. The use of a space is strongly\n recommended.  The underscore is only retained because it\n was used in old CIFs. It should not be\n used in new CIFs. Subscripts should appear without special\n symbols. Bars should be given as negative signs before the\n numbers to which they apply.\n\n The commonly used Hermann-Mauguin symbol determines the space-\n group type uniquely but a given space-group type may be\n described by more than one Hermann-Mauguin symbol. The space-\n group type is best described using _space_group.IT_number.\n\n The Hermann-Mauguin symbol may contain information on the\n choice of basis, but not on the choice of origin. To\n define the setting uniquely, use _space_group.name_Hall or\n list the symmetry operations.", 
                  "examples": [
                     "loop_\n                                   _space_group.name_H-M_alt\n                                    'C m c m'\n                                    'C 2/c 2/m 21/m'\n                                    'A m a m'"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "exptl": {
         "minItems": 1, 
         "items": {
            "properties": {
               "method_details": {
                  "description": "A description of special aspects of the experimental method.", 
                  "examples": [
                     "29 structures", 
                     "minimized average structure"
                  ], 
                  "type": "string"
               }, 
               "crystals_number": {
                  "description": "The total number of crystals used in the  measurement of\n intensities.", 
                  "type": "integer"
               }, 
               "details": {
                  "description": "Any special information about the experimental work prior to the\n intensity measurement. See also _exptl_crystal.preparation.", 
                  "type": "string"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "method": {
                  "enum": [
                     "SOLUTION NMR", 
                     "INFRARED SPECTROSCOPY", 
                     "NEUTRON DIFFRACTION", 
                     "FLUORESCENCE TRANSFER", 
                     "THEORETICAL MODEL", 
                     "ELECTRON CRYSTALLOGRAPHY", 
                     "EPR", 
                     "ELECTRON MICROSCOPY", 
                     "SOLUTION SCATTERING", 
                     "FIBER DIFFRACTION", 
                     "X-RAY DIFFRACTION", 
                     "POWDER DIFFRACTION", 
                     "SOLID-STATE NMR"
                  ], 
                  "description": "The method used in the experiment.", 
                  "examples": [
                     "X-RAY DIFFRACTION", 
                     "NEUTRON DIFFRACTION", 
                     "FIBER DIFFRACTION", 
                     "ELECTRON CRYSTALLOGRAPHY", 
                     "ELECTRON MICROSCOPY", 
                     "SOLUTION NMR", 
                     "SOLID-STATE NMR", 
                     "SOLUTION SCATTERING", 
                     "POWDER DIFFRACTION"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "entry_id", 
               "method"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_refine_tls": {
         "minItems": 1, 
         "items": {
            "properties": {
               "L_3_3": {
                  "description": "The [3][3] element of the libration tensor L. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "S_2_2": {
                  "description": "The [2][2] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n The trace of S is indeterminate by crystallography, and should\n be set to zero.", 
                  "type": "number"
               }, 
               "S_2_3": {
                  "description": "The [2][3] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n  If the origin is omitted, it is assumed to be the centre of\n  reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "S_2_1": {
                  "description": "The [2][1] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n  If the origin is omitted, it is assumed to be the centre of\n  reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "S_1_1": {
                  "description": "The [1][1] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n The trace of S is indeterminate by crystallography, and should\n be set to zero.", 
                  "type": "number"
               }, 
               "T_3_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.T[3][3].", 
                  "type": "number"
               }, 
               "S_1_2": {
                  "description": "The [1][2] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n  If the origin is omitted, it is assumed to be the centre of\n  reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "L_1_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.L[1][3].", 
                  "type": "number"
               }, 
               "id": {
                  "description": "The value of _pdbx_refine_tls.id must uniquely identify a record in\n the PDBX_REFINE_TLS list.\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "1", 
                     "A"
                  ], 
                  "type": "string"
               }, 
               "S_3_1_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[3][1].", 
                  "type": "number"
               }, 
               "S_1_2_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[1][2].", 
                  "type": "number"
               }, 
               "S_3_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[3][3].", 
                  "type": "number"
               }, 
               "L_2_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.L[2][3].", 
                  "type": "number"
               }, 
               "S_1_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[1][3].", 
                  "type": "number"
               }, 
               "L_1_2": {
                  "description": "The [1][2] element of the libration tensor L. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "L_1_3": {
                  "description": "The [1][3] element of the libration tensor L. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "L_1_1_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.L[1][1].", 
                  "type": "number"
               }, 
               "L_1_1": {
                  "description": "The [1][1] element of the libration tensor L. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "L_2_3": {
                  "description": "The [2][3] element of the libration tensor L. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "L_2_2": {
                  "description": "The [2][2] element of the libration tensor L. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "S_1_3": {
                  "description": "The [1][3] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n  If the origin is omitted, it is assumed to be the centre of\n  reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "T_1_2_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.T[1][2].", 
                  "type": "number"
               }, 
               "T_2_2_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.T[2][2].", 
                  "type": "number"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _pdbx_refine_tls.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "S_2_1_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[2][1].", 
                  "type": "number"
               }, 
               "method": {
                  "enum": [
                     "refined", 
                     "fitted"
                  ], 
                  "description": "The method by which the TLS parameters were obtained.", 
                  "type": "string"
               }, 
               "L_2_2_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.L[2][2].", 
                  "type": "number"
               }, 
               "details": {
                  "description": "A description of the TLS group, such as a domain name or a\n chemical group name.", 
                  "examples": [
                     "Chain A catalytic domain", 
                     "Chain A Tyr 56 side chain"
                  ], 
                  "type": "string"
               }, 
               "S_2_2_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[2][2].", 
                  "type": "number"
               }, 
               "T_1_1_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.T[1][1].", 
                  "type": "number"
               }, 
               "L_3_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.L[3][3].", 
                  "type": "number"
               }, 
               "T_1_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.T[1][3].", 
                  "type": "number"
               }, 
               "T_2_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.T[2][3].", 
                  "type": "number"
               }, 
               "S_2_3_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[2][3].", 
                  "type": "number"
               }, 
               "origin_y": {
                  "description": "The y coordinate in angstroms of the origin to which the\n TLS parameters are referred, specified according to\n a set of orthogonal Cartesian axes related to the cell axes as\n given in _atom_sites.Cartn_transform_axes.\n\n If the origin is omitted, it is assumed to be the centre of\n reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "origin_x": {
                  "description": "The x coordinate in angstroms of the origin to which the\n TLS parameters are referred, specified according to\n a set of orthogonal Cartesian axes related to the cell axes as\n given in _atom_sites.Cartn_transform_axes.\n\n If the origin is omitted, it is assumed to be the centre of\n reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "origin_z": {
                  "description": "The z coordinate in angstroms of the origin to which the\n TLS parameters are referred, specified according to\n a set of orthogonal Cartesian axes related to the cell axes as\n given in _atom_sites.Cartn_transform_axes.\n\n If the origin is omitted, it is assumed to be the centre of\n reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "L_1_2_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.L[1][2].", 
                  "type": "number"
               }, 
               "T_1_2": {
                  "description": "The [1][2] element of the translation tensor T. This should\n be given in the same coordinate frame and units as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "T_1_3": {
                  "description": "The [1][3] element of the translation tensor T. This should\n be given in the same coordinate frame and units as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "T_1_1": {
                  "description": "The [1][1] element of the translation tensor T. This should\n be given in the same coordinate frame and units as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "S_1_1_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[1][1].", 
                  "type": "number"
               }, 
               "T_2_3": {
                  "description": "The [2][3] element of the translation tensor T. This should\n be given in the same coordinate frame and units as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "T_2_2": {
                  "description": "The [2][2] element of the translation tensor T. This should\n be given in the same coordinate frame and units as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "S_3_2_esd": {
                  "description": "The estimated standard deviation of _pdbx_refine_tls.S[3][2].", 
                  "type": "number"
               }, 
               "T_3_3": {
                  "description": "The [3][3] element of the translation tensor T. This should\n be given in the same coordinate frame and units as the\n corresponding anisotropic displacement parameters.", 
                  "type": "number"
               }, 
               "S_3_3": {
                  "description": "The [3][3] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n The trace of S is indeterminate by crystallography, and should\n be set to zero.", 
                  "type": "number"
               }, 
               "S_3_2": {
                  "description": "The [3][2] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n  If the origin is omitted, it is assumed to be the centre of\n  reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }, 
               "S_3_1": {
                  "description": "The [3][1] element of the screw-rotation tensor S. This should\n be given in the same coordinate frame as the\n corresponding anisotropic displacement parameters.\n\n  If the origin is omitted, it is assumed to be the centre of\n  reaction of the group, in which case S must be symmetric", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_image_processing": {
         "minItems": 1, 
         "items": {
            "properties": {
               "details": {
                  "description": "Method details.", 
                  "examples": [
                     "The selected images were high-pass filtered and normalized"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "This data item provides a unique identifier for each data processing block.", 
                  "type": "string"
               }, 
               "image_recording_id": {
                  "description": "Foreign key to the EM_IMAGE_RECORDING", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "image_recording_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_helical_entity": {
         "minItems": 1, 
         "items": {
            "properties": {
               "axial_symmetry": {
                  "description": "Symmetry of the helical axis, either cyclic (Cn) or dihedral (Dn), where n>=1.", 
                  "examples": [
                     "C1", 
                     "D2", 
                     "C7"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _em_helical_entity.id must uniquely identify\n a set of the filament parameters for this assembly component.", 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "The value of _em_helical_entity.reconstruction_id identifies a particular reconstruction.\n\n This data item is a pointer to _em_image_processing.id.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any other details regarding the helical assembly", 
                  "examples": [
                     "Dihedral symmetry"
                  ], 
                  "type": "string"
               }, 
               "angular_rotation_per_subunit": {
                  "description": "The angular rotation per helical subunit in degrees.", 
                  "examples": [
                     "-34.616000"
                  ], 
                  "type": "number"
               }, 
               "axial_rise_per_subunit": {
                  "description": "The axial rise per subunit in the helical assembly.", 
                  "examples": [
                     "17.400000"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "id", 
               "image_processing_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_site_keywords": {
         "minItems": 1, 
         "items": {
            "properties": {
               "text": {
                  "description": "Keywords describing this site.", 
                  "examples": [
                     "active site", 
                     "binding pocket", 
                     "Ca coordination"
                  ], 
                  "type": "string"
               }, 
               "site_id": {
                  "description": "This data item is a pointer to _struct_site.id in the STRUCT_SITE\n category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "site_id", 
               "text"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_constraints": {
         "properties": {
            "NA_chi_angle_constraints_total_count": {
               "description": "The total number of nucleic acid chi-angle constraints used\n in the final structure calculation.", 
               "examples": [
                  "15"
               ], 
               "type": "integer"
            }, 
            "NA_beta_angle_constraints_total_count": {
               "description": "The total number of nucleic acid beta-angle constraints used in\n the final structure calculation.", 
               "examples": [
                  "24"
               ], 
               "type": "integer"
            }, 
            "NA_other_angle_constraints_total_count": {
               "description": "The total number of nucleic acid other-angle constraints used\n in the final structure calculation.", 
               "examples": [
                  "5"
               ], 
               "type": "integer"
            }, 
            "NOE_intraresidue_total_count": {
               "description": "The total number of all intraresidue, [i-j]=0, NOE constraints\n used in the final structure calculation.", 
               "examples": [
                  "1144"
               ], 
               "type": "integer"
            }, 
            "protein_psi_angle_constraints_total_count": {
               "description": "The total number of psi angle constraints used in the final structure\n calculation.", 
               "examples": [
                  "0"
               ], 
               "type": "integer"
            }, 
            "NA_sugar_pucker_constraints_total_count": {
               "description": "The total number of nucleic acid sugar pucker constraints used\n in the final structure calculation.", 
               "examples": [
                  "10"
               ], 
               "type": "integer"
            }, 
            "hydrogen_bond_constraints_total_count": {
               "description": "The total number of hydrogen bond constraints used in the final\n structure calculation.", 
               "examples": [
                  "6"
               ], 
               "type": "integer"
            }, 
            "NA_gamma_angle_constraints_total_count": {
               "description": "The total number of nucleic acid gamma-angle constraints used in\n the final structure calculation.", 
               "examples": [
                  "12"
               ], 
               "type": "integer"
            }, 
            "disulfide_bond_constraints_total_count": {
               "description": "The total number of disulfide bond constraints used in the final\n structure calculation.", 
               "examples": [
                  "3"
               ], 
               "type": "integer"
            }, 
            "entry_id": {
               "description": "You can leave this blank as an ID will be assigned by the MSD\n to the constraint file.", 
               "type": "string"
            }, 
            "protein_chi_angle_constraints_total_count": {
               "description": "The total number of chi angle constraints used in the final structure\n calculation.", 
               "examples": [
                  "66"
               ], 
               "type": "integer"
            }, 
            "NA_epsilon_angle_constraints_total_count": {
               "description": "The total number of nucleic acid epsilon-angle constraints used\n in the final structure calculation.", 
               "examples": [
                  "31"
               ], 
               "type": "integer"
            }, 
            "NOE_constraints_total": {
               "description": "The total number of all NOE constraints used in the final\n structure calculation.", 
               "examples": [
                  "4458"
               ], 
               "type": "integer"
            }, 
            "NA_alpha_angle_constraints_total_count": {
               "description": "The total number of nucleic acid alpha-angle constraints used in\n the final structure calculation.", 
               "examples": [
                  "18"
               ], 
               "type": "integer"
            }, 
            "NOE_interentity_total_count": {
               "description": "The total number of interentity, NOE constraints\n used in the final structure calculation. This field should only be\n if system is complex -i.e more than one entity e.g. a dimer or ligand-protein\n complex", 
               "examples": [
                  "272"
               ], 
               "type": "integer"
            }, 
            "NOE_medium_range_total_count": {
               "description": "The total number of medium range 1<[i-j]<=5 NOE constraints used\n in the final structure calculation.", 
               "examples": [
                  "682"
               ], 
               "type": "integer"
            }, 
            "NA_delta_angle_constraints_total_count": {
               "description": "The total number of nucleic acid delta-angle constraints used in\n the final structure calculation.", 
               "examples": [
                  "15"
               ], 
               "type": "integer"
            }, 
            "protein_other_angle_constraints_total_count": {
               "description": " The total number of other angle constraints used in the final structure\ncalculation.", 
               "examples": [
                  "0"
               ], 
               "type": "integer"
            }, 
            "NOE_long_range_total_count": {
               "description": "The total number of long range [i-j]>5 NOE constraints used\n in the final structure calculation.", 
               "examples": [
                  "1356"
               ], 
               "type": "integer"
            }, 
            "protein_phi_angle_constraints_total_count": {
               "description": "The total number of phi angle constraints used in the final structure\n calculation", 
               "examples": [
                  "96"
               ], 
               "type": "integer"
            }, 
            "NOE_sequential_total_count": {
               "description": "The total number of sequential, [i-j]=1, NOE constraints used\n in the final structure calculation.", 
               "examples": [
                  "1004"
               ], 
               "type": "integer"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_soln_scatter": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _pdbx_soln_scatter.id must\n uniquely identify the sample in the category PDBX_SOLN_SCATTER", 
                  "type": "string"
               }, 
               "temperature": {
                  "description": "The temperature in kelvins at which the experiment\n was conducted", 
                  "type": "number"
               }, 
               "concentration_range": {
                  "description": "The concentration range (mg/mL) of the complex in the\n sample used in the solution scattering experiment to\n determine the mean radius of structural elongation.", 
                  "examples": [
                     "0.7 - 14"
                  ], 
                  "type": "string"
               }, 
               "num_time_frames": {
                  "description": "The number of time frame solution scattering images used.", 
                  "type": "integer"
               }, 
               "source_class": {
                  "description": "The general class of the radiation source.", 
                  "examples": [
                     "neutron source", 
                     "synchrotron"
                  ], 
                  "type": "string"
               }, 
               "buffer_name": {
                  "description": "The name of the buffer used for the sample in the solution scattering\n experiment.", 
                  "examples": [
                     "acetic acid"
                  ], 
                  "type": "string"
               }, 
               "detector_specific": {
                  "description": "The particular radiation detector. In general this will be a\n  manufacturer, description, model number or some combination of\n  these.", 
                  "type": "string"
               }, 
               "data_analysis_software_list": {
                  "description": "A list of the software used in the data analysis", 
                  "examples": [
                     "SCTPL5 GNOM"
                  ], 
                  "type": "string"
               }, 
               "max_mean_cross_sectional_radii_gyration": {
                  "description": "The maximum mean radius of structural elongation of the sample.\n In a given solute-solvent contrast, the radius of gyration\n R_G is a measure of structural elongation if the internal\n inhomogeneity of scattering densities has no effect. Guiner\n analysis at low Q give the R_G and the forward scattering at\n zero angle I(0).\n\n    lnl(Q) = lnl(0) - R_G^2Q^2/3\n\n where\n       Q = 4(pi)sin(theta/lamda)\n       2theta = scattering angle\n       lamda = wavelength\n\n The above expression is valid in a QR_G range for extended\n rod-like particles. The relative I(0)/c values ( where\n  c = sample concentration) for sample measurements in a\n constant buffer for a single sample data session, gives the\n relative masses of the protein(s) studied when referenced\n against a standard.\n\n see:\n     O.Glatter & O.Kratky, (1982). Editors of \"Small angle\n      X-ray Scattering, Academic Press, New York.\n     O.Kratky. (1963). X-ray small angle scattering with\n      substances of biological interest in diluted solutions.\n      Prog. Biophys. Chem., 13, 105-173.\n     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation\n      of X-ray and neutron scatter from rigid rods of non-uniform\n      cross section and finite length. J.Appl. Crystallog., 18, 452-460.\n\n If the structure is elongated, the mean radius of gyration\n of the cross-sectional structure R_XS  and the mean cross sectional\n intensity at zero angle [I(Q).Q]_Q->0 is obtained from\n    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2", 
                  "type": "number"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "source_type": {
                  "description": "The make, model, name or beamline of the source of radiation.", 
                  "type": "string"
               }, 
               "source_beamline_instrument": {
                  "description": "The instrumentation used on the beamline", 
                  "type": "string"
               }, 
               "data_reduction_software_list": {
                  "description": "A list of the software used in the data reduction", 
                  "examples": [
                     "OTOKO"
                  ], 
                  "type": "string"
               }, 
               "min_mean_cross_sectional_radii_gyration_esd": {
                  "description": "\nThe estimated standard deviation for the\nminimum mean radius of structural elongation of the sample.\nIn a given solute-solvent contrast, the radius of gyration\nR_G is a measure of structural elongation if the internal\ninhomogeneity of scattering densities has no effect. Guiner\nanalysis at low Q give the R_G and the forward scattering at\nzero angle I(0).\n\n   lnl(Q) = lnl(0) - R_G^2Q^2/3\n\nwhere\n      Q = 4(pi)sin(theta/lamda)\n      2theta = scattering angle\n      lamda = wavelength\n\nThe above expression is valid in a QR_G range for extended\nrod-like particles. The relative I(0)/c values ( where\n c = sample concentration) for sample measurements in a\nconstant buffer for a single sample data session, gives the\nrelative masses of the protein(s) studied when referenced\nagainst a standard.\n\nsee:\n    O.Glatter & O.Kratky, (1982). Editors of \"Small angle\n     X-ray Scattering, Academic Press, New York.\n    O.Kratky. (1963). X-ray small angle scattering with\n     substances of biological interest in diluted solutions.\n     Prog. Biophys. Chem., 13, 105-173.\n    G.D.Wignall & F.S.Bates, (1987). The small-angle approximation\n     of X-ray and neutron scatter from rigid rods of non-uniform\n     cross section and finite length. J.Appl. Crystallog., 18, 452-460.\n\nIf the structure is elongated, the mean radius of gyration\nof the cross-sectional structure R_XS  and the mean cross sectional\nintensity at zero angle [I(Q).Q]_Q->0 is obtained from\n\n   ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2", 
                  "type": "number"
               }, 
               "detector_type": {
                  "description": "The general class of the radiation detector.", 
                  "type": "string"
               }, 
               "min_mean_cross_sectional_radii_gyration": {
                  "description": "\nThe minimum mean radius of structural elongation of the sample.\nIn a given solute-solvent contrast, the radius of gyration\nR_G is a measure of structural elongation if the internal\ninhomogeneity of scattering densities has no effect. Guiner\nanalysis at low Q give the R_G and the forward scattering at\nzero angle I(0).\n\n    lnl(Q) = lnl(0) - R_G^2Q^2/3\n\nwhere\n      Q = 4(pi)sin(theta/lamda)\n      2theta = scattering angle\n      lamda = wavelength\n\nThe above expression is valid in a QR_G range for extended\nrod-like particles. The relative I(0)/c values ( where\n c = sample concentration) for sample measurements in a\nconstant buffer for a single sample data session, gives the\nrelative masses of the protein(s) studied when referenced\nagainst a standard.\n\nsee:\n    O.Glatter & O.Kratky, (1982). Editors of \"Small angle\n     X-ray Scattering, Academic Press, New York.\n    O.Kratky. (1963). X-ray small angle scattering with\n     substances of biological interest in diluted solutions.\n     Prog. Biophys. Chem., 13, 105-173.\n    G.D.Wignall & F.S.Bates, (1987). The small-angle approximation\n     of X-ray and neutron scatter from rigid rods of non-uniform\n     cross section and finite length. J.Appl. Crystallog., 18, 452-460.\n\nIf the structure is elongated, the mean radius of gyration\nof the cross-sectional structure R_XS  and the mean cross sectional\nintensity at zero angle [I(Q).Q]_Q->0 is obtained from\n   ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2", 
                  "type": "number"
               }, 
               "max_mean_cross_sectional_radii_gyration_esd": {
                  "description": "\nThe estimated standard deviation for the\nminimum mean radius of structural elongation of the sample.\nIn a given solute-solvent contrast, the radius of gyration\nR_G is a measure of structural elongation if the internal\ninhomogeneity of scattering densities has no effect. Guiner\nanalysis at low Q give the R_G and the forward scattering at\nzero angle I(0).\n\n    lnl(Q) = lnl(0) - R_G^2Q^2/3\n\nwhere\n      Q = 4(pi)sin(theta/lamda)\n      2theta = scattering angle\n      lamda = wavelength\n\nThe above expression is valid in a QR_G range for extended\nrod-like particles. The relative I(0)/c values ( where\n c = sample concentration) for sample measurements in a\nconstant buffer for a single sample data session, gives the\nrelative masses of the protein(s) studied when referenced\nagainst a standard.\n\nsee:\n    O.Glatter & O.Kratky, (1982). Editors of \"Small angle\n     X-ray Scattering, Academic Press, New York.\n    O.Kratky. (1963). X-ray small angle scattering with\n     substances of biological interest in diluted solutions.\n     Prog. Biophys. Chem., 13, 105-173.\n    G.D.Wignall & F.S.Bates, (1987). The small-angle approximation\n     of X-ray and neutron scatter from rigid rods of non-uniform\n     cross section and finite length. J.Appl. Crystallog., 18, 452-460.\n\nIf the structure is elongated, the mean radius of gyration\nof the cross-sectional structure R_XS  and the mean cross sectional\nintensity at zero angle [I(Q).Q]_Q->0 is obtained from\n   ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2", 
                  "type": "number"
               }, 
               "protein_length": {
                  "description": "\nThe length (or range) of the protein sample under study.\nIf the solution structure is approximated as an elongated elliptical\ncyclinder the the length L is determined from,\n\n  L = sqrt [12( (R_G)^2  -  (R_XS)^2 ) ]\n\nThe length should also be given by\n\n  L = pi I(0) / [ I(Q).Q]_Q->0", 
                  "type": "string"
               }, 
               "source_beamline": {
                  "description": "The beamline name used for the experiment", 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "x-ray", 
                     "neutron", 
                     "modelling"
                  ], 
                  "description": "The type of solution scattering experiment carried out", 
                  "type": "string"
               }, 
               "mean_guiner_radius_esd": {
                  "description": "The estimated standard deviation for the\n mean radius of structural elongation of the sample.\n In a given solute-solvent contrast, the radius of gyration\n R_G is a measure of structural elongation if the internal\n inhomogeneity of scattering densities has no effect. Guiner\n analysis at low Q give the R_G and the forward scattering at\n zero angle I(0).\n\n     lnl(Q) = lnl(0) - R_G^2Q^2/3\n\n where\n       Q = 4(pi)sin(theta/lamda)\n       2theta = scattering angle\n       lamda = wavelength\n\n The above expression is valid in a QR_G range for extended\n rod-like particles. The relative I(0)/c values ( where\n  c = sample concentration) for sample measurements in a\n constant buffer for a single sample data session, gives the\n relative masses of the protein(s) studied when referenced\n against a standard.\n\n see:\n     O.Glatter & O.Kratky, (1982). Editors of \"Small angle\n      X-ray Scattering, Academic Press, New York.\n     O.Kratky. (1963). X-ray small angle scattering with\n      substances of biological interest in diluted solutions.\n      Prog. Biophys. Chem., 13, 105-173.\n     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation\n      of X-ray and neutron scatter from rigid rods of non-uniform\n      cross section and finite length. J.Appl. Crystallog., 18, 452-460.\n\n If the structure is elongated, the mean radius of gyration\n of the cross-sectional structure R_XS  and the mean cross sectional\n intensity at zero angle [I(Q).Q]_Q->0 is obtained from\n    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2", 
                  "type": "number"
               }, 
               "mean_guiner_radius": {
                  "description": "The mean radius of structural elongation of the sample.\n In a given solute-solvent contrast, the radius of gyration\n R_G is a measure of structural elongation if the internal\n inhomogeneity of scattering densities has no effect. Guiner\n analysis at low Q gives the R_G and the forward scattering at\n zero angle I(0).\n\n     lnl(Q) = lnl(0) - R_G^2Q^2/3\n\n where\n       Q = 4(pi)sin(theta/lamda)\n       2theta = scattering angle\n       lamda = wavelength\n\n The above expression is valid in a QR_G range for extended\n rod-like particles. The relative I(0)/c values ( where\n  c = sample concentration) for sample measurements in a\n constant buffer for a single sample data session, gives the\n relative masses of the protein(s) studied when referenced\n against a standard.\n\n see: O.Glatter & O.Kratky, (1982). Editors of \"Small angle\n      X-ray Scattering, Academic Press, New York.\n      O.Kratky. (1963). X-ray small angle scattering with\n      substances of biological interest in diluted solutions.\n      Prog. Biophys. Chem., 13, 105-173.\n\n      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation\n      of X-ray and neutron scatter from rigid rods of non-uniform\n      cross section and finite length. J.Appl. Crystallog., 18, 452-460.\n\n If the structure is elongated, the mean radius of gyration\n of the cross-sectional structure R_XS  and the mean cross sectional\n intensity at zero angle [I(Q).Q]_Q->0 is obtained from\n\n    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2", 
                  "type": "number"
               }, 
               "sample_pH": {
                  "description": "The pH value of the buffered sample.", 
                  "type": "number"
               }
            }, 
            "required": [
               "entry_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_distant_solvent_atoms": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "The value of _pdbx_distant_solvent_atoms.id must uniquely identify\n each item in the PDBX_DISTANT_SOLVENT_ATOMS list.\n\n This is an integer serial number.", 
                  "type": "integer"
               }, 
               "label_alt_id": {
                  "description": "Part of the identifier for the distant solvent atom.\n\n This data item is a pointer to _atom_site.label_alt.id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "neighbor_macromolecule_distance": {
                  "description": "Distance to closest neighboring macromolecule atom.\n", 
                  "type": "number"
               }, 
               "neighbor_ligand_distance": {
                  "description": "Distance to closest neighboring ligand or solvent atom.\n", 
                  "type": "number"
               }, 
               "auth_seq_id": {
                  "description": "Part of the identifier for the distant solvent atom.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_comp_id": {
                  "description": "Part of the identifier for the distant solvent atom.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "PDB_model_num": {
                  "description": " Part of the identifier for the distant solvent atom.\n\nThis data item is a pointer to _atom_site.pdbx_PDB_model_num in the\nATOM_SITE category.", 
                  "type": "integer"
               }, 
               "auth_atom_id": {
                  "description": "Part of the identifier for the distant solvent atom.\n\n This data item is a pointer to _atom_site.auth_atom_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_asym_id": {
                  "description": "Part of the identifier for the distant solvent atom.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_entity_instance_feature": {
         "minItems": 1, 
         "items": {
            "properties": {
               "feature_type": {
                  "enum": [
                     "NO FUNCTIONAL ROLE", 
                     "OTHER", 
                     "SUBJECT OF INVESTIGATION"
                  ], 
                  "description": "A feature type associated with entity instance.", 
                  "type": "string"
               }, 
               "auth_comp_id": {
                  "description": "\nThe author provided chemical component identifier", 
                  "examples": [
                     "NAG", 
                     "ATP"
                  ], 
                  "type": "string"
               }, 
               "comp_id": {
                  "description": "\nChemical component identifier", 
                  "examples": [
                     "NAG", 
                     "ATP"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "\nAn ordinal index for this category", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "integer"
               }
            }, 
            "required": [
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_3d_fitting_list": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "This data item is a unique identifier.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Details about the model used in fitting.", 
                  "type": "string"
               }, 
               "pdb_entry_id": {
                  "description": "The PDB code for the entry used in fitting.", 
                  "examples": [
                     "PDB entry 1EHZ"
                  ], 
                  "type": "string"
               }, 
               "3d_fitting_id": {
                  "description": "The value of _em_3d_fitting_list.3d_fitting_id is a pointer\n to  _em_3d_fitting.id in the 3d_fitting category", 
                  "type": "string"
               }, 
               "pdb_chain_residue_range": {
                  "description": "The molecular entities represented in this fitting description.", 
                  "type": "string"
               }, 
               "pdb_chain_id": {
                  "description": " The ID of the biopolymer chain used for fitting, e.g., A.  Please note that\nonly one chain can be specified per instance.  If all chains of a particular\nstructure have been used for fitting, this field can be left blank.", 
                  "type": "string"
               }
            }, 
            "required": [
               "3d_fitting_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_ref_seq": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_db_align_end_ins_code": {
                  "description": "\nEnding insertion code of the sequence segment of the\nreference database.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "pdbx_auth_seq_align_beg": {
                  "description": "\nInitial position in the PDB sequence segment.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "align_id": {
                  "description": "The value of _struct_ref_seq.align_id must uniquely identify a\n record in the STRUCT_REF_SEQ list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "ref_id": {
                  "description": "This data item is a pointer to _struct_ref.id in the\n STRUCT_REF category.", 
                  "type": "string"
               }, 
               "pdbx_strand_id": {
                  "description": "The PDB strand/chain ID .", 
                  "examples": [
                     "A", 
                     "B"
                  ], 
                  "type": "string"
               }, 
               "pdbx_db_accession": {
                  "description": "Accession code of the reference database.", 
                  "examples": [
                     "P07617"
                  ], 
                  "type": "string"
               }, 
               "db_align_beg": {
                  "description": "The sequence position in the referenced database entry\n at which the alignment begins.", 
                  "type": "integer"
               }, 
               "pdbx_auth_seq_align_end": {
                  "description": "\nEnding position in the PDB sequence segment", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "pdbx_PDB_id_code": {
                  "description": "The PDB code of the structure.\n", 
                  "examples": [
                     "1BBP"
                  ], 
                  "type": "string"
               }, 
               "db_align_end": {
                  "description": "The sequence position in the referenced database entry\n at which the alignment ends.", 
                  "type": "integer"
               }, 
               "seq_align_beg": {
                  "description": "The sequence position in the entity or biological unit described\n  in the data block at which the alignment begins.\n\n This data item is a pointer to _entity_poly_seq.num in the\n ENTITY_POLY_SEQ category.", 
                  "type": "integer"
               }, 
               "pdbx_db_align_beg_ins_code": {
                  "description": "\nInitial insertion code of the sequence segment of the\nreference database.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "pdbx_seq_align_beg_ins_code": {
                  "description": "\nInitial insertion code of the PDB sequence segment.", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "pdbx_seq_align_end_ins_code": {
                  "description": "\nEnding insertion code of the sequence segment", 
                  "examples": [
                     "1", 
                     "2"
                  ], 
                  "type": "string"
               }, 
               "seq_align_end": {
                  "description": "The sequence position in the entity or biological unit described\n in the data block at which the alignment ends.\n\n This data item is a pointer to _entity_poly_seq.num in the\n ENTITY_POLY_SEQ category.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "align_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_entity_inst": {
         "minItems": 1, 
         "items": {
            "properties": {
               "entity_id": {
                  "description": "This data item is a pointer to _entity.id in the ENTITY category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of special aspects of this portion of the contents\n of the deposited unit.", 
                  "examples": [
                     "The drug binds to this enzyme in two roughly\n                                  twofold symmetric modes. Hence this\n                                  biological unit (3) is roughly twofold\n                                  symmetric to biological unit (2). Disorder in\n                                  the protein chain indicated with alternative\n                                  ID 2 should be used with this biological unit."
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _pdbx_struct_entity_inst.id must uniquely identify a record in\n the PDBX_STRUCT_ENTITY_INST list.\n\n The entity instance is a method neutral identifier for the observed\n molecular entities in the deposited coordinate set.", 
                  "examples": [
                     "1", 
                     "A", 
                     "2B3"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_stereochemistry_target_values": {
                  "description": "Stereochemistry target values used in refinement.", 
                  "type": "string"
               }, 
               "correlation_coeff_Fo_to_Fc_free": {
                  "description": "            The correlation coefficient between the observed and\n             calculated structure factors for reflections not included\n             in the refinement (free reflections).\n\n              The correlation coefficient is scale-independent and gives\n              an idea of the quality of the refined model.\n\n                          sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)\nR~corr~ = ------------------------------------------------------------\n          SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}\n\n              Fo  = observed structure factors\n              Fc  = calculated structure factors\n              <>    denotes average value\n\n              summation is over reflections not included\n              in the refinement (free reflections)", 
                  "type": "number"
               }, 
               "ls_R_factor_obs": {
                  "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion.\n\n _refine.ls_R_factor_obs should not be confused with\n _refine.ls_R_factor_R_work; the former reports the results of a\n refinement in which all observed reflections were used, the\n latter a refinement in which a subset of the observed\n reflections were excluded from refinement for the calculation\n of a 'free' R factor. However, it would be meaningful to quote\n both values if a 'free' R factor were calculated for most of\n the refinement, but all of the observed reflections were used\n in the final rounds of refinement; such a protocol should be\n explained in _refine.details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "ls_number_reflns_obs": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion.", 
                  "type": "integer"
               }, 
               "pdbx_TLS_residual_ADP_flag": {
                  "enum": [
                     "LIKELY RESIDUAL", 
                     "UNVERIFIED"
                  ], 
                  "description": "A flag for TLS refinements identifying the type of atomic displacement parameters stored\n in _atom_site.B_iso_or_equiv.", 
                  "type": "string"
               }, 
               "pdbx_average_fsc_work": {
                  "description": "Average Fourier Shell Correlation (avgFSC) between model and\n observed structure factors for reflections included in refinement.\n\n The average FSC is a measure of the agreement between observed\n and calculated structure factors.\n\n                  sum(N~i~ FSC~work-i~)\n avgFSC~work~   = ---------------------\n                  sum(N~i~)\n\n\n N~i~          = the number of working reflections in the resolution shell i\n FSC~work-i~   = FSC for working reflections in the i-th resolution shell calculated as:\n\n                (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~work-i~  = -------------------------------------------\n                (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation of FSC~work-i~ is carried over all working reflections in the resolution shell.\n\n Summation of avgFSC~work~ is carried over all resolution shells.\n\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n", 
                  "type": "number"
               }, 
               "B_iso_mean": {
                  "description": "The mean isotropic displacement parameter (B value)\n for the coordinate set.", 
                  "type": "number"
               }, 
               "ls_wR_factor_R_free": {
                  "description": "Weighted residual factor wR for reflections that satisfy the\n resolution limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n      ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^\n wR = ( ---------------------------- )\n      (        sum|w Y~obs~^2^|      )\n\n Y~obs~  = the observed amplitude specified by\n           _refine.ls_structure_factor_coef\n Y~calc~ = the calculated amplitude specified by\n           _refine.ls_structure_factor_coef\n w       = the least-squares weight\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "aniso_B_1_1": {
                  "description": "The [1][1] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure.", 
                  "type": "number"
               }, 
               "ls_R_factor_R_work": {
                  "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the working\n reflections (i.e. were included in the refinement)  when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n _refine.ls_R_factor_obs should not be confused with\n _refine.ls_R_factor_R_work; the former reports the results of a\n refinement in which all observed reflections were used, the\n latter a refinement in which a subset of the observed\n reflections were excluded from refinement for the calculation\n of a 'free' R factor. However, it would be meaningful to quote\n both values if a 'free' R factor were calculated for most of\n the refinement, but all of the observed reflections were used\n in the final rounds of refinement; such a protocol should be\n explained in _refine.details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "pdbx_isotropic_thermal_model": {
                  "description": "\nWhether the structure was refined with indvidual\nisotropic, anisotropic or overall temperature factor.", 
                  "examples": [
                     "Isotropic", 
                     "Overall"
                  ], 
                  "type": "string"
               }, 
               "pdbx_ls_cross_valid_method": {
                  "description": "\nWhether the cross validataion method was used through\nout or only at the end.", 
                  "examples": [
                     "FREE R-VALUE"
                  ], 
                  "type": "string"
               }, 
               "aniso_B_2_2": {
                  "description": "The [2][2] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure.", 
                  "type": "number"
               }, 
               "pdbx_average_fsc_free": {
                  "description": "Average Fourier Shell Correlation (avgFSC) between model and\n observed structure factors for reflections not included in refinement.\n\n The average FSC is a measure of the agreement between observed\n and calculated structure factors.\n\n                  sum(N~i~ FSC~free-i~)\n avgFSC~free~   = ---------------------\n                  sum(N~i~)\n\n\n N~i~          = the number of free reflections in the resolution shell i\n FSC~free-i~   = FSC for free reflections in the i-th resolution shell calculated as:\n\n                (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~free-i~  = -------------------------------------------\n                (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation of FSC~free-i~ is carried over all free reflections in the resolution shell.\n\n Summation of avgFSC~free~ is carried over all resolution shells.\n\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n", 
                  "type": "number"
               }, 
               "ls_R_factor_R_free_error_details": {
                  "description": "Special aspects of the method used to estimated the error in\n _refine.ls_R_factor_R_free.", 
                  "type": "string"
               }, 
               "pdbx_overall_ESU_R_Free": {
                  "description": "Overall estimated standard uncertainties of positional parameters based on R free value.", 
                  "type": "number"
               }, 
               "B_iso_min": {
                  "description": "The minimum isotropic displacement parameter (B value)\n found in the coordinate set.", 
                  "type": "number"
               }, 
               "overall_FOM_free_R_set": {
                  "description": "Average figure of merit of phases of reflections not included\n in the refinement.\n\n This value is derived from the likelihood function.\n\n FOM           = I~1~(X)/I~0~(X)\n\n I~0~, I~1~     = zero- and first-order modified Bessel functions\n                 of the first kind\n X              = sigma~A~ |E~o~| |E~c~|/SIGMA\n E~o~, E~c~     = normalized observed and calculated structure\n                 factors\n sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                 estimated using maximum likelihood\n Sigma~P~       = sum~{atoms in model}~ f^2^\n Sigma~N~       = sum~{atoms in crystal}~ f^2^\n f              = form factor of atoms\n delta~x~       = expected error\n SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n sigma~{E;exp}~ = uncertainties of normalized observed\n                 structure factors\n epsilon       = multiplicity of the diffracting plane\n\n Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n      Acta Cryst. D53, 240-255.", 
                  "type": "number"
               }, 
               "ls_number_reflns_R_work": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, and that were used as the working\n reflections (i.e. were included in the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.", 
                  "type": "integer"
               }, 
               "pdbx_R_Free_selection_details": {
                  "description": "Details of the manner in which the cross validation\n reflections were selected.", 
                  "examples": [
                     "Random selection"
                  ], 
                  "type": "string"
               }, 
               "correlation_coeff_Fo_to_Fc": {
                  "description": "            The correlation coefficient between the observed and\n             calculated structure factors for reflections included in\n             the refinement.\n\n             The correlation coefficient is scale-independent and gives\n             an idea of the quality of the refined model.\n\n                          sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)\nR~corr~ = ------------------------------------------------------------\n          SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}\n\n             Fo = observed structure factors\n             Fc = calculated structure factors\n             <>   denotes average value\n\n             summation is over reflections included in the refinement", 
                  "type": "number"
               }, 
               "occupancy_min": {
                  "description": "The minimum value for occupancy found in the coordinate set.", 
                  "type": "number"
               }, 
               "pdbx_ls_sigma_F": {
                  "description": "Data cutoff (SIGMA(F))", 
                  "type": "number"
               }, 
               "pdbx_ls_sigma_I": {
                  "description": "Data cutoff (SIGMA(I))", 
                  "type": "number"
               }, 
               "ls_percent_reflns_obs": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, expressed as a percentage of the\n number of geometrically observable reflections that satisfy\n the resolution limits.", 
                  "type": "number"
               }, 
               "ls_R_factor_all": {
                  "description": "Residual factor R for all reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "ls_number_reflns_R_free": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.", 
                  "type": "integer"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "pdbx_method_to_determine_struct": {
                  "description": "Method(s) used to determine the structure.", 
                  "examples": [
                     "AB INITIO PHASING", 
                     "DM", 
                     "ISAS", 
                     "ISIR", 
                     "ISIRAS", 
                     "MAD", 
                     "MIR", 
                     "MIRAS", 
                     "MR", 
                     "SIR", 
                     "SIRAS"
                  ], 
                  "type": "string"
               }, 
               "pdbx_data_cutoff_high_rms_absF": {
                  "description": "Value of RMS |F| used as high data cutoff.", 
                  "examples": [
                     "205.1"
                  ], 
                  "type": "number"
               }, 
               "overall_SU_B": {
                  "description": "          The overall standard uncertainty (estimated standard deviation)\n           of the displacement parameters based on a maximum-likelihood\n           residual.\n\n           The overall standard uncertainty (sigma~B~)^2^ gives an idea\n           of the uncertainty in the B values of averagely defined\n           atoms (atoms with B values equal to the average B value).\n\n                                         N~a~\n(sigma~B~)^2^ = 8 ----------------------------------------------\n                  sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^4^}\n\n           N~a~           = number of atoms\n           E~o~           = normalized structure factors\n           m              = figure of merit of phases of reflections\n                            included in the summation\n           s              = reciprocal-space vector\n\n           SUM_AS         = (sigma~A~)^2^/Sigma^2^\n           Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n           sigma~{E;exp}~  = experimental uncertainties of normalized\n                            structure factors\n           sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                            estimated using maximum likelihood\n           Sigma~P~        = sum~{atoms in model}~ f^2^\n           Sigma~N~        = sum~{atoms in crystal}~ f^2^\n           f               = atom form factor\n           delta~x~        = expected error\n           epsilon         = multiplicity of diffracting plane\n\n           summation is over all reflections included in refinement\n\n           Ref: (sigma~A~ estimation) \"Refinement of macromolecular\n                structures by the maximum-likelihood method\",\n                Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n                Acta Cryst. D53, 240-255.\n\n                (SU B estimation) Murshudov, G. N. & Dodson,\n                E. J. (1997). Simplified error estimation a la\n                Cruickshank in macromolecular crystallography.\n                CCP4 Newsletter on Protein Crystallography, No. 33,\n                January 1997, pp. 31-39.\n\n               http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html", 
                  "type": "number"
               }, 
               "pdbx_data_cutoff_low_absF": {
                  "description": "Value of F at \"low end\" of data cutoff.", 
                  "examples": [
                     "0.30"
                  ], 
                  "type": "number"
               }, 
               "aniso_B_2_3": {
                  "description": "The [2][3] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure.", 
                  "type": "number"
               }, 
               "B_iso_max": {
                  "description": "The maximum isotropic displacement parameter (B value)\n found in the coordinate set.", 
                  "type": "number"
               }, 
               "ls_number_reflns_all": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low.", 
                  "type": "integer"
               }, 
               "pdbx_ls_sigma_Fsqd": {
                  "description": "Data cutoff (SIGMA(F^2))", 
                  "type": "number"
               }, 
               "ls_d_res_low": {
                  "description": "The largest value for the interplanar spacings for\n the reflection data used in the refinement in angstroms.\n This is called the lowest resolution.", 
                  "type": "number"
               }, 
               "ls_R_factor_R_free": {
                  "description": "Residual factor R for reflections that satisfy the resolution\n limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n     sum|F~obs~ - F~calc~|\n R = ---------------------\n          sum|F~obs~|\n\n F~obs~  = the observed structure-factor amplitudes\n F~calc~ = the calculated structure-factor amplitudes\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "solvent_model_param_ksol": {
                  "description": "The value of the KSOL solvent-model parameter describing\n the ratio of the electron density in the bulk solvent to the\n electron density in the molecular solute.\n\n This is one of the two parameters (the other is\n _refine.solvent_model_param_bsol) in Tronrud's method of\n modelling the contribution of bulk solvent to the\n scattering. The standard scale factor is modified according\n to the expression\n\n     k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]\n\n where k0 and B0 are the scale factors for the protein.\n\n Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268.", 
                  "type": "number"
               }, 
               "ls_number_parameters": {
                  "description": "The number of parameters refined in the least-squares process.\n If possible, this number should include some contribution from\n the restrained parameters. The restrained parameters are\n distinct from the constrained parameters (where one or more\n parameters are linearly dependent on the refined value of\n another). Least-squares restraints often depend on geometry or\n energy considerations and this makes their direct contribution\n to this number, and to the goodness-of-fit calculation,\n difficult to assess.", 
                  "type": "integer"
               }, 
               "solvent_model_param_bsol": {
                  "description": "The value of the BSOL solvent-model parameter describing\n the average isotropic displacement parameter of disordered\n solvent atoms.\n\n This is one of the two parameters (the other is\n _refine.solvent_model_param_ksol) in Tronrud's method of\n modelling the contribution of bulk solvent to the\n scattering. The standard scale factor is modified according\n to the expression\n\n     k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]\n\n where k0 and B0 are the scale factors for the protein.\n\n Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268.", 
                  "type": "number"
               }, 
               "ls_number_restraints": {
                  "description": "The number of restrained parameters. These are parameters which\n are not directly dependent on another refined parameter.\n Restrained parameters often involve geometry or energy\n dependencies.\n See also _atom_site.constraints and _atom_site.refinement_flags.\n A general description of refinement constraints may appear in\n _refine.details.", 
                  "type": "integer"
               }, 
               "details": {
                  "description": "Description of special aspects of the refinement process.", 
                  "type": "string"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine.pdbx_refine_id can be used to distinguish the results of\n joint refinements.", 
                  "type": "string"
               }, 
               "ls_percent_reflns_R_free": {
                  "description": "The number of reflections that satisfy the resolution limits\n established by _refine.ls_d_res_high and _refine.ls_d_res_low\n and the observation limit established by\n _reflns.observed_criterion, and that were used as the test\n reflections (i.e. were excluded from the refinement) when the\n refinement included the calculation of a 'free' R factor,\n expressed as a percentage of the number of geometrically\n observable reflections that satisfy the resolution limits.", 
                  "type": "number"
               }, 
               "pdbx_data_cutoff_high_absF": {
                  "description": "Value of F at \"high end\" of data cutoff.", 
                  "examples": [
                     "17600"
                  ], 
                  "type": "number"
               }, 
               "aniso_B_1_3": {
                  "description": "The [1][3] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure.", 
                  "type": "number"
               }, 
               "pdbx_overall_SU_R_free_Cruickshank_DPI": {
                  "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R-free value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.\n", 
                  "type": "number"
               }, 
               "ls_wR_factor_R_work": {
                  "description": "Weighted residual factor wR for reflections that satisfy the\n resolution limits established by _refine.ls_d_res_high and\n _refine.ls_d_res_low and the observation limit established by\n _reflns.observed_criterion, and that were used as the working\n reflections (i.e. were included in the refinement) when the\n refinement included the calculation of a 'free' R factor.\n Details of how reflections were assigned to the working and\n test sets are given in _reflns.R_free_details.\n\n      ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^\n wR = ( ---------------------------- )\n      (        sum|w Y~obs~^2^|      )\n\n Y~obs~  = the observed amplitude specified by\n           _refine.ls_structure_factor_coef\n Y~calc~ = the calculated amplitude specified by\n           _refine.ls_structure_factor_coef\n w       = the least-squares weight\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "aniso_B_1_2": {
                  "description": "The [1][2] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure.", 
                  "type": "number"
               }, 
               "pdbx_starting_model": {
                  "description": "Starting model for refinement.  Starting model for\n molecular replacement should refer to a previous\n structure or experiment.", 
                  "examples": [
                     "BDL001"
                  ], 
                  "type": "string"
               }, 
               "overall_SU_R_free": {
                  "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the free R value.\n\n The overall standard uncertainty (sigma~B~) gives an idea\n of the uncertainty in the B values of averagely defined\n atoms (atoms with B values equal to the average B value).\n\n                        N~a~\n (sigma~B~)^2^ = 0.65 ---------- (R~free~)^2^ (D~min~)^2^ C^-2/3^\n                      (N~o~-N~p~)\n\n\n N~a~     = number of atoms included in refinement\n N~o~     = number of observations\n N~p~     = number of parameters refined\n R~free~  = conventional free crystallographic R value calculated\n          using reflections not included in refinement\n D~min~   = maximum resolution\n C        = completeness of data\n\n Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.\n\n      Murshudov, G. N. & Dodson,\n      E. J. (1997). Simplified error estimation a la\n      Cruickshank in macromolecular crystallography.\n      CCP4 Newsletter on Protein Crystallography, No. 33,\n      January 1997, pp. 31-39.\n\n     http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html", 
                  "type": "number"
               }, 
               "ls_matrix_type": {
                  "enum": [
                     "userblock", 
                     "diagonal", 
                     "fullcycle", 
                     "sparse", 
                     "full", 
                     "atomblock"
                  ], 
                  "description": "Type of matrix used to accumulate the least-squares derivatives.", 
                  "type": "string"
               }, 
               "ls_redundancy_reflns_all": {
                  "description": "The ratio of the total number of observations of the\n reflections that satisfy the resolution limits established by\n _refine.ls_d_res_high and _refine.ls_d_res_low to the number\n of crystallographically unique reflections that satisfy the\n same limits.", 
                  "type": "number"
               }, 
               "pdbx_overall_ESU_R": {
                  "description": "Overall estimated standard uncertainties of positional\n parameters based on R value.", 
                  "type": "number"
               }, 
               "pdbx_solvent_vdw_probe_radii": {
                  "description": "For bulk solvent mask calculation, the value by which the vdw radii of non-ion atoms (like carbon) are increased and used.", 
                  "type": "number"
               }, 
               "pdbx_solvent_shrinkage_radii": {
                  "description": "For bulk solvent mask calculation, amount mask is shrunk after taking away atoms with new radii and a constant value assigned to this new region.", 
                  "type": "number"
               }, 
               "aniso_B_3_3": {
                  "description": "The [3][3] element of the matrix that defines the overall\n anisotropic displacement model if one was refined for this\n structure.", 
                  "type": "number"
               }, 
               "overall_SU_ML": {
                  "description": "          The overall standard uncertainty (estimated standard deviation)\n           of the positional parameters based on a maximum likelihood\n           residual.\n\n           The overall standard uncertainty (sigma~X~)^2^ gives an\n           idea of the uncertainty in the position of averagely\n           defined atoms (atoms with B values equal to average B value)\n\n                 3                         N~a~\n(sigma~X~)^2^  = ---------------------------------------------------------\n                 8 pi^2^ sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^2^}\n\n           N~a~           = number of atoms\n           E~o~           = normalized structure factors\n           m              = figure of merit of phases of reflections\n                            included in the summation\n           s              = reciprocal-space vector\n\n           SUM_AS         = (sigma~A~)^2^/Sigma^2^\n           Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n           sigma~{E;exp}~  = experimental uncertainties of normalized\n                            structure factors\n           sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                            estimated using maximum likelihood\n           Sigma~P~        = sum~{atoms in model}~ f^2^\n           Sigma~N~        = sum~{atoms in crystal}~ f^2^\n           f               = atom form factor\n           delta~x~        = expected error\n           epsilon         = multiplicity of diffracting plane\n\n           summation is over all reflections included in refinement\n\n           Ref: (sigma_A estimation) \"Refinement of macromolecular\n                structures by the maximum-likelihood method\",\n                Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n                Acta Cryst. D53, 240-255.\n\n                (SU ML estimation) Murshudov, G. N. & Dodson,\n                E. J. (1997). Simplified error estimation a la\n                Cruickshank in macromolecular crystallography.\n                CCP4 Newsletter on Protein Crystallography, No. 33,\n                January 1997, pp. 31-39.\n\n               http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html", 
                  "type": "number"
               }, 
               "overall_FOM_work_R_set": {
                  "description": "Average figure of merit of phases of reflections included in\n the refinement.\n\n This value is derived from the likelihood function.\n\n FOM           = I~1~(X)/I~0~(X)\n\n I~0~, I~1~     = zero- and first-order modified Bessel functions\n                 of the first kind\n X              = sigma~A~ |E~o~| |E~c~|/SIGMA\n E~o~, E~c~     = normalized observed and calculated structure\n                 factors\n sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)\n                 estimated using maximum likelihood\n Sigma~P~       = sum~{atoms in model}~ f^2^\n Sigma~N~       = sum~{atoms in crystal}~ f^2^\n f              = form factor of atoms\n delta~x~       = expected error\n SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]\n sigma~{E;exp}~ = uncertainties of normalized observed\n                 structure factors\n epsilon       = multiplicity of the diffracting plane\n\n Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).\n      Acta Cryst. D53, 240-255.", 
                  "type": "number"
               }, 
               "pdbx_average_fsc_overall": {
                  "description": "Overall average Fourier Shell Correlation (avgFSC) between model and\n observed structure factors for all reflections.\n\n The average FSC is a measure of the agreement between observed\n and calculated structure factors.\n\n            sum(N~i~ FSC~i~)\n avgFSC   = ----------------\n            sum(N~i~)\n\n\n N~i~     = the number of all reflections in the resolution shell i\n FSC~i~   = FSC for all reflections in the i-th resolution shell calculated as:\n\n           (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))\n FSC~i~  = -------------------------------------------\n           (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^\n\n |F~o~|   = amplitude of observed structure factor\n |F~c~|   = amplitude of calculated structure factor\n phi~o~   = phase of observed structure factor\n phi~c~   = phase of calculated structure factor\n fom      = figure of merit of the experimental phases.\n\n Summation of FSC~i~ is carried over all reflections in the resolution shell.\n\n Summation of avgFSC is carried over all resolution shells.\n\n\n Ref:  Rosenthal P.B., Henderson R.\n       \"Optimal determination of particle orientation, absolute hand,\n       and contrast loss in single-particle electron cryomicroscopy.\n       Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).\n", 
                  "type": "number"
               }, 
               "overall_SU_R_Cruickshank_DPI": {
                  "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n The overall standard uncertainty (sigma~B~) gives an idea\n of the uncertainty in the B values of averagely defined\n atoms (atoms with B values equal to the average B value).\n\n                        N~a~\n (sigma~B~)^2^ = 0.65 ---------- (R~value~)^2^ (D~min~)^2^ C^-2/3^\n                      (N~o~-N~p~)\n\n\n N~a~     = number of atoms included in refinement\n N~o~     = number of observations\n N~p~     = number of parameters refined\n R~value~ = conventional crystallographic R value\n D~min~   = maximum resolution\n C        = completeness of data\n\n Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.\n\n      Murshudov, G. N. & Dodson,\n      E. J. (1997). Simplified error estimation a la\n      Cruickshank in macromolecular crystallography.\n      CCP4 Newsletter on Protein Crystallography, No. 33,\n      January 1997, pp. 31-39.\n\n     http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html\n", 
                  "type": "number"
               }, 
               "pdbx_overall_phase_error": {
                  "description": "The overall phase error for all reflections after refinement using\n the current refinement target.", 
                  "examples": [
                     "0.30"
                  ], 
                  "type": "number"
               }, 
               "pdbx_diffrn_id": {
                  "uniqueItems": false, 
                  "items": {
                     "description": "An identifier for the diffraction data set used in this refinement.\n\n Multiple diffraction data sets specified as a comma separated list.", 
                     "type": "string"
                  }, 
                  "type": "array"
               }, 
               "pdbx_overall_SU_R_free_Blow_DPI": {
                  "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R-free value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n Ref: Blow, D (2002) Acta Cryst. D58, 792-797\n", 
                  "type": "number"
               }, 
               "occupancy_max": {
                  "description": "The maximum value for occupancy found in the coordinate set.", 
                  "type": "number"
               }, 
               "ls_redundancy_reflns_obs": {
                  "description": "The ratio of the total number of observations of the\n reflections that satisfy the resolution limits established by\n _refine.ls_d_res_high and _refine.ls_d_res_low and the\n observation limit established by _reflns.observed_criterion to\n the number of crystallographically unique reflections that\n satisfy the same limits.", 
                  "type": "number"
               }, 
               "pdbx_solvent_ion_probe_radii": {
                  "description": "For bulk solvent mask calculation, the amount that the ionic radii of atoms, which can be ions, are increased used.", 
                  "type": "number"
               }, 
               "ls_R_factor_R_free_error": {
                  "description": "The estimated error in _refine.ls_R_factor_R_free.\n The method used to estimate the error is described in the\n item _refine.ls_R_factor_R_free_error_details.", 
                  "type": "number"
               }, 
               "solvent_model_details": {
                  "description": "Special aspects of the solvent model used during refinement.", 
                  "type": "string"
               }, 
               "pdbx_stereochem_target_val_spec_case": {
                  "description": "\nSpecial case of stereochemistry target values used\nin SHELXL refinement.\n", 
                  "type": "string"
               }, 
               "ls_d_res_high": {
                  "description": "The smallest value for the interplanar spacings for the\n reflection data used in the refinement in angstroms. This is\n called the highest resolution.", 
                  "type": "number"
               }, 
               "pdbx_overall_SU_R_Blow_DPI": {
                  "description": "The overall standard uncertainty (estimated standard deviation)\n of the displacement parameters based on the crystallographic\n R value, expressed in a formalism known as the dispersion\n precision indicator (DPI).\n\n Ref: Blow, D (2002) Acta Cryst. D58, 792-797\n", 
                  "type": "number"
               }
            }, 
            "required": [
               "entry_id", 
               "pdbx_refine_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_xplor_file": {
         "minItems": 1, 
         "items": {
            "properties": {
               "param_file": {
                  "description": "Parameter file name in X-PLOR/CNS refinement.", 
                  "examples": [
                     "PARAM_NDBX_HIGH.DNA"
                  ], 
                  "type": "string"
               }, 
               "topol_file": {
                  "description": "Topology file name in X-PLOR/CNS refinement.", 
                  "examples": [
                     "TOP_NDBX.DNA"
                  ], 
                  "type": "string"
               }, 
               "serial_no": {
                  "description": "Serial number.", 
                  "type": "string"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _pdbx_xplor_file.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }
            }, 
            "required": [
               "pdbx_refine_id", 
               "serial_no"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_deposit_group": {
         "minItems": 1, 
         "items": {
            "properties": {
               "group_type": {
                  "enum": [
                     "ground state", 
                     "changed state", 
                     "undefined"
                  ], 
                  "description": "Text to describe a grouping of entries in multiple collections", 
                  "type": "string"
               }, 
               "group_description": {
                  "description": "A description of the contents of entries in the collection.", 
                  "type": "string"
               }, 
               "group_id": {
                  "description": "A unique identifier for a group of entries deposited as a collection.", 
                  "type": "string"
               }, 
               "group_title": {
                  "description": "A title to describe the group of entries deposited in the collection.", 
                  "type": "string"
               }
            }, 
            "required": [
               "group_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_buffer": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pH": {
                  "description": "Additional details about the buffer.", 
                  "type": "number"
               }, 
               "specimen_id": {
                  "description": "pointer to  _em_specimen.id", 
                  "type": "string"
               }, 
               "name": {
                  "description": "The name of the buffer.", 
                  "examples": [
                     "Polymix buffer"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _em_buffer.id must\n uniquely identify the sample buffer.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Additional details about the buffer.", 
                  "examples": [
                     "20mM NaCl, 10mM Tris-HCL,1mM MgCl2,1mM EDTA"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "specimen_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_specimen": {
         "minItems": 1, 
         "items": {
            "properties": {
               "experiment_id": {
                  "description": "Pointer to _em_experiment.id.", 
                  "type": "string"
               }, 
               "shadowing_applied": {
                  "enum": [
                     "YES", 
                     "NO"
                  ], 
                  "description": "'YES' indicates that the specimen has been shadowed.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "The item  _em_specimen.id uniquely identifies a specimen along with\n its preparation methods.", 
                  "type": "string"
               }, 
               "staining_applied": {
                  "enum": [
                     "YES", 
                     "NO"
                  ], 
                  "description": "'YES' indicates that the specimen has been stained.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "A description of any additional details of the specimen preparation.", 
                  "examples": [
                     "This sample was monodisperse.", 
                     "Au was deposited at a 30 degree angle to 15 nm thickness.", 
                     "Colloidal gold particles were deposited by dipping into dilute solution.", 
                     "The specimen was frozen at high pressure using the bal-tec hpm 010 instrument.", 
                     "The embedded sample was sectioned at 100 K to 50 nm final thickness."
                  ], 
                  "type": "string"
               }, 
               "concentration": {
                  "description": "The concentration (in milligrams per milliliter, mg/ml)\n of the complex in the sample.", 
                  "examples": [
                     "1.35"
                  ], 
                  "type": "number"
               }, 
               "embedding_applied": {
                  "enum": [
                     "YES", 
                     "NO"
                  ], 
                  "description": "'YES' indicates that the specimen has been embedded.", 
                  "type": "string"
               }, 
               "vitrification_applied": {
                  "enum": [
                     "YES", 
                     "NO"
                  ], 
                  "description": "'YES' indicates that the specimen was vitrified by cryopreservation.", 
                  "type": "string"
               }
            }, 
            "required": [
               "experiment_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_phasing_MAD_set_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "reflns": {
                  "description": "_pdbx_phasing_MAD_set_shell.reflns records the number of\n reflections used for MAD phasing.", 
                  "type": "integer"
               }, 
               "reflns_acentric": {
                  "description": "_pdbx_phasing_MAD_set_shell.reflns_acentric records the number of\n acentric reflections for MAD phasing.", 
                  "type": "integer"
               }, 
               "fom_centric": {
                  "description": "_pdbx_phasing_MAD_set_shell.fom_centric  records the figure of merit\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "loc": {
                  "description": "_pdbx_phasing_MAD_set_shell.loc records lack of closure\n for MAD phasing.", 
                  "type": "number"
               }, 
               "fom_acentric": {
                  "description": "_pdbx_phasing_MAD_set_shell.fom_acentric  records the figure of merit\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "R_kraut_centric": {
                  "description": "_pdbx_phasing_MAD_set_shell.R_kraut_centric records R_kraut\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "power_acentric": {
                  "description": "_pdbx_phasing_MAD_set_shell.power_acentric records phasing power\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "R_kraut_acentric": {
                  "description": "_pdbx_phasing_MAD_set_shell.R_kraut_acentric records R_kraut\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "d_res_low": {
                  "description": "_pdbx_phasing_MAD_set_shell.d_res_low records the lowerest\n resolution for phasing set.", 
                  "type": "number"
               }, 
               "R_kraut": {
                  "description": "_pdbx_phasing_MAD_set_shell.R_kraut records R_kraut\n for MAD phasing.", 
                  "type": "number"
               }, 
               "R_cullis": {
                  "description": "_pdbx_phasing_MAD_set_shell.R_cullis records R_cullis\n for MAD phasing.", 
                  "type": "number"
               }, 
               "power": {
                  "description": "_pdbx_phasing_MAD_set_shell.power records phasing power\n for MAD phasing.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "_pdbx_phasing_MAD_set_shell.d_res_high records the highest resolution\n for the phasing set.", 
                  "type": "number"
               }, 
               "id": {
                  "description": "_pdbx_phasing_MAD_set_shell.id records phase set name\n for MAD phasing.", 
                  "type": "string"
               }, 
               "R_cullis_acentric": {
                  "description": "_pdbx_phasing_MAD_set_shell.R_cullis_acentric records R_cullis\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "power_centric": {
                  "description": "_pdbx_phasing_MAD_set_shell.power_centric records phasing power\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "loc_centric": {
                  "description": "_pdbx_phasing_MAD_set_shell.loc_centric records lack of closure\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "loc_acentric": {
                  "description": "_pdbx_phasing_MAD_set_shell.loc_acentric records lack of closure\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "fom": {
                  "description": "_pdbx_phasing_MAD_set_shell.fom records the figure of merit\n for MAD phasing.", 
                  "type": "number"
               }, 
               "reflns_centric": {
                  "description": "_pdbx_phasing_MAD_set_shell.reflns_centric records the number of\n centric reflections for MAD phasing.", 
                  "type": "integer"
               }, 
               "R_cullis_centric": {
                  "description": "_pdbx_phasing_MAD_set_shell.R_cullis_centric records R_cullis\n using centric data for MAD phasing.", 
                  "type": "number"
               }
            }, 
            "required": [
               "d_res_high", 
               "d_res_low", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_image_scans": {
         "minItems": 1, 
         "items": {
            "properties": {
               "number_digital_images": {
                  "description": "The number of real images.", 
                  "type": "integer"
               }, 
               "id": {
                  "description": "The value of _em_image_scans.id must uniquely identify\n the images scanned.", 
                  "type": "string"
               }, 
               "dimension_height": {
                  "description": "height of scanned image", 
                  "type": "integer"
               }, 
               "used_frames_per_image": {
                  "description": "Range of time-slice (movie) frames used for the reconstruction.", 
                  "examples": [
                     "2-10"
                  ], 
                  "type": "string"
               }, 
               "sampling_size": {
                  "description": "The sampling step size (microns) set on the scanner.", 
                  "type": "number"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the\n ENTRY category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details about image recording.", 
                  "type": "string"
               }, 
               "od_range": {
                  "description": "The optical density range (OD=-log 10 transmission).\n To the eye OD=1 appears light grey and OD=3 is opaque.", 
                  "examples": [
                     "1.4"
                  ], 
                  "type": "number"
               }, 
               "frames_per_image": {
                  "description": "Total number of time-slice (movie) frames taken per image.", 
                  "examples": [
                     "10"
                  ], 
                  "type": "integer"
               }, 
               "dimension_width": {
                  "description": "width of scanned image", 
                  "type": "integer"
               }, 
               "image_recording_id": {
                  "description": "foreign key linked to _em_image_recording", 
                  "type": "string"
               }, 
               "quant_bit_size": {
                  "description": "The number of bits per pixel.", 
                  "examples": [
                     "8"
                  ], 
                  "type": "integer"
               }, 
               "scanner_model": {
                  "enum": [
                     "TEMSCAN", 
                     "OTHER", 
                     "ZEISS SCAI", 
                     "OPTRONICS", 
                     "NIKON SUPER COOLSCAN 9000", 
                     "EIKONIX IEEE 488", 
                     "PERKIN ELMER", 
                     "IMAGE SCIENCE PATCHWORK DENSITOMETER", 
                     "EMIL 10", 
                     "PRIMESCAN", 
                     "NIKON COOLSCAN"
                  ], 
                  "description": "The scanner model.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id", 
               "image_recording_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MIR_der_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_loc_acentric": {
                  "description": "record lack of closure obtained from acentric data for each\n derivative, but broken into resolution shells", 
                  "type": "number"
               }, 
               "pdbx_reflns_acentric": {
                  "description": "record  number of acentric reflections used for phasing for each\n derivative, but broken into resolution shells", 
                  "type": "integer"
               }, 
               "pdbx_R_cullis_centric": {
                  "description": "record R Cullis obtained from centric data for each\n derivative, but broken into resolution shells", 
                  "type": "number"
               }, 
               "pdbx_power_acentric": {
                  "description": "record phasing power obtained from acentric data for each\n derivative, but broken into resolution shells", 
                  "type": "number"
               }, 
               "d_res_low": {
                  "description": "The highest value for the interplanar spacings for the\n reflection data for this derivative in this shell. This is called\n the lowest resolution.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "The lowest value  for the interplanar spacings for the\n reflection data for this derivative in this shell. This is called\n the highest resolution.", 
                  "type": "number"
               }, 
               "pdbx_reflns_centric": {
                  "description": "record  number of centric reflections used for phasing for each\n derivative, but broken into resolution shells", 
                  "type": "number"
               }, 
               "pdbx_loc_centric": {
                  "description": "record lack of closure obtained from centric data for each\n derivative, but broken into resolution shells", 
                  "type": "number"
               }, 
               "der_id": {
                  "description": "This data item is a pointer to _phasing_MIR_der.id in the\n PHASING_MIR_DER category.", 
                  "type": "string"
               }, 
               "pdbx_power_centric": {
                  "description": "record phasing power obtained from centric data for each\n derivative, but broken into resolution shells", 
                  "type": "number"
               }, 
               "pdbx_R_cullis_acentric": {
                  "description": "record R Cullis obtained from acentric data for each\n derivative, but broken into resolution shells", 
                  "type": "number"
               }
            }, 
            "required": [
               "d_res_high", 
               "d_res_low", 
               "der_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_ncs_dom_lim": {
         "minItems": 1, 
         "items": {
            "properties": {
               "dom_id": {
                  "description": "This data item is a pointer to _struct_ncs_dom.id in the\n STRUCT_NCS_DOM category.", 
                  "type": "string"
               }, 
               "end_label_seq_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain ends.\n", 
                  "type": "integer"
               }, 
               "pdbx_refine_code": {
                  "description": "record the refinement code number (from CCP4.)", 
                  "type": "number"
               }, 
               "beg_label_alt_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain begins.\n", 
                  "type": "string"
               }, 
               "selection_details": {
                  "description": "A text description of the selection of residues that\n correspond to this domain.", 
                  "type": "string"
               }, 
               "beg_label_asym_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain begins.\n\n This data item is a pointer to _struct_asym.id in the\n STRUCT_ASYM category.", 
                  "type": "string"
               }, 
               "beg_auth_asym_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain begins.\n", 
                  "type": "string"
               }, 
               "beg_auth_seq_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain begins.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "end_auth_seq_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain ends.\n", 
                  "type": "string"
               }, 
               "end_label_alt_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain ends.", 
                  "type": "string"
               }, 
               "beg_label_seq_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain begins.\n", 
                  "type": "integer"
               }, 
               "pdbx_component_id": {
                  "description": "Record number of the NCS domain limit assignment.", 
                  "type": "integer"
               }, 
               "beg_label_comp_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain begins.\n", 
                  "type": "string"
               }, 
               "end_label_asym_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain ends.\n\n This data item is a pointer to _struct_asym.id in the\n STRUCT_ASYM category.", 
                  "type": "string"
               }, 
               "pdbx_ens_id": {
                  "description": "This is a unique identifier for a collection NCS related domains.\n This references item '_struct_ncs_dom.pdbx_ens_id'.\n", 
                  "type": "string"
               }, 
               "end_auth_asym_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain ends.\n", 
                  "type": "string"
               }, 
               "end_label_comp_id": {
                  "description": "A component of the identifier for the monomer at which this\n segment of the domain ends.\n", 
                  "type": "string"
               }
            }, 
            "required": [
               "dom_id", 
               "pdbx_component_id", 
               "pdbx_ens_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_ctf_correction": {
         "minItems": 1, 
         "items": {
            "properties": {
               "details": {
                  "description": "Any additional details about CTF correction", 
                  "examples": [
                     "CTF amplitude correction was performed following 3D reconstruction"
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "Primary key", 
                  "type": "string"
               }, 
               "em_image_processing_id": {
                  "description": "Foreign key to the EM_IMAGE_PROCESSING category", 
                  "type": "string"
               }, 
               "type": {
                  "description": "Type of CTF correction applied", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_assembly": {
         "minItems": 1, 
         "items": {
            "properties": {
               "method_details": {
                  "description": "Provides details of the method used to determine or\n compute the assembly.", 
                  "type": "string"
               }, 
               "oligomeric_count": {
                  "description": "The number of polymer molecules in the assembly.", 
                  "type": "integer"
               }, 
               "details": {
                  "description": "A description of special aspects of the macromolecular assembly.", 
                  "examples": [
                     "The icosahedral virus particle."
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "The value of _pdbx_struct_assembly.id must uniquely identify a record in\n the PDBX_STRUCT_ASSEMBLY list.", 
                  "type": "string"
               }, 
               "oligomeric_details": {
                  "description": "Provides the details of the oligomeric state of the assembly.", 
                  "examples": [
                     "monomer", 
                     "octameric", 
                     "tetradecameric", 
                     "eicosameric", 
                     "21-meric", 
                     "60-meric", 
                     "180-meric", 
                     "helical"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "citation_editor": {
         "minItems": 1, 
         "items": {
            "properties": {
               "citation_id": {
                  "description": "This data item is a pointer to _citation.id in the CITATION\n category.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "Names of an editor of the citation; relevant for books and\n book chapters.\n\n The family name(s), followed by a comma and including any\n dynastic components, precedes the first name(s) or initial(s).", 
                  "examples": [
                     "Bleary, Percival R.", 
                     "O'Neil, F.K.", 
                     "Van den Bossche, G.", 
                     "Yang, D.-L.", 
                     "Simonov, Yu.A"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "This data item defines the order of the editor's name in the\n list of editors of a citation.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "citation_id", 
               "name"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MAD_set": {
         "minItems": 1, 
         "items": {
            "properties": {
               "clust_id": {
                  "description": "This data item is a pointer to _phasing_MAD_clust.id in\n the PHASING_MAD_CLUST category.", 
                  "type": "string"
               }, 
               "wavelength": {
                  "description": "The wavelength at which this data set was measured.", 
                  "type": "number"
               }, 
               "pdbx_atom_type": {
                  "description": "record the type of heavy atoms which produce anomolous singal.", 
                  "type": "string"
               }, 
               "d_res_low": {
                  "description": "The highest value for the interplanar spacings for the\n reflection data used for this set of data. This is called\n the lowest resolution.", 
                  "type": "number"
               }, 
               "pdbx_f_double_prime_refined": {
                  "description": "record the refined f_double_prime (not from experiment).", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "The lowest value for the interplanar spacings for the\n reflection data used for this set of data. This is called\n the highest resolution.", 
                  "type": "number"
               }, 
               "set_id": {
                  "description": "This data item is a pointer to _phasing_set.id in the\n PHASING_SET category.", 
                  "type": "string"
               }, 
               "f_prime": {
                  "description": "The f' component of the anomalous scattering factor for this\n wavelength.", 
                  "type": "number"
               }, 
               "expt_id": {
                  "description": "This data item is a pointer to _phasing_MAD_expt.id in the\n PHASING_MAD_EXPT category.", 
                  "type": "string"
               }, 
               "f_double_prime": {
                  "description": "The f'' component of the anomalous scattering factor for this\n wavelength.", 
                  "type": "number"
               }, 
               "pdbx_f_prime_refined": {
                  "description": "record the refined f_prime (not from experiment).", 
                  "type": "number"
               }
            }, 
            "required": [
               "clust_id", 
               "expt_id", 
               "set_id", 
               "wavelength"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_molecule_features": {
         "minItems": 1, 
         "items": {
            "properties": {
               "prd_id": {
                  "description": "The value of _pdbx_molecule_features.prd_id is the PDB accession code for this\n reference molecule.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "A name of the molecule.", 
                  "examples": [
                     "thiostrepton"
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "Anthracycline", 
                     "Heterocyclic", 
                     "Polysaccharide", 
                     "Imino sugar", 
                     "Cyclic depsipeptide", 
                     "Unknown", 
                     "Lipopeptide", 
                     "Chalkophore, Polypeptide", 
                     "Ansamycin", 
                     "Cyclic lipopeptide", 
                     "Oligopeptide", 
                     "Macrolide", 
                     "Peptide-like", 
                     "Amino acid", 
                     "Oligosaccharide", 
                     "Thiolactone", 
                     "Thiopeptide", 
                     "Glycopeptide", 
                     "Lipoglycopeptide", 
                     "Nucleoside", 
                     "Polypeptide", 
                     "Anthraquinone", 
                     "Chalkophore", 
                     "Polycyclic", 
                     "Siderophore", 
                     "Chromophore", 
                     "Cyclic peptide", 
                     "Keto acid", 
                     "Aminoglycoside", 
                     "Peptaibol", 
                     "Quinolone", 
                     "Non-polymer"
                  ], 
                  "description": "Defines the structural classification of the molecule.", 
                  "examples": [
                     "Peptide-like", 
                     "Macrolide"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "Additional details describing the molecule.", 
                  "type": "string"
               }, 
               "class": {
                  "enum": [
                     "Antibiotic, Antineoplastic", 
                     "Antimicrobial", 
                     "Antithrombotic", 
                     "Metabolism", 
                     "Antimicrobial, Antiparasitic, Antibiotic", 
                     "Transport activator", 
                     "Thrombin inhibitor, Trypsin inhibitor", 
                     "Inhibitor", 
                     "Antibiotic", 
                     "Toxin", 
                     "Anticoagulant", 
                     "Immunosuppressant", 
                     "Unknown", 
                     "Antiretroviral", 
                     "Anticancer", 
                     "Antibiotic, Anthelmintic", 
                     "Antifungal", 
                     "Antitumor", 
                     "Thrombin inhibitor", 
                     "Antiparasitic", 
                     "Metal transport", 
                     "Antiinflammatory", 
                     "Trypsin inhibitor", 
                     "Chaperone binding", 
                     "Antiviral", 
                     "Anticoagulant, Antithrombotic", 
                     "Enzyme inhibitor", 
                     "Antimicrobial, Antitumor", 
                     "CASPASE inhibitor", 
                     "Antagonist", 
                     "Antimicrobial, Antiretroviral", 
                     "Receptor", 
                     "Oxidation-reduction", 
                     "Growth factor", 
                     "Anthelmintic", 
                     "Antibiotic, Antimicrobial", 
                     "Antineoplastic", 
                     "Lantibiotic"
                  ], 
                  "description": "Broadly defines the function of the molecule.", 
                  "type": "string"
               }
            }, 
            "required": [
               "prd_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_MIR_der": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_loc_acentric": {
                  "description": "record lack of closure obtained from acentric data for\n each derivative.", 
                  "type": "number"
               }, 
               "reflns_acentric": {
                  "description": "The number of acentric reflections used in phasing for this\n derivative.", 
                  "type": "integer"
               }, 
               "id": {
                  "description": "The value of _phasing_MIR_der.id must uniquely identify\n a record in the PHASING_MIR_DER list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "KAu(CN)2", 
                     "K2HgI4_anom", 
                     "K2HgI4_iso"
                  ], 
                  "type": "string"
               }, 
               "der_set_id": {
                  "description": "The data set that was treated as the derivative in this\n experiment.\n\n This data item is a pointer to _phasing_set.id in the\n PHASING_SET category.", 
                  "type": "string"
               }, 
               "reflns_anomalous": {
                  "description": "The number of anomalous reflections used in phasing for this\n derivative.", 
                  "type": "integer"
               }, 
               "power_acentric": {
                  "description": "The mean phasing power P for acentric reflections for this\n derivative.\n\n            sum|Fh~calc~^2^|\n P = (----------------------------)^1/2^\n      sum|Fph~obs~ - Fph~calc~|^2^\n\n Fph~obs~  = the observed structure-factor amplitude of this\n             derivative\n Fph~calc~ = the calculated structure-factor amplitude of this\n             derivative\n Fh~calc~  = the calculated structure-factor amplitude from the\n             heavy-atom model\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "d_res_low": {
                  "description": "The highest value for  the interplanar spacings for the\n reflection data used for this derivative. This is called the\n lowest resolution.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "The lowest value for the interplanar spacings for the\n reflection data used for this derivative. This is called the\n highest resolution.", 
                  "type": "number"
               }, 
               "reflns_criteria": {
                  "description": "Criteria used to limit the reflections used in the phasing\n calculations.", 
                  "examples": [
                     "> 4 \\s(I)"
                  ], 
                  "type": "string"
               }, 
               "pdbx_loc_centric": {
                  "description": "record lack of closure obtained from centric data for\n each derivative.", 
                  "type": "number"
               }, 
               "native_set_id": {
                  "description": "The data set that was treated as the native in this\n experiment.\n\n This data item is a pointer to _phasing_set.id in the\n PHASING_SET category.", 
                  "type": "string"
               }, 
               "R_cullis_acentric": {
                  "description": "    Residual factor R~cullis,acen~ for acentric reflections for this\n     derivative.\n\n     The Cullis R factor was originally defined only for centric\n     reflections.  It is, however, also a useful statistical\n     measure for acentric reflections, which is how it is used in\n     this data item.\n\n                 sum| |Fph~obs~ +/- Fp~obs~| - Fh~calc~ |\nR~cullis,acen~ = ----------------------------------------\n                         sum|Fph~obs~ - Fp~obs~|\n\n     Fp~obs~  = the observed structure-factor amplitude of the native\n     Fph~obs~ = the observed structure-factor amplitude of the\n                derivative\n     Fh~calc~ = the calculated structure-factor amplitude from the\n                heavy-atom model\n\n     sum is taken over the specified reflections\n\n     Ref: Cullis, A. F., Muirhead, H., Perutz, M. F., Rossmann, M. G.\n          & North, A. C. T. (1961). Proc. R. Soc. London Ser. A,\n          265, 15-38.", 
                  "type": "number"
               }, 
               "R_cullis_anomalous": {
                  "description": "  Residual factor R~cullis,ano~ for anomalous reflections for this\n   derivative.\n\n   The Cullis R factor was originally defined only for centric\n   reflections.  It is, however, also a useful statistical\n   measure for anomalous  reflections, which is how it is used in\n   this data item.\n\n   This is tabulated for acentric terms.  A value less than 1.0\n   means there is some contribution to the phasing from the\n   anomalous data.\n\n                sum |Fph+~obs~Fph-~obs~ - Fh+~calc~ - Fh-~calc~|\nR~cullis,ano~ = ------------------------------------------------\n                       sum|Fph+~obs~ - Fph-~obs~|\n\n   Fph+~obs~  = the observed positive Friedel structure-factor\n                amplitude for the derivative\n   Fph-~obs~  = the observed negative Friedel structure-factor\n                amplitude for the derivative\n\n   Fh+~calc~  = the calculated positive Friedel structure-factor\n                amplitude from the heavy-atom model\n   Fh-~calc~  = the calculated negative Friedel structure-factor\n                amplitude from the heavy-atom model\n\n   sum is taken over the specified reflections\n\n   Ref: Cullis, A. F., Muirhead, H., Perutz, M. F., Rossmann, M. G.\n        & North, A. C. T. (1961). Proc. R. Soc.  London Ser. A,\n        265, 15-38.\n", 
                  "type": "number"
               }, 
               "power_centric": {
                  "description": "The mean phasing power P for centric reflections for this\n derivative.\n\n            sum|Fh~calc~^2^|\n P = (----------------------------)^1/2^\n      sum|Fph~obs~ - Fph~calc~|^2^\n\n Fph~obs~  = the observed structure-factor amplitude of the\n             derivative\n Fph~calc~ = the calculated structure-factor amplitude of the\n             derivative\n Fh~calc~  = the calculated structure-factor amplitude from the\n             heavy-atom model\n\n sum is taken over the specified reflections", 
                  "type": "number"
               }, 
               "number_of_sites": {
                  "description": "The number of heavy-atom sites in this derivative.", 
                  "type": "integer"
               }, 
               "reflns_centric": {
                  "description": "The number of centric reflections used in phasing for this\n derivative.", 
                  "type": "integer"
               }, 
               "R_cullis_centric": {
                  "description": "Residual factor R~cullis~ for centric reflections for this\n derivative.\n\n             sum| |Fph~obs~ +/- Fp~obs~| - Fh~calc~ |\n R~cullis~ = ----------------------------------------\n                     sum|Fph~obs~ - Fp~obs~|\n\n Fp~obs~  = the observed structure-factor amplitude of the native\n Fph~obs~ = the observed structure-factor amplitude of the\n            derivative\n Fh~calc~ = the calculated structure-factor amplitude from the\n            heavy-atom model\n\n sum is taken over the specified reflections\n\n Ref: Cullis, A. F., Muirhead, H., Perutz, M. F., Rossmann, M. G.\n      & North, A. C. T. (1961). Proc. R. Soc. London Ser. A,\n      265, 15-38.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_related_exp_data_set": {
         "minItems": 1, 
         "items": {
            "properties": {
               "metadata_reference": {
                  "description": "A DOI reference to the metadata decribing the related data set.\n", 
                  "examples": [
                     "doi:10.000/10002/image_data/txt"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "Additional details describing the content of the related data set and its application to\n the current investigation.", 
                  "type": "string"
               }, 
               "data_reference": {
                  "description": "A DOI reference to the related data set.\n", 
                  "examples": [
                     "doi:10.000/10002/image_data/cif"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "Ordinal identifier for each related experimental data set.\n", 
                  "type": "integer"
               }, 
               "data_set_type": {
                  "description": "The type of the experimenatal data set.\n", 
                  "examples": [
                     "diffraction image data", 
                     "NMR free induction decay data"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "entry": {
         "properties": {
            "id": {
               "description": "The value of _entry.id identifies the data block.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
               "type": "string"
            }
         }, 
         "required": [
            "id"
         ], 
         "type": "object"
      }, 
      "struct_keywords": {
         "properties": {
            "entry_id": {
               "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
               "type": "string"
            }, 
            "text": {
               "description": "Keywords describing this structure.", 
               "examples": [
                  "serine protease", 
                  "inhibited complex", 
                  "high-resolution refinement"
               ], 
               "type": "string"
            }, 
            "pdbx_keywords": {
               "description": "Terms characterizing the macromolecular structure.", 
               "examples": [
                  "DNA", 
                  "RNA", 
                  "T-RNA", 
                  "DNA/RNA", 
                  "RIBOZYME", 
                  "PROTEIN/DNA", 
                  "PROTEIN/RNA", 
                  "PEPTIDE NUCLEIC ACID", 
                  "PEPTIDE NUCLEIC ACID/DNA", 
                  "DNA-BINDING PROTEIN", 
                  "RNA-BINDING PROTEIN"
               ], 
               "type": "string"
            }
         }, 
         "required": [
            "entry_id"
         ], 
         "type": "object"
      }, 
      "pdbx_exptl_crystal_grow_sol": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pH": {
                  "description": "The pH of the solution.", 
                  "examples": [
                     "7.2"
                  ], 
                  "type": "number"
               }, 
               "volume_units": {
                  "description": "The volume units of the solution.", 
                  "examples": [
                     "milliliter", 
                     "micoliter"
                  ], 
                  "type": "string"
               }, 
               "crystal_id": {
                  "description": "This data item is a pointer to _exptl_crystal.id in the\n EXPTL_CRYSTAL category.", 
                  "type": "string"
               }, 
               "sol_id": {
                  "enum": [
                     "precipitant", 
                     "reservoir", 
                     "macromolecule"
                  ], 
                  "description": "An identifier for this solution (e.g. precipitant, reservoir, macromolecule)", 
                  "type": "string"
               }, 
               "volume": {
                  "description": "The volume of the solution.", 
                  "examples": [
                     "200.", 
                     "0.1"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "crystal_id", 
               "sol_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_legacy_oper_list": {
         "minItems": 1, 
         "items": {
            "properties": {
               "matrix_1_2": {
                  "description": "The [1][2] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_1_3": {
                  "description": "The [1][3] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "id": {
                  "description": "This integer value must uniquely identify a\n record in the PDBX_STRUCT_LEGACY_OPER_LIST list.", 
                  "type": "integer"
               }, 
               "matrix_2_2": {
                  "description": "The [2][2] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_1_1": {
                  "description": "The [1][1] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_2_1": {
                  "description": "The [2][1] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "vector_3": {
                  "description": "The [3] element of the three-element vector component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_2_3": {
                  "description": "The [2][3] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "vector_1": {
                  "description": "The [1] element of the three-element vector component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "vector_2": {
                  "description": "The [2] element of the three-element vector component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "name": {
                  "description": "A descriptive name for the transformation operation.", 
                  "examples": [
                     "identity matrix", 
                     "two-fold rotation"
                  ], 
                  "type": "string"
               }, 
               "matrix_3_1": {
                  "description": "The [3][1] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_3_2": {
                  "description": "The [3][2] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }, 
               "matrix_3_3": {
                  "description": "The [3][3] element of the 3x3 matrix component of the\n transformation operation.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "citation_author": {
         "minItems": 1, 
         "items": {
            "properties": {
               "citation_id": {
                  "description": "This data item is a pointer to _citation.id in the CITATION\n category.", 
                  "type": "string"
               }, 
               "name": {
                  "description": "Name of an author of the citation; relevant for journal\n articles, books and book chapters.\n\n The family name(s), followed by a comma and including any\n dynastic components, precedes the first name(s) or initial(s).", 
                  "examples": [
                     "Bleary, Percival R.", 
                     "O'Neil, F.K.", 
                     "Van den Bossche, G.", 
                     "Yang, D.-L.", 
                     "Simonov, Yu.A"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "This data item defines the order of the author's name in the\n list of authors of a citation.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "citation_id", 
               "name", 
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "chem_comp_atom": {
         "minItems": 1, 
         "items": {
            "properties": {
               "type_symbol": {
                  "description": "The code used to identify the atom species representing\n this atom type. Normally this code is the element\n symbol.", 
                  "examples": [
                     "C", 
                     "N", 
                     "O"
                  ], 
                  "type": "string"
               }, 
               "atom_id": {
                  "description": "The value of _chem_comp_atom.atom_id must uniquely identify\n each atom in each monomer in the CHEM_COMP_ATOM list.\n\n The atom identifiers need not be unique over all atoms in the\n data block; they need only be unique for each atom in a\n component.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "type": "string"
               }, 
               "comp_id": {
                  "description": "This data item is a pointer to _chem_comp.id in the CHEM_COMP\n category.", 
                  "type": "string"
               }
            }, 
            "required": [
               "atom_id", 
               "comp_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_struct_assembly_gen": {
         "minItems": 1, 
         "items": {
            "properties": {
               "assembly_id": {
                  "description": "This data item is a pointer to _pdbx_struct_assembly.id in the\n PDBX_STRUCT_ASSEMBLY category.", 
                  "type": "string"
               }, 
               "asym_id_list": {
                  "uniqueItems": false, 
                  "items": {
                     "description": "This data item is a pointer to _struct_asym.id in\n the STRUCT_ASYM category.\n\n This item may be expressed as a comma separated list of identifiers.", 
                     "type": "string"
                  }, 
                  "type": "array"
               }, 
               "oper_expression": {
                  "description": "Identifies the operation of collection of operations\n from category PDBX_STRUCT_OPER_LIST.\n\n Operation expressions may have the forms:\n\n  (1)        the single operation 1\n  (1,2,5)    the operations 1, 2, 5\n  (1-4)      the operations 1,2,3 and 4\n  (1,2)(3,4) the combinations of operations\n             3 and 4 followed by 1 and 2 (i.e.\n             the cartesian product of parenthetical\n             groups applied from right to left)\n", 
                  "examples": [
                     "(1)", 
                     "(1,2,5)", 
                     "(1-60)", 
                     "(1-60)(61)"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "This data item is an ordinal index for the\n PDBX_STRUCT_ASSEMBLY category.", 
                  "type": "integer"
               }
            }, 
            "required": [
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_virus_entity": {
         "minItems": 1, 
         "items": {
            "properties": {
               "virus_isolate": {
                  "enum": [
                     "OTHER", 
                     "SUBSPECIES", 
                     "SEROTYPE", 
                     "STRAIN", 
                     "SEROCOMPLEX", 
                     "SPECIES"
                  ], 
                  "description": "The isolate from which the virus was obtained.", 
                  "type": "string"
               }, 
               "id": {
                  "description": "Is the unique identifier for VIRUS_ENTITY category.", 
                  "type": "string"
               }, 
               "entity_assembly_id": {
                  "description": "This data item is a pointer to _em_virus_entity.id in the\n ENTITY_ASSEMBLY category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Additional details about this virus entity", 
                  "type": "string"
               }, 
               "virus_type": {
                  "enum": [
                     "VIRUS-LIKE PARTICLE", 
                     "VIRION", 
                     "SATELLITE", 
                     "VIROID", 
                     "PRION"
                  ], 
                  "description": "The type of virus.", 
                  "type": "string"
               }, 
               "empty": {
                  "enum": [
                     "YES", 
                     "NO"
                  ], 
                  "description": "Flag to indicate if the virus is empty or not.", 
                  "type": "string"
               }, 
               "virus_host_category": {
                  "description": "The host category description for the virus.", 
                  "examples": [
                     "ALGAE", 
                     "ARCHAEA", 
                     "BACTERIA(EUBACTERIA)", 
                     "FUNGI", 
                     "INVERTEBRATES", 
                     "PLANTAE (HIGHER PLANTS)", 
                     "PROTOZOA", 
                     "VERTEBRATES"
                  ], 
                  "type": "string"
               }, 
               "enveloped": {
                  "enum": [
                     "YES", 
                     "NO"
                  ], 
                  "description": "Flag to indicate if the virus is enveloped or not.", 
                  "type": "string"
               }
            }, 
            "required": [
               "entity_assembly_id", 
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_audit_support": {
         "minItems": 1, 
         "items": {
            "properties": {
               "grant_number": {
                  "description": "The grant number associated with this source of support.", 
                  "type": "string"
               }, 
               "country": {
                  "description": "The country providing the funding support for the entry.", 
                  "type": "string"
               }, 
               "funding_organization": {
                  "description": "The name of the organization providing funding support for the\n entry.", 
                  "examples": [
                     "National Institutes of Health", 
                     "Welcome Trust", 
                     "National Institutes of Health/National Institute of General Medical Sciences"
                  ], 
                  "type": "string"
               }, 
               "ordinal": {
                  "description": "A unique sequential integer identifier for each source of support for this entry.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "integer"
               }
            }, 
            "required": [
               "ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "struct_mon_prot_cis": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_omega_angle": {
                  "description": "omega torsion angle", 
                  "type": "string"
               }, 
               "pdbx_PDB_ins_code": {
                  "description": "Pointer to _atom_site.pdbx_PDB_ins_code", 
                  "type": "string"
               }, 
               "auth_asym_id": {
                  "description": "A component of the identifier for the monomer.\n\n This data item is a pointer to _atom_site.auth_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "pdbx_label_seq_id_2": {
                  "description": "Pointer to _atom_site.label_seq_id", 
                  "type": "integer"
               }, 
               "pdbx_auth_asym_id_2": {
                  "description": "Pointer to _atom_site.auth_asym_id.", 
                  "type": "string"
               }, 
               "label_comp_id": {
                  "description": "A component of the identifier for the monomer.\n\n This data item is a pointer to _atom_site.label_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "label_asym_id": {
                  "description": "A component of the identifier for the monomer.\n\n This data item is a pointer to _atom_site.label_asym_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_seq_id": {
                  "description": "A component of the identifier for the monomer.\n\n This data item is a pointer to _atom_site.auth_seq_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "auth_comp_id": {
                  "description": "A component of the identifier for the monomer.\n\n This data item is a pointer to _atom_site.auth_comp_id in the\n ATOM_SITE category.", 
                  "type": "string"
               }, 
               "pdbx_auth_comp_id_2": {
                  "description": "Pointer to _atom_site.auth_comp_id.", 
                  "type": "string"
               }, 
               "pdbx_PDB_model_num": {
                  "description": "Pointer to _atom_site.pdbx_PDB_model_num", 
                  "type": "integer"
               }, 
               "pdbx_PDB_ins_code_2": {
                  "description": "Pointer to _atom_site.pdbx_PDB_ins_code", 
                  "type": "string"
               }, 
               "pdbx_id": {
                  "description": "ordinal index", 
                  "type": "string"
               }, 
               "label_seq_id": {
                  "description": "A component of the identifier for the monomer.\n\n This data item is a pointer to _atom_site.label_seq_id in the\n ATOM_SITE category.", 
                  "type": "integer"
               }, 
               "pdbx_label_comp_id_2": {
                  "description": "Pointer to _atom_site.label_comp_id.", 
                  "type": "string"
               }, 
               "pdbx_auth_seq_id_2": {
                  "description": "Pointer to _atom_site.auth_seq_id", 
                  "type": "string"
               }, 
               "pdbx_label_asym_id_2": {
                  "description": "Pointer to _atom_site.label_asym_id.", 
                  "type": "string"
               }
            }, 
            "required": [
               "pdbx_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "diffrn_measurement": {
         "minItems": 1, 
         "items": {
            "properties": {
               "details": {
                  "description": "A description of special aspects of the intensity measurement.", 
                  "examples": [
                     "440 frames, 0.20 degrees, 150 sec, detector\n                                  distance 12 cm, detector angle 22.5 degrees"
                  ], 
                  "type": "string"
               }, 
               "diffrn_id": {
                  "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category.", 
                  "type": "string"
               }, 
               "method": {
                  "description": "Method used to measure intensities.", 
                  "examples": [
                     "profile data from theta/2theta scans"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "diffrn_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_3d_reconstruction": {
         "minItems": 1, 
         "items": {
            "properties": {
               "algorithm": {
                  "description": "The algorithm used project from 2D orientations to 3D map.", 
                  "type": "string"
               }, 
               "actual_pixel_size": {
                  "description": "The actual pixel size of projection set of images.", 
                  "examples": [
                     "2.8", 
                     "5.76"
                  ], 
                  "type": "number"
               }, 
               "id": {
                  "description": "The value of _em_3d_reconstruction.id must\n uniquely identify the 3d reconstruction.", 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "Foreign key to the EM_IMAGE_PROCESSING category", 
                  "type": "string"
               }, 
               "method": {
                  "description": "The algorithm method used for the 3d-reconstruction.", 
                  "examples": [
                     "cross-common lines", 
                     "polar Fourier transform (PFT)"
                  ], 
                  "type": "string"
               }, 
               "entry_id": {
                  "description": "This data item is a pointer to _entry.id in the ENTRY category.", 
                  "type": "string"
               }, 
               "details": {
                  "description": "Any additional details used in the 3d reconstruction.", 
                  "examples": [
                     "a modified version of SPIDER program was used for the reconstruction"
                  ], 
                  "type": "string"
               }, 
               "num_class_averages": {
                  "description": "This item was correspondence to two type of em dataset\n processing_emDataSet_singleParticle.numClassAverages\n processing_emDataSet_icosahedral.numClassAverages", 
                  "type": "integer"
               }, 
               "refinement_type": {
                  "enum": [
                     "HALF-MAPS REFINED INDEPENDENTLY WITH FREQUENCY RANGE OMITTED", 
                     "OTHER", 
                     "HALF-MAPS REFINED AGAINST SAME DATA", 
                     "HALF-MAPS REFINED WITH FREQUENCY RANGE OMITTED", 
                     "HALF-MAPS REFINED INDEPENDENTLY"
                  ], 
                  "description": "type of refinement performed in order to determine map resolution", 
                  "examples": [
                     "HALF-MAPS REFINED INDEPENDENTLY"
                  ], 
                  "type": "string"
               }, 
               "symmetry_type": {
                  "enum": [
                     "HELICAL", 
                     "2D CRYSTAL", 
                     "POINT", 
                     "3D CRYSTAL"
                  ], 
                  "description": "The type of symmetry applied to the reconstruction", 
                  "type": "string"
               }, 
               "resolution_method": {
                  "description": "The  method used to determine the final resolution\n of the 3d reconstruction.\n The Fourier Shell Correlation criterion as a measure of\n resolution is based on the concept of splitting the (2D)\n data set into two halves; averaging each and comparing them\n using the Fourier Ring Correlation (FRC) technique.", 
                  "examples": [
                     "FSC at 0.5 cut-off"
                  ], 
                  "type": "string"
               }, 
               "num_particles": {
                  "description": "The number of 2D projections or 3D subtomograms used in the 3d reconstruction", 
                  "type": "integer"
               }, 
               "magnification_calibration": {
                  "description": "The magnification calibration method for the 3d reconstruction.", 
                  "examples": [
                     "TMV images"
                  ], 
                  "type": "string"
               }, 
               "resolution": {
                  "description": "The final resolution (in Angstroms)of the 3D reconstruction.", 
                  "examples": [
                     "8.9", 
                     "10.0"
                  ], 
                  "type": "number"
               }, 
               "nominal_pixel_size": {
                  "description": "The nominal pixel size of the projection set of images.", 
                  "examples": [
                     "3.11", 
                     "6.78"
                  ], 
                  "type": "number"
               }
            }, 
            "required": [
               "id", 
               "image_processing_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_phasing_MAD_set": {
         "minItems": 1, 
         "items": {
            "properties": {
               "reflns": {
                  "description": "_pdbx_phasing_MAD_set.reflns records the number of\n reflections used for MAD phasing.", 
                  "type": "integer"
               }, 
               "reflns_acentric": {
                  "description": "_pdbx_phasing_MAD_set.reflns_acentric records the number of\n acentric reflections for MAD phasing.", 
                  "type": "integer"
               }, 
               "fom_centric": {
                  "description": "_pdbx_phasing_MAD_set.fom_centric  records the figure of merit\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "loc": {
                  "description": "_pdbx_phasing_MAD_set.loc records lack of closure\n for MAD phasing.", 
                  "type": "number"
               }, 
               "fom_acentric": {
                  "description": "_pdbx_phasing_MAD_set.fom_acentric  records the figure of merit\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "R_kraut_centric": {
                  "description": "_pdbx_phasing_MAD_set.R_kraut_centric records r_kraut\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "power_acentric": {
                  "description": "_pdbx_phasing_MAD_set.power_acentric records phasing powe\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "R_kraut_acentric": {
                  "description": "_pdbx_phasing_MAD_set.r_kraut_acentric records r_kraut\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "d_res_low": {
                  "description": "_pdbx_phasing_MAD_set.d_res_low records the lowerest\n resolution for phasing set.", 
                  "type": "number"
               }, 
               "R_kraut": {
                  "description": "_pdbx_phasing_MAD_set.R_kraut records R_kraut\n for MAD phasing.", 
                  "type": "number"
               }, 
               "R_cullis": {
                  "description": "_pdbx_phasing_MAD_set.R_cullis records R_cullis\n for MAD phasing.", 
                  "type": "number"
               }, 
               "power": {
                  "description": "_pdbx_phasing_MAD_set.power records phasing power\n for MAD phasing.", 
                  "type": "number"
               }, 
               "d_res_high": {
                  "description": "_pdbx_phasing_MAD_set.d_res_high records the highest resolution\n for the phasing set.", 
                  "type": "number"
               }, 
               "id": {
                  "description": "_pdbx_phasing_MAD_set.id records phase set name\n for MAD phasing.", 
                  "type": "string"
               }, 
               "R_cullis_acentric": {
                  "description": "_pdbx_phasing_MAD_set.R_cullis_acentric records R_cullis\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "power_centric": {
                  "description": "_pdbx_phasing_MAD_set.power_centric records phasing powe\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "loc_centric": {
                  "description": "_pdbx_phasing_MAD_set.loc_centric records lack of closure\n using centric data for MAD phasing.", 
                  "type": "number"
               }, 
               "loc_acentric": {
                  "description": "_pdbx_phasing_MAD_set.loc_acentric records lack of closure\n using acentric data for MAD phasing.", 
                  "type": "number"
               }, 
               "fom": {
                  "description": "_pdbx_phasing_MAD_set.fom records the figure of merit\n for MAD phasing.", 
                  "type": "number"
               }, 
               "reflns_centric": {
                  "description": "_pdbx_phasing_MAD_set.reflns_centric records the number of\n centric reflections for MAD phasing.", 
                  "type": "integer"
               }, 
               "R_cullis_centric": {
                  "description": "_pdbx_phasing_MAD_set.R_cullis_centric records R_cullis\n using centric data for MAD phasing.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_database_PDB_obs_spr": {
         "minItems": 1, 
         "items": {
            "properties": {
               "date": {
                  "format": "date-time", 
                  "description": "The date of replacement.\n", 
                  "examples": [
                     "1997-03-30"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "Details related to the replaced or replacing entry.\n", 
                  "type": "string"
               }, 
               "id": {
                  "enum": [
                     "SPRSDE", 
                     "OBSLTE"
                  ], 
                  "description": "Identifier for the type of obsolete entry to be added to this entry.", 
                  "examples": [
                     "OBSLTE"
                  ], 
                  "type": "string"
               }, 
               "replace_pdb_id": {
                  "description": "The PDB identifier for the replaced (OLD) entry/entries.\n", 
                  "examples": [
                     "3ABC"
                  ], 
                  "type": "string"
               }, 
               "pdb_id": {
                  "description": "The new PDB identifier for the replaced entry.\n", 
                  "examples": [
                     "2ABC"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "pdb_id", 
               "replace_pdb_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine_occupancy": {
         "minItems": 1, 
         "items": {
            "properties": {
               "treatment": {
                  "enum": [
                     "fix", 
                     "ref"
                  ], 
                  "description": "The treatment of occupancies for a class of atoms\n described in _refine_occupancy.class.", 
                  "type": "string"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_occupancy.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "class": {
                  "description": "The class of atoms treated similarly for occupancy refinement.", 
                  "examples": [
                     "all", 
                     "protein", 
                     "solvent", 
                     "sugar-phosphate backbone"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "class", 
               "pdbx_refine_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_embedding": {
         "minItems": 1, 
         "items": {
            "properties": {
               "material": {
                  "description": "The embedding  material.", 
                  "examples": [
                     "tannin and glucose"
                  ], 
                  "type": "string"
               }, 
               "details": {
                  "description": "Staining procedure used in the specimen preparation.", 
                  "examples": [
                     "The crystal suspension was injected into the lens of a drop of buffer containing\n  1 % tannin sitting on a carbon film supported by a molybdenum grid.  An equal volume\n  of 1% glucose was then added and the solution thoroughly but gently mixed.  The grid\n  was then blotted, air dried, and frozen in LN2."
                  ], 
                  "type": "string"
               }, 
               "id": {
                  "description": "This data item is the primary key of the category.", 
                  "type": "string"
               }, 
               "specimen_id": {
                  "description": "Foreign key relationship to the EMD SPECIMEN category", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_reflns_twin": {
         "minItems": 1, 
         "items": {
            "properties": {
               "crystal_id": {
                  "description": "The crystal identifier.  A reference to\n _exptl_crystal.id in category EXPTL_CRYSTAL.", 
                  "type": "string"
               }, 
               "fraction": {
                  "description": "\nThe twin fraction or twin factor represents a quantitative parameter for the\ncrystal twinning.  The value 0 represents no twinning, < 0.5 partial twinning,\n = 0.5 for perfect twinning.", 
                  "type": "number"
               }, 
               "diffrn_id": {
                  "description": "The diffraction data set identifier.  A reference to\n _diffrn.id in category DIFFRN.", 
                  "type": "string"
               }, 
               "type": {
                  "enum": [
                     "pseudo-merohedral", 
                     "non-merohedral", 
                     "merohedral", 
                     "tetartohedral", 
                     "hemihedral", 
                     "epitaxial"
                  ], 
                  "description": "\nThere are two types of twinning: merohedral or hemihedral\n                                 non-merohedral or epitaxial\n\nFor merohedral twinning the diffraction patterns from the different domains are\ncompletely superimposable.   Hemihedral twinning is a special case of merohedral\ntwinning. It only involves two distinct domains.  Pseudo-merohedral twinning is\na subclass merohedral twinning in which lattice is coincidentally superimposable.\n\nIn the case of non-merohedral or epitaxial twinning  the reciprocal\nlattices do not superimpose exactly. In this case the  diffraction pattern\nconsists of two (or more) interpenetrating lattices, which can in principle\nbe separated.", 
                  "type": "string"
               }, 
               "operator": {
                  "description": "\n\nThe possible merohedral or hemihedral twinning operators for different\npoint groups are:\n\nTrue point group  \tTwin operation  \thkl related to\n3                      \t2 along a,b             h,-h-k,-l\n                       \t2 along a*,b*           h+k,-k,-l\n                        2 along c               -h,-k,l\n4                       2 along a,b,a*,b*       h,-k,-l\n6                       2 along a,b,a*,b*       h,-h-k,-l\n321                     2 along a*,b*,c         -h,-k,l\n312                     2 along a,b,c           -h,-k,l\n23                      4 along a,b,c            k,-h,l\n\nReferences:\n Yeates, T.O. (1997) Methods in Enzymology 276, 344-358. Detecting and\n Overcoming Crystal Twinning.\n\n and information from the following on-line sites:\n\n   CNS site http://cns.csb.yale.edu/v1.1/\n   CCP4 site http://www.ccp4.ac.uk/dist/html/detwin.html\n   SHELX site http://shelx.uni-ac.gwdg.de/~rherbst/twin.html\n", 
                  "examples": [
                     "h,-h-k,-l", 
                     "h+k,-k,-l", 
                     "-h,-k,l", 
                     "h,-k,-l", 
                     "h,-h-k,-l", 
                     "-h,-k,l", 
                     "-h,-k,l", 
                     "k,-h,l"
                  ], 
                  "type": "string"
               }, 
               "domain_id": {
                  "description": "An identifier for the twin domain.", 
                  "type": "string"
               }
            }, 
            "required": [
               "crystal_id", 
               "diffrn_id", 
               "operator"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_exptl": {
         "minItems": 1, 
         "items": {
            "properties": {
               "experiment_id": {
                  "description": "A numerical ID for each experiment.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }, 
               "solution_id": {
                  "description": "The solution_id from the Experimental Sample to identify the sample\n that these conditions refer to.\n\n [Remember to save the entries here before returning to the\n  Experimental Sample form]", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }, 
               "spectrometer_id": {
                  "description": "\nPointer to '_pdbx_nmr_spectrometer.spectrometer_id'", 
                  "type": "integer"
               }, 
               "type": {
                  "description": "The type of NMR experiment.", 
                  "examples": [
                     "2D NOESY", 
                     "3D_15N-separated_NOESY", 
                     "3D_13C-separated_NOESY", 
                     "4D_13C-separated_NOESY", 
                     "4D_13C/15N-separated_NOESY", 
                     "3D_15N-separated_ROESY", 
                     "3D_13C-separated_ROESY", 
                     "HNCA-J", 
                     "HNHA", 
                     "DQF-COSY", 
                     "P-COSY", 
                     "PE-COSY", 
                     "E-COSY"
                  ], 
                  "type": "string"
               }, 
               "sample_state": {
                  "enum": [
                     "anisotropic", 
                     "isotropic"
                  ], 
                  "description": "\nPhysical state of the sample either anisotropic or isotropic.", 
                  "examples": [
                     "isotropic"
                  ], 
                  "type": "string"
               }, 
               "conditions_id": {
                  "description": "The number to identify the set of sample conditions.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "conditions_id", 
               "experiment_id", 
               "solution_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_diffrn_reflns_shell": {
         "minItems": 1, 
         "items": {
            "properties": {
               "percent_possible_obs": {
                  "description": "The percentage of geometrically possible reflections represented\n by reflections that satisfy the resolution limits established\n by _diffrn_reflns_shell.d_resolution_high and\n _diffrn_reflns_shell.d_resolution_low and the observation limit\n established by  _diffrn_reflns.observed_criterion.\n", 
                  "type": "number"
               }, 
               "chi_squared": {
                  "description": "The overall Chi-squared statistic for the resolution shell.", 
                  "type": "number"
               }, 
               "rejects": {
                  "description": "The number of rejected reflections in the resolution shell", 
                  "type": "integer"
               }, 
               "d_res_low": {
                  "description": "The lowest resolution for the interplanar spacings in the\n           resolution shell.", 
                  "type": "number"
               }, 
               "diffrn_id": {
                  "description": "This data item is a pointer to _diffrn.id in the DIFFRN category.\n This item distingush the different data sets", 
                  "type": "string"
               }, 
               "d_res_high": {
                  "description": "The highest resolution for the interplanar spacings in the\n resolution shell.\n", 
                  "type": "number"
               }, 
               "Rmerge_I_obs": {
                  "description": "The R factor for the reflections that satisfy the merging\n criteria for the resolution shell.", 
                  "type": "number"
               }, 
               "number_obs": {
                  "description": "The number of observed reflections in the resolution shell.", 
                  "type": "integer"
               }, 
               "redundancy": {
                  "description": "The overall redundancy for the resolution shell.", 
                  "type": "number"
               }, 
               "Rsym_value": {
                  "description": "The R factor for averaging the symmetry related reflections\n for the resolution shell.", 
                  "type": "number"
               }
            }, 
            "required": [
               "d_res_high", 
               "d_res_low", 
               "diffrn_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refine_ls_restr_ncs": {
         "minItems": 1, 
         "items": {
            "properties": {
               "dom_id": {
                  "description": "This data item is a pointer to _struct_ncs_dom.id in the\n STRUCT_NCS_DOM category.", 
                  "type": "string"
               }, 
               "pdbx_ordinal": {
                  "description": "An ordinal index for the list of NCS restraints.", 
                  "type": "integer"
               }, 
               "pdbx_auth_asym_id": {
                  "description": "A reference to the PDB Chain ID", 
                  "type": "string"
               }, 
               "pdbx_asym_id": {
                  "description": "A reference to  _struct_asym.id.", 
                  "type": "string"
               }, 
               "rms_dev_position": {
                  "description": "The root-mean-square deviation in equivalent atom positions in\n the domain specified by _refine_ls_restr_ncs.dom_id and in the\n domains against which it was restrained.", 
                  "type": "number"
               }, 
               "weight_position": {
                  "description": "The value of the weighting coefficient used in\n noncrystallographic symmetry restraint of atom positions in the\n domain specified by _refine_ls_restr_ncs.dom_id to equivalent\n atom positions in the domains against which it was restrained.", 
                  "type": "number"
               }, 
               "ncs_model_details": {
                  "description": "Special aspects of the manner in which noncrystallographic\n restraints were applied to atomic parameters in the domain\n specified by _refine_ls_restr_ncs.dom_id and equivalent\n atomic parameters in the domains against which it was restrained.", 
                  "type": "string"
               }, 
               "pdbx_weight": {
                  "description": "Records the weight used for NCS restraint.", 
                  "type": "number"
               }, 
               "pdbx_number": {
                  "description": "Records the number restraints in the contributing to the RMS statistic.", 
                  "type": "integer"
               }, 
               "pdbx_type": {
                  "description": "The type of NCS restraint. (for example: tight positional)", 
                  "type": "string"
               }, 
               "pdbx_refine_id": {
                  "description": "This data item uniquely identifies a refinement within an entry.\n _refine_ls_restr_ncs.pdbx_refine_id can be used to distinguish the results\n of joint refinements.", 
                  "type": "string"
               }, 
               "weight_B_iso": {
                  "description": "The value of the weighting coefficient used in\n noncrystallographic symmetry restraint of isotropic displacement\n parameters in  the domain specified by\n _refine_ls_restr_ncs.dom_id to equivalent isotropic\n displacement parameters in the domains against\n which it was restrained.", 
                  "type": "number"
               }, 
               "pdbx_ens_id": {
                  "description": "This is a unique identifier for a collection NCS related domains.\n This references item '_struct_ncs_dom.pdbx_ens_id'.\n", 
                  "type": "string"
               }, 
               "pdbx_rms": {
                  "description": "Records the standard deviation in the restraint between NCS related domains.", 
                  "type": "number"
               }, 
               "rms_dev_B_iso": {
                  "description": "The root-mean-square deviation in equivalent isotropic\n displacement parameters in the domain specified by\n _refine_ls_restr_ncs.dom_id\n and in the domains against which it was restrained.", 
                  "type": "number"
               }
            }, 
            "required": [
               "pdbx_ordinal"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "diffrn_radiation": {
         "minItems": 1, 
         "items": {
            "properties": {
               "pdbx_scattering_type": {
                  "enum": [
                     "x-ray", 
                     "neutron", 
                     "electron"
                  ], 
                  "description": "The radiation scattering type for this diffraction data set.", 
                  "type": "string"
               }, 
               "wavelength_id": {
                  "description": "This data item is a pointer to _diffrn_radiation_wavelength.id\n in the DIFFRN_RADIATION_WAVELENGTH category.", 
                  "type": "string"
               }, 
               "diffrn_id": {
                  "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category.", 
                  "type": "string"
               }, 
               "pdbx_diffrn_protocol": {
                  "description": "SINGLE WAVELENGTH, LAUE, or MAD.", 
                  "examples": [
                     "SINGLE WAVELENGTH", 
                     "MONOCHROMATIC", 
                     "LAUE", 
                     "MAD", 
                     "OTHER"
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "description": "The nature of the radiation. This is typically a description\n of the X-ray wavelength in Siegbahn notation.", 
                  "examples": [
                     "CuK\\a", 
                     "Cu K\\a~1~", 
                     "Cu K-L~2,3~", 
                     "white-beam"
                  ], 
                  "type": "string"
               }, 
               "pdbx_monochromatic_or_laue_m_l": {
                  "enum": [
                     "M", 
                     "L"
                  ], 
                  "description": "Monochromatic or Laue.", 
                  "examples": [
                     "M", 
                     "L"
                  ], 
                  "type": "string"
               }, 
               "pdbx_wavelength_list": {
                  "description": "Comma separated list of wavelengths or wavelength range.", 
                  "type": "string"
               }, 
               "monochromator": {
                  "description": "The method used to obtain monochromatic radiation. If a mono-\n chromator crystal is used, the material and the indices of the\n Bragg reflection are specified.", 
                  "examples": [
                     "Zr filter", 
                     "Ge 220", 
                     "none", 
                     "equatorial mounted graphite"
                  ], 
                  "type": "string"
               }, 
               "collimation": {
                  "description": "The collimation or focusing applied to the radiation.", 
                  "examples": [
                     "0.3 mm double-pinhole", 
                     "0.5 mm", 
                     "focusing mirrors"
                  ], 
                  "type": "string"
               }, 
               "pdbx_wavelength": {
                  "description": "Wavelength of radiation.", 
                  "type": "string"
               }
            }, 
            "required": [
               "diffrn_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_2d_crystal_entity": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "Unique key for the 2d_crystal_entity category.", 
                  "type": "string"
               }, 
               "image_processing_id": {
                  "description": "pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.", 
                  "type": "string"
               }, 
               "length_b": {
                  "description": "Unit-cell length b in Angstroms.", 
                  "type": "number"
               }, 
               "length_a": {
                  "description": "Unit-cell length a in Angstroms.", 
                  "type": "number"
               }, 
               "c_sampling_length": {
                  "description": "Length used to sample the reciprocal lattice lines in the c-direction.", 
                  "type": "number"
               }, 
               "space_group_name_H_M": {
                  "enum": [
                     "P 6", 
                     "C 2 2 2", 
                     "C 1 2", 
                     "P 4 21 2", 
                     "P 1 21", 
                     "P 4", 
                     "P 2 21 21", 
                     "P 1", 
                     "P 2 2 21", 
                     "P 3", 
                     "P 2", 
                     "P 1 2", 
                     "P 3 1 2", 
                     "P 3 2 1", 
                     "P 2 2 2", 
                     "P 4 2 2", 
                     "P 6 2 2"
                  ], 
                  "description": "There are 17 plane groups classified as oblique, rectangular, square, and hexagonal.\n To describe the symmetry of 2D crystals of biological molecules,\n plane groups are expanded to equivalent noncentrosymmetric space groups.\n The 2D crystal plane corresponds to the 'ab' plane of the space group.\n\n Enumerated space group descriptions include the plane group number in parentheses,\n the H-M plane group symbol, and the plane group class.", 
                  "type": "string"
               }, 
               "angle_gamma": {
                  "description": "Unit-cell angle gamma in degrees.", 
                  "type": "number"
               }, 
               "length_c": {
                  "description": "Thickness of 2D crystal", 
                  "type": "number"
               }
            }, 
            "required": [
               "id", 
               "image_processing_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "diffrn_reflns": {
         "minItems": 1, 
         "items": {
            "properties": {
               "av_sigmaI_over_netI": {
                  "description": "Measure [sum|sigma(I)|/sum|net(I)|] for all measured reflections.", 
                  "type": "number"
               }, 
               "pdbx_Rmerge_I_obs": {
                  "description": "The R factor for merging the reflections that satisfy the\n resolution limits established by _diffrn_reflns.d_resolution_high\n and _diffrn_reflns.d_resolution_low and the observation limit\n established by _diffrn_reflns.observed_criterion.\n\n\n      Rmerge(I) = [sum~i~(sum~j~|I~j~ - |)] / [sum~i~(sum~j~)]\n\n\n      I~j~ = the intensity of the jth observation of reflection i\n        = the mean of the amplitudes of all observations of\n             reflection i\n\n      sum~i~ is taken over all reflections\n      sum~j~ is taken over all observations of each reflection\n", 
                  "type": "number"
               }, 
               "av_R_equivalents": {
                  "description": "The residual [sum|avdel(I)| / sum|av(I)|] for symmetry-equivalent\n reflections used to calculate the average intensity av(I). The\n avdel(I) term is the average absolute difference between av(I)\n and the individual symmetry-equivalent intensities.", 
                  "type": "number"
               }, 
               "pdbx_chi_squared": {
                  "description": "Overall  Chi-squared statistic for the data set.", 
                  "type": "number"
               }, 
               "pdbx_number_obs": {
                  "description": "The  number of reflections satisfying the observation criterion\n as in _diffrn_reflns.pdbx_observed_criterion\n", 
                  "type": "integer"
               }, 
               "diffrn_id": {
                  "description": "This data item is a pointer to _diffrn.id in the DIFFRN\n category.", 
                  "type": "string"
               }, 
               "pdbx_d_res_low": {
                  "description": "The lowest resolution for the interplanar spacings in the\n reflection data set. This is the largest d value.", 
                  "type": "number"
               }, 
               "limit_l_min": {
                  "description": "The minimum value of the Miller index l for the\n reflection data specified by _diffrn_refln.index_l.", 
                  "type": "integer"
               }, 
               "pdbx_Rsym_value": {
                  "description": "The R factor for averaging the symmetry related reflections to a\n unique data set.", 
                  "type": "number"
               }, 
               "number": {
                  "description": "The total number of measured intensities, excluding reflections\n that are classified as systematically absent.", 
                  "type": "integer"
               }, 
               "pdbx_rejects": {
                  "description": "The number of rejected reflections in the data set.\n The reflections may be rejected by setting the\n observation criterion, _diffrn_reflns.observed_criterion.", 
                  "type": "integer"
               }, 
               "limit_l_max": {
                  "description": "The maximum value of the Miller index l for the\n reflection data specified by _diffrn_refln.index_l.", 
                  "type": "integer"
               }, 
               "pdbx_redundancy": {
                  "description": "The overall redundancy for the data set.", 
                  "type": "number"
               }, 
               "limit_h_max": {
                  "description": "The maximum value of the Miller index h for the\n reflection data specified by _diffrn_refln.index_h.", 
                  "type": "integer"
               }, 
               "limit_k_min": {
                  "description": "The minimum value of the Miller index k for the\n reflection data specified by _diffrn_refln.index_k.", 
                  "type": "integer"
               }, 
               "limit_h_min": {
                  "description": "The minimum value of the Miller index h for the\n reflection data specified by _diffrn_refln.index_h.", 
                  "type": "integer"
               }, 
               "limit_k_max": {
                  "description": "The maximum value of the Miller index k for the\n reflection data specified by _diffrn_refln.index_k.", 
                  "type": "integer"
               }, 
               "pdbx_percent_possible_obs": {
                  "description": "The percentage of geometrically possible reflections represented\n by reflections that satisfy the resolution limits established\n by _diffrn_reflns.d_resolution_high and _diffrn_reflns.d_resolution_low and\n the observation limit established by   _diffrn_reflns.observed_criterion.\n", 
                  "type": "number"
               }, 
               "pdbx_d_res_high": {
                  "description": "The highest resolution for the interplanar spacings in the\n reflection data set. This is the smallest d value.\n", 
                  "type": "number"
               }
            }, 
            "required": [
               "diffrn_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "phasing_set": {
         "minItems": 1, 
         "items": {
            "properties": {
               "cell_length_b": {
                  "description": "Unit-cell length b for this data set in angstroms.", 
                  "type": "number"
               }, 
               "id": {
                  "description": "The value of _phasing_set.id must uniquely identify\n a record in the PHASING_SET list.\n\n Note that this item need not be a number; it can be any unique\n identifier.", 
                  "examples": [
                     "KAu(CN)2", 
                     "K2HgI4"
                  ], 
                  "type": "string"
               }, 
               "pdbx_d_res_low": {
                  "description": "The highest value in angstroms for the interplanar spacings\n for the reflections in this shell. This is called the lowest\n resolution.", 
                  "type": "number"
               }, 
               "cell_angle_gamma": {
                  "description": "Unit-cell angle gamma for this data set in degrees.", 
                  "type": "number"
               }, 
               "cell_angle_beta": {
                  "description": "Unit-cell angle beta for this data set in degrees.", 
                  "type": "number"
               }, 
               "cell_length_a": {
                  "description": "Unit-cell length a for this data set in angstroms.", 
                  "type": "number"
               }, 
               "cell_length_c": {
                  "description": "Unit-cell length c for this data set in angstroms.", 
                  "type": "number"
               }, 
               "cell_angle_alpha": {
                  "description": "Unit-cell angle alpha for this data set in degrees.", 
                  "type": "number"
               }, 
               "pdbx_d_res_high": {
                  "description": "The smallest value in angstroms for the interplanar spacings\n for the reflections in this shell. This is called the highest\n resolution.", 
                  "type": "number"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "refln_sys_abs": {
         "minItems": 1, 
         "items": {
            "properties": {
               "index_h": {
                  "description": "Miller index h of the reflection. The values of the Miller\n indices in the REFLN_SYS_ABS category must correspond to\n the cell defined by cell lengths and cell angles in the CELL\n category.", 
                  "type": "integer"
               }, 
               "index_k": {
                  "description": "Miller index k of the reflection. The values of the Miller\n indices in the REFLN_SYS_ABS category must correspond to the\n cell defined by cell lengths and cell angles in the CELL\n category.", 
                  "type": "integer"
               }, 
               "index_l": {
                  "description": "Miller index l of the reflection. The values of the Miller\n indices in the REFLN_SYS_ABS category must correspond to the\n cell defined by cell lengths and cell angles in the CELL\n category.", 
                  "type": "integer"
               }, 
               "sigmaI": {
                  "description": "The standard uncertainty (estimated standard deviation) of\n _refln_sys_abs.I in arbitrary units.", 
                  "type": "number"
               }, 
               "I": {
                  "description": "The measured value of the intensity in arbitrary units.", 
                  "type": "number"
               }, 
               "I_over_sigmaI": {
                  "description": "The ratio of _refln_sys_abs.I to _refln_sys_abs.sigmaI.  Used\n to evaluate whether a reflection that should be systematically\n absent according to the designated space group is in fact\n absent.", 
                  "type": "number"
               }
            }, 
            "required": [
               "index_h", 
               "index_k", 
               "index_l"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_database_remark": {
         "minItems": 1, 
         "items": {
            "properties": {
               "id": {
                  "description": "A unique identifier for the PDB remark record.", 
                  "type": "integer"
               }, 
               "text": {
                  "description": "The full text of the PDB remark record.", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "pdbx_nmr_spectrometer": {
         "minItems": 1, 
         "items": {
            "properties": {
               "details": {
                  "description": "\nA text description of the NMR spectrometer.", 
                  "type": "string"
               }, 
               "model": {
                  "description": "\nThe model of the NMR spectrometer.", 
                  "examples": [
                     "AVANCE", 
                     "WH", 
                     "WM", 
                     "AM", 
                     "AMX", 
                     "DMX", 
                     "DRX", 
                     "MSL", 
                     "OMEGA", 
                     "OMEGA PSG", 
                     "GX", 
                     "GSX", 
                     "A", 
                     "AL", 
                     "EC", 
                     "EX", 
                     "LA", 
                     "ECP", 
                     "VXRS", 
                     "UNITY", 
                     "UNITYPLUS", 
                     "INOVA"
                  ], 
                  "type": "string"
               }, 
               "type": {
                  "description": "\nSelect the instrument manufacturer(s) and the model(s) of the NMR(s)\nused for this work.", 
                  "examples": [
                     "Bruker WH", 
                     "Bruker WM", 
                     "Bruker AM", 
                     "Bruker AMX", 
                     "Bruker DMX", 
                     "Bruker DRX", 
                     "Bruker MSL", 
                     "Bruker AVANCE", 
                     "GE Omega", 
                     "GE Omega PSG", 
                     "JEOL GX", 
                     "JEOL GSX", 
                     "JEOL A", 
                     "JEOL AL", 
                     "JEOL EC", 
                     "JEOL EX", 
                     "JEOL LA", 
                     "JEOL ECP", 
                     "Varian VXRS", 
                     "Varian UNITY", 
                     "Varian UNITYplus", 
                     "Varian INOVA", 
                     "other"
                  ], 
                  "type": "string"
               }, 
               "field_strength": {
                  "description": "\nSelect the field strength for protons in MHz.", 
                  "examples": [
                     "360", 
                     "400", 
                     "500", 
                     "600", 
                     "750", 
                     "800", 
                     "850", 
                     "900", 
                     "950", 
                     "1000"
                  ], 
                  "type": "number"
               }, 
               "spectrometer_id": {
                  "description": "\nAssign a numerical ID to each instrument.", 
                  "examples": [
                     "1", 
                     "2", 
                     "3"
                  ], 
                  "type": "string"
               }, 
               "manufacturer": {
                  "description": "\nThe name of the manufacturer of the spectrometer.", 
                  "examples": [
                     "Varian", 
                     "Bruker", 
                     "JEOL", 
                     "GE"
                  ], 
                  "type": "string"
               }
            }, 
            "required": [
               "spectrometer_id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }, 
      "em_diffraction": {
         "minItems": 1, 
         "items": {
            "properties": {
               "tilt_angle_list": {
                  "description": "Comma-separated list of tilt angles (in degrees) used in the electron diffraction experiment.", 
                  "examples": [
                     "20,40,50,55"
                  ], 
                  "type": "string"
               }, 
               "camera_length": {
                  "description": "TODO", 
                  "examples": [
                     "800"
                  ], 
                  "type": "number"
               }, 
               "id": {
                  "description": "Primary key", 
                  "type": "string"
               }, 
               "imaging_id": {
                  "description": "Foreign key to the EM_IMAGING category", 
                  "type": "string"
               }
            }, 
            "required": [
               "id"
            ], 
            "type": "object"
         }, 
         "uniqueItems": true, 
         "type": "array"
      }
   }, 
   "$schema": "http://json-schema.org/draft-04/schema#", 
   "title": "Schema for content type pdbx collection pdbx_v5_0_2", 
   "type": "object"
}